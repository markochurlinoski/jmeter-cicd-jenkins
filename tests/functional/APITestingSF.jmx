<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="salesForceUrl" elementType="Argument">
            <stringProp name="Argument.name">salesForceUrl</stringProp>
            <stringProp name="Argument.value">na174.salesforce.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceLeadAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceLeadAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Lead/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="authorization" elementType="Argument">
            <stringProp name="Argument.name">authorization</stringProp>
            <stringProp name="Argument.value">Bearer GKtyDQUtr9QgXLoKbVMv8j0gEIXB5tXs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceSOAP" elementType="Argument">
            <stringProp name="Argument.name">salesForceSOAP</stringProp>
            <stringProp name="Argument.value">services/Soap/u/47.0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loginSalesForce" elementType="Argument">
            <stringProp name="Argument.name">loginSalesForce</stringProp>
            <stringProp name="Argument.value">login.salesforce.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceAccountAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceAccountAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Account/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceContactAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceContactAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Contact/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceOpportunityAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceOpportunityAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Opportunity/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceCampaignAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceCampaignAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Campaign/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceCaseAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceCaseAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Case/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceTaskAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceTaskAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Task/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceAssetAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceAssetAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Asset/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceProduct2API" elementType="Argument">
            <stringProp name="Argument.name">salesForceProduct2API</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Product2/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceContractAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceContractAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Contract/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceOrderAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceOrderAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Order/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceNoteAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceNoteAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Note/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForcePriceBookAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForcePriceBookAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Pricebook2/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceQuoteAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceQuoteAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Quote/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceEmailMessageAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceEmailMessageAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/EmailMessage/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForceOpportunityItemAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForceOpportunityItemAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/OpportunityLineItem/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="salesForcePaymentAPI" elementType="Argument">
            <stringProp name="Argument.name">salesForcePaymentAPI</stringProp>
            <stringProp name="Argument.value">/services/data/v48.0/sobjects/Payment/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1582804927000</longProp>
        <longProp name="ThreadGroup.end_time">1582804927000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">${duration}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login in SalesForce " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:urn=&quot;urn:partner.soap.sforce.com&quot;&gt;&#xd;
   &lt;soapenv:Header&gt;&#xd;
   &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body&gt;&#xd;
      &lt;urn:login&gt;&#xd;
         &lt;urn:username&gt;tanja@interworks.com.mk&lt;/urn:username&gt;&#xd;
         &lt;urn:password&gt;InterWorks88g66CdVR0s0LXVn2gNqeGGaBqg&lt;/urn:password&gt;&#xd;
      &lt;/urn:login&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${loginSalesForce}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${salesForceSOAP}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">text/xml;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip,deflate</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">&quot;urn:enterprise.soap.sforce.com/Soap/loginRequest&quot;</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Session Id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">SessionId</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;sessionId&gt;(.+?)&lt;/sessionId&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">Not Found</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Session Id Assertion " enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1218933065">&lt;sessionId&gt;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
            <stringProp name="Assertion.custom_message"></stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Lead" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CreateLead" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;LastName&quot;:&quot;${lastName}&quot;,&#xd;
&quot;FirstName&quot;:&quot;${firstName}&quot;,&#xd;
&quot;Salutation&quot;:&quot;${salutation}&quot;,&#xd;
&quot;Title&quot;:&quot;${title}&quot;,&#xd;
&quot;Company&quot;:&quot;${company}&quot;,&#xd;
&quot;Street&quot;:&quot;${street}&quot;,&#xd;
&quot;City&quot;:&quot;${city}&quot;,&#xd;
&quot;State&quot;:&quot;${state}&quot;,&#xd;
&quot;PostalCode&quot;:&quot;${postalCode}&quot;,&#xd;
&quot;Country&quot;:&quot;${country}&quot;,&#xd;
&quot;Phone&quot;:&quot;${phone}&quot;,&#xd;
&quot;MobilePhone&quot;:&quot;${mobilePhone}&quot;,&#xd;
&quot;Fax&quot;:&quot;${fax}&quot;,&#xd;
&quot;Email&quot;:&quot;${email}&quot;,&#xd;
&quot;Website&quot;:&quot;${website}&quot;,&#xd;
&quot;Description&quot;:&quot;${description}&quot;,&#xd;
&quot;LeadSource&quot;:&quot;${leadSource}&quot;,&#xd;
&quot;Status&quot;:&quot;${status}&quot;,&#xd;
&quot;Industry&quot;:&quot;${industry}&quot;,&#xd;
&quot;Rating&quot;:&quot;${rating}&quot;,&#xd;
&quot;AnnualRevenue&quot;:&quot;${annualRevenue}&quot;,&#xd;
&quot;NumberOfEmployees&quot;:&quot;${numberOfEmployees}&quot;,&#xd;
&quot;Jigsaw&quot;:&quot;${jigsaw}&quot;,&#xd;
&quot;CleanStatus&quot;:&quot;${cleanStatus}&quot;,&#xd;
&quot;CompanyDunsNumber&quot;:&quot;${companyDunsNumber}&quot;,&#xd;
&quot;SICCode__c&quot;:&quot;${sICCode__c}&quot;,&#xd;
&quot;ProductInterest__c&quot;:&quot;${productInterest__c}&quot;,&#xd;
&quot;Primary__c&quot;:&quot;${primary__c}&quot;,&#xd;
&quot;CurrentGenerators__c&quot;:&quot;${currentGenerators__c}&quot;,&#xd;
&quot;NumberofLocations__c&quot;:&quot;${numberofLocations__c}&quot;,&#xd;
&quot;Latitude&quot;:&quot;${Latitude}&quot;,&#xd;
&quot;Longitude&quot;:&quot;${Longitude}&quot;,&#xd;
&quot;GeocodeAccuracy&quot;:&quot;&quot;,&#xd;
&quot;IsConverted&quot;:&quot;${IsConverted}&quot;,&#xd;
&quot;DandbCompanyId&quot;:&quot;&quot;,&#xd;
&quot;IndividualId&quot;:&quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceLeadAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1459599807">lastName</stringProp>
                <stringProp name="132835675">firstName</stringProp>
                <stringProp name="-1230813672">salutation</stringProp>
                <stringProp name="110371416">title</stringProp>
                <stringProp name="950484093">company</stringProp>
                <stringProp name="-891990013">street</stringProp>
                <stringProp name="3053931">city</stringProp>
                <stringProp name="109757585">state</stringProp>
                <stringProp name="2011152728">postalCode</stringProp>
                <stringProp name="957831062">country</stringProp>
                <stringProp name="106642798">phone</stringProp>
                <stringProp name="-1327967764">mobilePhone</stringProp>
                <stringProp name="101149">fax</stringProp>
                <stringProp name="96619420">email</stringProp>
                <stringProp name="1224335515">website</stringProp>
                <stringProp name="-1724546052">description</stringProp>
                <stringProp name="674365079">leadSource</stringProp>
                <stringProp name="-892481550">status</stringProp>
                <stringProp name="127156702">industry</stringProp>
                <stringProp name="-938102371">rating</stringProp>
                <stringProp name="-209460931">annualRevenue</stringProp>
                <stringProp name="1565177957">numberOfEmployees</stringProp>
                <stringProp name="-1198400285">isUnreadByOwner</stringProp>
                <stringProp name="-1160125471">jigsaw</stringProp>
                <stringProp name="-841033829">cleanStatus</stringProp>
                <stringProp name="-1171523236">companyDunsNumber</stringProp>
                <stringProp name="-808702487">sICCode__c</stringProp>
                <stringProp name="-1610792790">productInterest__c</stringProp>
                <stringProp name="-1274901695">primary__c</stringProp>
                <stringProp name="-1542221942">currentGenerators__c</stringProp>
                <stringProp name="428716901">numberofLocations__c</stringProp>
                <stringProp name="-1375334260">Latitude</stringProp>
                <stringProp name="2141333903">Longitude</stringProp>
                <stringProp name="1820484535">GeocodeAccuracy</stringProp>
                <stringProp name="-1798409368">IsConverted</stringProp>
                <stringProp name="2106814345">DandbCompanyId</stringProp>
                <stringProp name="-1372930636">IndividualId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1903501791">
                  <stringProp name="-932630640">Kostevska${__RandomString(5,1234567890)}</stringProp>
                  <stringProp name="-2099297335">Anja ${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="68928">Dr.</stringProp>
                  <stringProp name="423561888">Lead ${__RandomString(4,1234567890)}</stringProp>
                  <stringProp name="2350">IW</stringProp>
                  <stringProp name="-1499164320">${__RandomString(4,1234567890)} Van Ness Ave</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="2142">CA</stringProp>
                  <stringProp name="54238463">94109</stringProp>
                  <stringProp name="2718">US</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="-704062497">${__RandomString(10,1234567890)}</stringProp>
                  <stringProp name="-1921141533">${__RandomString(5,1234567890)}</stringProp>
                  <stringProp name="1900833474">test${__RandomString(5,1234567890)}@gmail.com</stringProp>
                  <stringProp name="-526278853">www.testsalesforce.com</stringProp>
                  <stringProp name="1571318715">Test for Create Lead</stringProp>
                  <stringProp name="86836">Web</stringProp>
                  <stringProp name="1195425545">Open - Not Contacted</stringProp>
                  <stringProp name="74219460">Media</stringProp>
                  <stringProp name="2106116">Cold</stringProp>
                  <stringProp name="-1426612593">${__Random(5,9874563,)}</stringProp>
                  <stringProp name="101092967">${__RandomString(1,1234567890)}</stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="-1921141533">${__RandomString(5,1234567890)}</stringProp>
                  <stringProp name="982065527">Pending</stringProp>
                  <stringProp name="-910024283">${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="-1415582908">${__RandomString(4,1234567890)}</stringProp>
                  <stringProp name="1868267138">${__RandomString(6,1234567890)}</stringProp>
                  <stringProp name="2529">No</stringProp>
                  <stringProp name="63116079">Admin</stringProp>
                  <stringProp name="-1814162734">${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="1447077568">40.25698</stringProp>
                  <stringProp name="-1308681674">70.2564</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Lead" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceLeadAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="lastName" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">lastName</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;LastName&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1821567492">&quot;Id&quot;:&quot;${id}&quot;</stringProp>
                <stringProp name="1667610180">&quot;LastName&quot;:&quot;${lastName}&quot;</stringProp>
                <stringProp name="978713464">&quot;FirstName&quot;:&quot;${firstName}&quot;</stringProp>
                <stringProp name="-559016348">&quot;Salutation&quot;:&quot;${salutation}&quot;</stringProp>
                <stringProp name="-626112078">&quot;Title&quot;:&quot;${title}&quot;</stringProp>
                <stringProp name="705563452">&quot;Company&quot;:&quot;${company}&quot;</stringProp>
                <stringProp name="1846872068">&quot;Street&quot;:&quot;${street}&quot;</stringProp>
                <stringProp name="1500181380">&quot;City&quot;:&quot;${city}&quot;</stringProp>
                <stringProp name="2076530276">&quot;State&quot;:&quot;${state}&quot;</stringProp>
                <stringProp name="-585486748">&quot;PostalCode&quot;:&quot;${postalCode}&quot;</stringProp>
                <stringProp name="905314158">&quot;Country&quot;:&quot;${country}&quot;</stringProp>
                <stringProp name="-481025698">&quot;Phone&quot;:&quot;${phone}&quot;</stringProp>
                <stringProp name="675126426">&quot;MobilePhone&quot;:&quot;${mobilePhone}&quot;</stringProp>
                <stringProp name="168154236">&quot;Fax&quot;:&quot;${fax}&quot;</stringProp>
                <stringProp name="-1595787400">&quot;Website&quot;:&quot;${website}&quot;</stringProp>
                <stringProp name="-936355654">&quot;Description&quot;:&quot;${description}&quot;</stringProp>
                <stringProp name="-1568137084">&quot;LeadSource&quot;:&quot;${leadSource}&quot;</stringProp>
                <stringProp name="-368417628">&quot;Status&quot;:&quot;${status}&quot;</stringProp>
                <stringProp name="284489060">&quot;Industry&quot;:&quot;${industry}&quot;</stringProp>
                <stringProp name="-1873546300">&quot;Rating&quot;:&quot;${rating}&quot;</stringProp>
                <stringProp name="1834629920">&quot;AnnualRevenue&quot;:${annualRevenue}.0,</stringProp>
                <stringProp name="-1351410102">&quot;NumberOfEmployees&quot;:${numberOfEmployees}</stringProp>
                <stringProp name="-556056252">&quot;Jigsaw&quot;:&quot;${jigsaw}&quot;</stringProp>
                <stringProp name="784370296">&quot;CleanStatus&quot;:&quot;${cleanStatus}&quot;</stringProp>
                <stringProp name="-1587251654">&quot;CompanyDunsNumber&quot;:&quot;${companyDunsNumber}&quot;</stringProp>
                <stringProp name="-885530044">&quot;SICCode__c&quot;:&quot;${sICCode__c}&quot;</stringProp>
                <stringProp name="1078660388">&quot;ProductInterest__c&quot;:&quot;${productInterest__c}&quot;</stringProp>
                <stringProp name="1528907588">&quot;Primary__c&quot;:&quot;${primary__c}&quot;</stringProp>
                <stringProp name="-1822185372">&quot;CurrentGenerators__c&quot;:&quot;${currentGenerators__c}&quot;</stringProp>
                <stringProp name="-486291868">&quot;NumberofLocations__c&quot;:${numberofLocations__c}.0</stringProp>
                <stringProp name="-939682502">&quot;Email&quot;:&quot;${email}&quot;</stringProp>
                <stringProp name="-1587251654">&quot;CompanyDunsNumber&quot;:&quot;${companyDunsNumber}&quot;</stringProp>
                <stringProp name="-650784972">&quot;Latitude&quot;:${Latitude}</stringProp>
                <stringProp name="1720724010">&quot;Longitude&quot;:${Longitude}</stringProp>
                <stringProp name="-91775798">&quot;IsConverted&quot;:${IsConverted}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Lead" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;LastName&quot;:&quot;${lastNameUpdate}&quot;,&#xd;
&quot;FirstName&quot;:&quot;${firstNameUpdate}&quot;,&#xd;
&quot;Salutation&quot;:&quot;${salutationUpdate}&quot;,&#xd;
&quot;Title&quot;:&quot;${titleUpdate}&quot;,&#xd;
&quot;Company&quot;:&quot;${companyUpdate}&quot;,&#xd;
&quot;Street&quot;:&quot;${streetUpdate}&quot;,&#xd;
&quot;City&quot;:&quot;${cityUpdate}&quot;,&#xd;
&quot;State&quot;:&quot;${stateUpdate}&quot;,&#xd;
&quot;PostalCode&quot;:&quot;${postalCodeUpdate}&quot;,&#xd;
&quot;Country&quot;:&quot;${countryUpdate}&quot;,&#xd;
&quot;Phone&quot;:&quot;${phoneUpdate}&quot;,&#xd;
&quot;MobilePhone&quot;:&quot;${mobilePhoneUpdate}&quot;,&#xd;
&quot;Fax&quot;:&quot;${faxUpdate}&quot;,&#xd;
&quot;Email&quot;:&quot;${emailUpdate}&quot;,&#xd;
&quot;Website&quot;:&quot;${websiteUpdate}&quot;,&#xd;
&quot;Description&quot;:&quot;${descriptionUpdate}&quot;,&#xd;
&quot;LeadSource&quot;:&quot;${leadSourceUpdate}&quot;,&#xd;
&quot;Status&quot;:&quot;${statusUpdate}&quot;,&#xd;
&quot;Industry&quot;:&quot;${industryUpdate}&quot;,&#xd;
&quot;Rating&quot;:&quot;${ratingUpdate}&quot;,&#xd;
&quot;AnnualRevenue&quot;:&quot;${annualRevenueUpdate}&quot;,&#xd;
&quot;NumberOfEmployees&quot;:&quot;${numberOfEmployeesUpdate}&quot;,&#xd;
&quot;Jigsaw&quot;:&quot;${jigsawUpdate}&quot;,&#xd;
&quot;CleanStatus&quot;:&quot;${cleanStatusUpdate}&quot;,&#xd;
&quot;CompanyDunsNumber&quot;:&quot;${companyDunsNumberUpdate}&quot;,&#xd;
&quot;SICCode__c&quot;:&quot;${sICCode__cUpdate}&quot;,&#xd;
&quot;ProductInterest__c&quot;:&quot;${productInterest__cUpdate}&quot;,&#xd;
&quot;Primary__c&quot;:&quot;${primary__cUpdate}&quot;,&#xd;
&quot;CurrentGenerators__c&quot;:&quot;${currentGenerators__cUpdate}&quot;,&#xd;
&quot;NumberofLocations__c&quot;:&quot;${numberofLocations__cUpdate}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceLeadAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-485624214">lastNameUpdate</stringProp>
                <stringProp name="-510370300">firstNameUpdate</stringProp>
                <stringProp name="1905359105">salutationUpdate</stringProp>
                <stringProp name="570172737">titleUpdate</stringProp>
                <stringProp name="1092243366">companyUpdate</stringProp>
                <stringProp name="-1078909268">streetUpdate</stringProp>
                <stringProp name="-222838252">cityUpdate</stringProp>
                <stringProp name="1244952762">stateUpdate</stringProp>
                <stringProp name="768902209">postalCodeUpdate</stringProp>
                <stringProp name="-1606028289">countryUpdate</stringProp>
                <stringProp name="-997451817">phoneUpdate</stringProp>
                <stringProp name="14407125">mobilePhoneUpdate</stringProp>
                <stringProp name="-756603322">faxUpdate</stringProp>
                <stringProp name="1934576517">emailUpdate</stringProp>
                <stringProp name="-52632252">websiteUpdate</stringProp>
                <stringProp name="-1748059163">descriptionUpdate</stringProp>
                <stringProp name="-1184000448">leadSourceUpdate</stringProp>
                <stringProp name="2147465051">statusUpdate</stringProp>
                <stringProp name="-190052281">industryUpdate</stringProp>
                <stringProp name="-605786938">ratingUpdate</stringProp>
                <stringProp name="-1852283802">annualRevenueUpdate</stringProp>
                <stringProp name="-1365557874">numberOfEmployeesUpdate</stringProp>
                <stringProp name="-1572303988">isUnreadByOwnerUpdate</stringProp>
                <stringProp name="-1335698422">jigsawUpdate</stringProp>
                <stringProp name="1777114180">cleanStatusUpdate</stringProp>
                <stringProp name="-1213224635">companyDunsNumberUpdate</stringProp>
                <stringProp name="-64520174">sICCode__cUpdate</stringProp>
                <stringProp name="894811667">productInterest__cUpdate</stringProp>
                <stringProp name="847805290">primary__cUpdate</stringProp>
                <stringProp name="-1066572557">currentGenerators__cUpdate</stringProp>
                <stringProp name="1836447886">numberofLocations__cUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1228222372">
                  <stringProp name="-899206773">Testovski${__RandomString(5,1234567890)}</stringProp>
                  <stringProp name="51547703">Test ${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="68928">Dr.</stringProp>
                  <stringProp name="102084014">Lead Test${__RandomString(4,1234567890)}</stringProp>
                  <stringProp name="2350">IW</stringProp>
                  <stringProp name="-1499164320">${__RandomString(4,1234567890)} Van Ness Ave</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="2142">CA</stringProp>
                  <stringProp name="54238463">94109</stringProp>
                  <stringProp name="2718">US</stringProp>
                  <stringProp name="351591263">${__RandomString(9,1234567890)}</stringProp>
                  <stringProp name="-704062497">${__RandomString(10,1234567890)}</stringProp>
                  <stringProp name="-1921141533">${__RandomString(5,1234567890)}</stringProp>
                  <stringProp name="1900833474">test${__RandomString(5,1234567890)}@gmail.com</stringProp>
                  <stringProp name="-526278853">www.testsalesforce.com</stringProp>
                  <stringProp name="1571318715">Test for Create Lead</stringProp>
                  <stringProp name="86836">Web</stringProp>
                  <stringProp name="1195425545">Open - Not Contacted</stringProp>
                  <stringProp name="74219460">Media</stringProp>
                  <stringProp name="2106116">Cold</stringProp>
                  <stringProp name="-1426612593">${__Random(5,9874563,)}</stringProp>
                  <stringProp name="101092967">${__RandomString(1,1234567890)}</stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="-1921141533">${__RandomString(5,1234567890)}</stringProp>
                  <stringProp name="982065527">Pending</stringProp>
                  <stringProp name="-910024283">${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="-1415582908">${__RandomString(4,1234567890)}</stringProp>
                  <stringProp name="1868267138">${__RandomString(6,1234567890)}</stringProp>
                  <stringProp name="2529">No</stringProp>
                  <stringProp name="63116079">Admin</stringProp>
                  <stringProp name="-1814162734">${__RandomString(2,123456789)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Lead" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceLeadAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="lastName" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">lastName</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;LastName&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1821567492">&quot;Id&quot;:&quot;${id}&quot;</stringProp>
                <stringProp name="-770324051">&quot;LastName&quot;:&quot;${lastNameUpdate}&quot;</stringProp>
                <stringProp name="-2117969951">&quot;FirstName&quot;:&quot;${firstNameUpdate}&quot;</stringProp>
                <stringProp name="-1436708403">&quot;Salutation&quot;:&quot;${salutationUpdate}&quot;</stringProp>
                <stringProp name="-1571712357">&quot;Title&quot;:&quot;${titleUpdate}&quot;</stringProp>
                <stringProp name="-986151771">&quot;Company&quot;:&quot;${companyUpdate}&quot;</stringProp>
                <stringProp name="1659947885">&quot;Street&quot;:&quot;${streetUpdate}&quot;</stringProp>
                <stringProp name="-2046290195">&quot;City&quot;:&quot;${cityUpdate}&quot;</stringProp>
                <stringProp name="1761923533">&quot;State&quot;:&quot;${stateUpdate}&quot;</stringProp>
                <stringProp name="-1118328371">&quot;PostalCode&quot;:&quot;${postalCodeUpdate}&quot;</stringProp>
                <stringProp name="-850326697">&quot;Country&quot;:&quot;${countryUpdate}&quot;</stringProp>
                <stringProp name="-1045825209">&quot;Phone&quot;:&quot;${phoneUpdate}&quot;</stringProp>
                <stringProp name="-129951869">&quot;MobilePhone&quot;:&quot;${mobilePhoneUpdate}&quot;</stringProp>
                <stringProp name="-1912316443">&quot;Fax&quot;:&quot;${faxUpdate}&quot;</stringProp>
                <stringProp name="-986606623">&quot;Website&quot;:&quot;${websiteUpdate}&quot;</stringProp>
                <stringProp name="184433571">&quot;Description&quot;:&quot;${descriptionUpdate}&quot;</stringProp>
                <stringProp name="1037009901">&quot;LeadSource&quot;:&quot;${leadSourceUpdate}&quot;</stringProp>
                <stringProp name="542519309">&quot;Status&quot;:&quot;${statusUpdate}&quot;</stringProp>
                <stringProp name="499200205">&quot;Industry&quot;:&quot;${industryUpdate}&quot;</stringProp>
                <stringProp name="1673520941">&quot;Rating&quot;:&quot;${ratingUpdate}&quot;</stringProp>
                <stringProp name="362195273">&quot;AnnualRevenue&quot;:${annualRevenueUpdate}.0,</stringProp>
                <stringProp name="-746174271">&quot;NumberOfEmployees&quot;:${numberOfEmployeesUpdate}</stringProp>
                <stringProp name="603395245">&quot;Jigsaw&quot;:&quot;${jigsawUpdate}&quot;</stringProp>
                <stringProp name="-1715099935">&quot;CleanStatus&quot;:&quot;${cleanStatusUpdate}&quot;</stringProp>
                <stringProp name="-1257883357">&quot;CompanyDunsNumber&quot;:&quot;${companyDunsNumberUpdate}&quot;</stringProp>
                <stringProp name="647427501">&quot;SICCode__c&quot;:&quot;${sICCode__cUpdate}&quot;</stringProp>
                <stringProp name="1352038541">&quot;ProductInterest__c&quot;:&quot;${productInterest__cUpdate}&quot;</stringProp>
                <stringProp name="958438061">&quot;Primary__c&quot;:&quot;${primary__cUpdate}&quot;</stringProp>
                <stringProp name="-1860328499">&quot;CurrentGenerators__c&quot;:&quot;${currentGenerators__cUpdate}&quot;</stringProp>
                <stringProp name="415182107">&quot;NumberofLocations__c&quot;:${numberofLocations__cUpdate}.0</stringProp>
                <stringProp name="-1509156829">&quot;Email&quot;:&quot;${emailUpdate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Lead" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceLeadAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Lead List" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceLeadAPI}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-585480101">&quot;recentItems&quot;:</stringProp>
                <stringProp name="1892651281">&quot;attributes&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Account" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Account" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;Name&quot;: &quot;${name}&quot;,&#xd;
	&quot;Type&quot;: &quot;${type}&quot;,&#xd;
	&quot;ParentId&quot;:&quot;${parentId}&quot;,&#xd;
	&quot;BillingStreet&quot;: &quot;${billingStreet}&quot;,&#xd;
	&quot;BillingCity&quot;: &quot;${billingCity}&quot;,&#xd;
	&quot;BillingState&quot;: &quot;${billingState}&quot;,&#xd;
	&quot;BillingPostalCode&quot;: &quot;${billingPostalCode}&quot;,&#xd;
	&quot;BillingCountry&quot;: &quot;${billingCountry}&quot;,&#xd;
	&quot;ShippingStreet&quot;: &quot;${shippingStreet}&quot;,&#xd;
	&quot;ShippingCity&quot;: &quot;${shippingCity}&quot;,&#xd;
	&quot;ShippingState&quot;: &quot;${shippingState}&quot;,&#xd;
	&quot;ShippingPostalCode&quot;: &quot;${shippingPostalCode}&quot;,&#xd;
	&quot;ShippingCountry&quot;: &quot;${shippingCountry}&quot;,&#xd;
	&quot;Phone&quot;: &quot;${phone}&quot;,&#xd;
	&quot;Fax&quot;: &quot;${fax}&quot;,&#xd;
	&quot;AccountNumber&quot;: &quot;${accountNumber}&quot;,&#xd;
	&quot;Site&quot;:&quot;${site}&quot;,&#xd;
	&quot;Website&quot;: &quot;${website}&quot;,&#xd;
	&quot;Sic&quot;: &quot;${sic}&quot;,&#xd;
	&quot;Industry&quot;: &quot;${industry}&quot;,&#xd;
	&quot;AnnualRevenue&quot;: &quot;${annualRevenue}&quot;,&#xd;
	&quot;NumberOfEmployees&quot;: &quot;${numberOfEmployees}&quot;,&#xd;
	&quot;Ownership&quot;:&quot;${ownership}&quot;,&#xd;
	&quot;TickerSymbol&quot;: &quot;${tickerSymbol}&quot;,&#xd;
	&quot;Description&quot;: &quot;${description}&quot;,&#xd;
	&quot;Rating&quot;: &quot;${rating}&quot;,&#xd;
	&quot;CustomerPriority__c&quot;: &quot;${customerPriority__c}&quot;,&#xd;
	&quot;SLA__c&quot;: &quot;${sLA__c}&quot;,&#xd;
	&quot;Active__c&quot;: &quot;${active__c}&quot;,&#xd;
	&quot;NumberofLocations__c&quot;: &quot;${numberofLocations__c}&quot;,&#xd;
	&quot;UpsellOpportunity__c&quot;: &quot;${upsellOpportunity__c}&quot;,&#xd;
	&quot;SLASerialNumber__c&quot;: &quot;${sLASerialNumber__c}&quot;,&#xd;
	&quot;SLAExpirationDate__c&quot;: &quot;${sLAExpirationDate__c}&quot;,&#xd;
	&quot;BillingLatitude&quot;:&quot;${BillingLatitude}&quot;,&#xd;
	&quot;BillingLongitude&quot;:&quot;${BillingLongitude}&quot;,&#xd;
	&quot;BillingGeocodeAccuracy&quot;:&quot;&quot;,&#xd;
	&quot;ShippingLatitude&quot;:&quot;${ShippingLatitude}&quot;,&#xd;
	&quot;ShippingLongitude&quot;:&quot;${ShippingLongitude}&quot;,&#xd;
	&quot;ShippingGeocodeAccuracy&quot;:&quot;&quot;,&#xd;
	&quot;Jigsaw&quot;:&quot;${Jigsaw}&quot;,&#xd;
	&quot;CleanStatus&quot;:&quot;${CleanStatus}&quot;,&#xd;
	&quot;AccountSource&quot;:&quot;${AccountSource}&quot;,&#xd;
	&quot;DunsNumber&quot;:&quot;${DunsNumber}&quot;,&#xd;
	&quot;Tradestyle&quot;:&quot;${Tradestyle}&quot;,&#xd;
	&quot;NaicsCode&quot;:&quot;${NaicsCode}&quot;,&#xd;
	&quot;NaicsDesc&quot;:&quot;${NaicsDesc}&quot;,&#xd;
	&quot;YearStarted&quot;:&quot;${YearStarted}&quot;,&#xd;
	&quot;SicDesc&quot;:&quot;${SicDesc}&quot;,&#xd;
	&quot;DandbCompanyId&quot;:&quot;&quot;,&#xd;
	&quot;OperatingHoursId&quot;:&quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceAccountAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="3373707">name</stringProp>
                <stringProp name="3575610">type</stringProp>
                <stringProp name="1175162725">parentId</stringProp>
                <stringProp name="-1523886498">billingStreet</stringProp>
                <stringProp name="91781766">billingCity</stringProp>
                <stringProp name="-1434646826">billingState</stringProp>
                <stringProp name="-1866128845">billingPostalCode</stringProp>
                <stringProp name="-1451090789">billingCountry</stringProp>
                <stringProp name="-677929135">shippingStreet</stringProp>
                <stringProp name="-398957511">shippingCity</stringProp>
                <stringProp name="532304771">shippingState</stringProp>
                <stringProp name="-1322403418">shippingPostalCode</stringProp>
                <stringProp name="-996216312">shippingCountry</stringProp>
                <stringProp name="106642798">phone</stringProp>
                <stringProp name="101149">fax</stringProp>
                <stringProp name="-1011205162">accountNumber</stringProp>
                <stringProp name="3530567">site</stringProp>
                <stringProp name="1224335515">website</stringProp>
                <stringProp name="113869">sic</stringProp>
                <stringProp name="127156702">industry</stringProp>
                <stringProp name="-209460931">annualRevenue</stringProp>
                <stringProp name="1565177957">numberOfEmployees</stringProp>
                <stringProp name="18561903">ownership</stringProp>
                <stringProp name="505994562">tickerSymbol</stringProp>
                <stringProp name="-1724546052">description</stringProp>
                <stringProp name="-938102371">rating</stringProp>
                <stringProp name="-310045279">customerPriority__c</stringProp>
                <stringProp name="-930396581">sLA__c</stringProp>
                <stringProp name="204491709">active__c</stringProp>
                <stringProp name="428716901">numberofLocations__c</stringProp>
                <stringProp name="-366684515">upsellOpportunity__c</stringProp>
                <stringProp name="1984365246">sLASerialNumber__c</stringProp>
                <stringProp name="-477630434">sLAExpirationDate__c</stringProp>
                <stringProp name="195837927">BillingLatitude</stringProp>
                <stringProp name="-691935852">BillingLongitude</stringProp>
                <stringProp name="-865843204">BillingGeocodeAccuracy</stringProp>
                <stringProp name="1566286938">ShippingLatitude</stringProp>
                <stringProp name="-1157689471">ShippingLongitude</stringProp>
                <stringProp name="-1484551127">ShippingGeocodeAccuracy</stringProp>
                <stringProp name="-2076258303">Jigsaw</stringProp>
                <stringProp name="826834811">CleanStatus</stringProp>
                <stringProp name="-74385272">AccountSource</stringProp>
                <stringProp name="-1733004001">DunsNumber</stringProp>
                <stringProp name="-407353619">Tradestyle</stringProp>
                <stringProp name="-352413965">NaicsCode</stringProp>
                <stringProp name="-352393321">NaicsDesc</stringProp>
                <stringProp name="-2032948892">YearStarted</stringProp>
                <stringProp name="-546989858">SicDesc</stringProp>
                <stringProp name="-121826263">OperatingHoursId</stringProp>
                <stringProp name="2106814345">DandbCompanyId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1975610929">
                  <stringProp name="-1433925421">Test0${__RandomString(4,9874563)}</stringProp>
                  <stringProp name="-925411924">Prospect</stringProp>
                  <stringProp name="-1437345962">0016g00000FX9peAAD</stringProp>
                  <stringProp name="574763157">7801 Mission Street</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="1458823896">California</stringProp>
                  <stringProp name="54238457">94103</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="1835351996">1647 Van Ness Ave</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="2142">CA</stringProp>
                  <stringProp name="54238463">94109</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="-1713874469">${__RandomString(9,987456321,)}</stringProp>
                  <stringProp name="46792879">12385</stringProp>
                  <stringProp name="-1813860750">${__Random(2,9874563,)}</stringProp>
                  <stringProp name="-2013264328">London</stringProp>
                  <stringProp name="615031776">www.testaccount${__Random(3,9874563,)}.com</stringProp>
                  <stringProp name="50635789">57340</stringProp>
                  <stringProp name="2080120488">Energy</stringProp>
                  <stringProp name="47810550">25878</stringProp>
                  <stringProp name="1569">12</stringProp>
                  <stringProp name="-1893556599">Public</stringProp>
                  <stringProp name="-72522509">TickerSymbol 1</stringProp>
                  <stringProp name="81699150">Test for create Account</stringProp>
                  <stringProp name="72749">Hot</stringProp>
                  <stringProp name="2249154">High</stringProp>
                  <stringProp name="2225280">Gold</stringProp>
                  <stringProp name="2529">No</stringProp>
                  <stringProp name="-1964372765">${__RandomString(1,987456321,)}</stringProp>
                  <stringProp name="74120264">Maybe</stringProp>
                  <stringProp name="1696">55</stringProp>
                  <stringProp name="131730106">2020-05-03</stringProp>
                  <stringProp name="1447075614">40.25487</stringProp>
                  <stringProp name="-1028859872">71.02545</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="-1960388001">41.25487</stringProp>
                  <stringProp name="746147490">73.02545</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="-1456607904">ID${__RandomString(9,987456321,)}</stringProp>
                  <stringProp name="-1789452028">Matched</stringProp>
                  <stringProp name="670892517">Advertisement</stringProp>
                  <stringProp name="-1713874469">${__RandomString(9,987456321,)}</stringProp>
                  <stringProp name="-511443027">Similar to Doing business as or DBA</stringProp>
                  <stringProp name="-258278231">NC${__RandomString(6,987456321,)}</stringProp>
                  <stringProp name="-978490929">A brief description of an organizations line of business, based on its NAICS code</stringProp>
                  <stringProp name="1537254">2019</stringProp>
                  <stringProp name="-715239536">A brief description of an organizations line of business..</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Account" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceAccountAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="name" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">name</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Name&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="432355204">&quot;Name&quot;:&quot;${name}&quot;</stringProp>
                <stringProp name="953046116">&quot;Type&quot;:&quot;${type}&quot;</stringProp>
                <stringProp name="-5257666">&quot;BillingStreet&quot;:&quot;${billingStreet}&quot;</stringProp>
                <stringProp name="1729756366">&quot;BillingCity&quot;:&quot;${billingCity}&quot;</stringProp>
                <stringProp name="478514404">&quot;BillingState&quot;:&quot;${billingState}&quot;</stringProp>
                <stringProp name="-1568106200">&quot;BillingPostalCode&quot;:&quot;${billingPostalCode}&quot;</stringProp>
                <stringProp name="-1818757372">&quot;BillingCountry&quot;:&quot;${billingCountry}&quot;</stringProp>
                <stringProp name="-12972220">&quot;ShippingStreet&quot;:&quot;${shippingStreet}&quot;</stringProp>
                <stringProp name="1908049732">&quot;ShippingCity&quot;:&quot;${shippingCity}&quot;</stringProp>
                <stringProp name="-1229060408">&quot;ShippingState&quot;:&quot;${shippingState}&quot;</stringProp>
                <stringProp name="485855652">&quot;ShippingPostalCode&quot;:&quot;${shippingPostalCode}&quot;</stringProp>
                <stringProp name="-114721454">&quot;ShippingCountry&quot;:&quot;${shippingCountry}&quot;</stringProp>
                <stringProp name="-481025698">&quot;Phone&quot;:&quot;${phone}&quot;</stringProp>
                <stringProp name="168154236">&quot;Fax&quot;:&quot;${fax}&quot;</stringProp>
                <stringProp name="-1124554962">&quot;AccountNumber&quot;:&quot;${accountNumber}&quot;</stringProp>
                <stringProp name="2022566660">&quot;Site&quot;:&quot;${site}&quot;</stringProp>
                <stringProp name="-1595787400">&quot;Website&quot;:&quot;${website}&quot;</stringProp>
                <stringProp name="775040988">&quot;Sic&quot;:&quot;${sic}&quot;</stringProp>
                <stringProp name="284489060">&quot;Industry&quot;:&quot;${industry}&quot;</stringProp>
                <stringProp name="-910649716">&quot;AnnualRevenue&quot;:${annualRevenue}.0</stringProp>
                <stringProp name="-1351410102">&quot;NumberOfEmployees&quot;:${numberOfEmployees}</stringProp>
                <stringProp name="-129252704">&quot;Ownership&quot;:&quot;${ownership}&quot;</stringProp>
                <stringProp name="881087076">&quot;TickerSymbol&quot;:&quot;${tickerSymbol}&quot;</stringProp>
                <stringProp name="-936355654">&quot;Description&quot;:&quot;${description}&quot;</stringProp>
                <stringProp name="-1873546300">&quot;Rating&quot;:&quot;${rating}&quot;</stringProp>
                <stringProp name="-1120089212">&quot;CustomerPriority__c&quot;:&quot;${customerPriority__c}&quot;</stringProp>
                <stringProp name="1250812164">&quot;SLA__c&quot;:&quot;${sLA__c}&quot;</stringProp>
                <stringProp name="85240764">&quot;Active__c&quot;:&quot;${active__c}&quot;</stringProp>
                <stringProp name="-1663074014">&quot;NumberofLocations__c&quot;:${numberofLocations__c}</stringProp>
                <stringProp name="-367174716">&quot;UpsellOpportunity__c&quot;:&quot;${upsellOpportunity__c}&quot;</stringProp>
                <stringProp name="519804580">&quot;SLASerialNumber__c&quot;:&quot;${sLASerialNumber__c}&quot;</stringProp>
                <stringProp name="451548900">&quot;SLAExpirationDate__c&quot;:&quot;${sLAExpirationDate__c}&quot;</stringProp>
                <stringProp name="479696298">&quot;BillingLatitude&quot;:${BillingLatitude}</stringProp>
                <stringProp name="1956334116">&quot;BillingLongitude&quot;:${BillingLongitude}</stringProp>
                <stringProp name="-802112232">&quot;ShippingLatitude&quot;:${ShippingLatitude}</stringProp>
                <stringProp name="2141089002">&quot;ShippingLongitude&quot;:${ShippingLongitude}</stringProp>
                <stringProp name="-491412124">&quot;Jigsaw&quot;:&quot;${Jigsaw}&quot;</stringProp>
                <stringProp name="1583331928">&quot;CleanStatus&quot;:&quot;${CleanStatus}&quot;</stringProp>
                <stringProp name="478539570">&quot;AccountSource&quot;:&quot;${AccountSource}&quot;</stringProp>
                <stringProp name="903976868">&quot;DunsNumber&quot;:&quot;${DunsNumber}&quot;</stringProp>
                <stringProp name="1368682980">&quot;Tradestyle&quot;:&quot;${Tradestyle}&quot;</stringProp>
                <stringProp name="976470216">&quot;NaicsCode&quot;:&quot;${NaicsCode}&quot;</stringProp>
                <stringProp name="-40566512">&quot;NaicsDesc&quot;:&quot;${NaicsDesc}&quot;</stringProp>
                <stringProp name="541978538">&quot;YearStarted&quot;:&quot;${YearStarted}&quot;</stringProp>
                <stringProp name="-1772740066">&quot;SicDesc&quot;:&quot;${SicDesc}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Account" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;Name&quot;: &quot;${nameUpdate}&quot;,&#xd;
	&quot;Type&quot;: &quot;${typeUpdate}&quot;,&#xd;
	&quot;ParentId&quot;:&quot;${parentIdUpdate}&quot;,&#xd;
	&quot;BillingStreet&quot;: &quot;${billingStreetUpdate}&quot;,&#xd;
	&quot;BillingCity&quot;: &quot;${billingCityUpdate}&quot;,&#xd;
	&quot;BillingState&quot;: &quot;${billingStateUpdate}&quot;,&#xd;
	&quot;BillingPostalCode&quot;: &quot;${billingPostalCodeUpdate}&quot;,&#xd;
	&quot;BillingCountry&quot;: &quot;${billingCountryUpdate}&quot;,&#xd;
	&quot;ShippingStreet&quot;: &quot;${shippingStreetUpdate}&quot;,&#xd;
	&quot;ShippingCity&quot;: &quot;${shippingCityUpdate}&quot;,&#xd;
	&quot;ShippingState&quot;: &quot;${shippingStateUpdate}&quot;,&#xd;
	&quot;ShippingPostalCode&quot;: &quot;${shippingPostalCodeUpdate}&quot;,&#xd;
	&quot;ShippingCountry&quot;: &quot;${shippingCountryUpdate}&quot;,&#xd;
	&quot;Phone&quot;: &quot;${phoneUpdate}&quot;,&#xd;
	&quot;Fax&quot;: &quot;${faxUpdate}&quot;,&#xd;
	&quot;AccountNumber&quot;: &quot;${accountNumberUpdate}&quot;,&#xd;
	&quot;Site&quot;:&quot;${siteUpdate}&quot;,&#xd;
	&quot;Website&quot;: &quot;${websiteUpdate}&quot;,&#xd;
	&quot;Sic&quot;: &quot;${sicUpdate}&quot;,&#xd;
	&quot;Industry&quot;: &quot;${industryUpdate}&quot;,&#xd;
	&quot;AnnualRevenue&quot;: &quot;${annualRevenueUpdate}&quot;,&#xd;
	&quot;NumberOfEmployees&quot;: &quot;${numberOfEmployeesUpdate}&quot;,&#xd;
	&quot;Ownership&quot;:&quot;${ownershipUpdate}&quot;,&#xd;
	&quot;TickerSymbol&quot;: &quot;${tickerSymbolUpdate}&quot;,&#xd;
	&quot;Description&quot;: &quot;${descriptionUpdate}&quot;,&#xd;
	&quot;Rating&quot;: &quot;${ratingUpdate}&quot;,&#xd;
	&quot;CustomerPriority__c&quot;: &quot;${customerPriority__cUpdate}&quot;,&#xd;
	&quot;SLA__c&quot;: &quot;${sLA__cUpdate}&quot;,&#xd;
	&quot;Active__c&quot;: &quot;${active__cUpdate}&quot;,&#xd;
	&quot;NumberofLocations__c&quot;: &quot;${numberofLocations__cUpdate}&quot;,&#xd;
	&quot;UpsellOpportunity__c&quot;: &quot;${upsellOpportunity__cUpdate}&quot;,&#xd;
	&quot;SLASerialNumber__c&quot;: &quot;${sLASerialNumber__cUpdate}&quot;,&#xd;
	&quot;SLAExpirationDate__c&quot;: &quot;${sLAExpirationDate__cUpdate}&quot;,&#xd;
	&quot;BillingLatitude&quot;:&quot;${BillingLatitudeUpdate}&quot;,&#xd;
	&quot;BillingLongitude&quot;:&quot;${BillingLongitudeUpdate}&quot;,&#xd;
	&quot;ShippingLatitude&quot;:&quot;${ShippingLatitudeUpdate}&quot;,&#xd;
	&quot;ShippingLongitude&quot;:&quot;${ShippingLongitudeUpdate}&quot;,&#xd;
	&quot;Jigsaw&quot;:&quot;${JigsawUpdate}&quot;,&#xd;
	&quot;CleanStatus&quot;:&quot;${CleanStatusUpdate}&quot;,&#xd;
	&quot;AccountSource&quot;:&quot;${AccountSourceUpdate}&quot;,&#xd;
	&quot;DunsNumber&quot;:&quot;${DunsNumberUpdate}&quot;,&#xd;
	&quot;Tradestyle&quot;:&quot;${TradestyleUpdate}&quot;,&#xd;
	&quot;NaicsCode&quot;:&quot;${NaicsCodeUpdate}&quot;,&#xd;
	&quot;NaicsDesc&quot;:&quot;${NaicsDescUpdate}&quot;,&#xd;
	&quot;YearStarted&quot;:&quot;${YearStartedUpdate}&quot;,&#xd;
	&quot;SicDesc&quot;:&quot;${SicDescUpdate}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceAccountAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-694727884">nameUpdate</stringProp>
                <stringProp name="-1369579357">typeUpdate</stringProp>
                <stringProp name="1662964878">parentIdUpdate</stringProp>
                <stringProp name="885112007">billingStreetUpdate</stringProp>
                <stringProp name="194847471">billingCityUpdate</stringProp>
                <stringProp name="1308308287">billingStateUpdate</stringProp>
                <stringProp name="-567896868">billingPostalCodeUpdate</stringProp>
                <stringProp name="-850910908">billingCountryUpdate</stringProp>
                <stringProp name="-580762758">shippingStreetUpdate</stringProp>
                <stringProp name="738572898">shippingCityUpdate</stringProp>
                <stringProp name="983927340">shippingStateUpdate</stringProp>
                <stringProp name="-1594979825">shippingPostalCodeUpdate</stringProp>
                <stringProp name="951611633">shippingCountryUpdate</stringProp>
                <stringProp name="-997451817">phoneUpdate</stringProp>
                <stringProp name="-756603322">faxUpdate</stringProp>
                <stringProp name="1874634815">accountNumberUpdate</stringProp>
                <stringProp name="357708528">siteUpdate</stringProp>
                <stringProp name="-52632252">websiteUpdate</stringProp>
                <stringProp name="1116165110">sicUpdate</stringProp>
                <stringProp name="-190052281">industryUpdate</stringProp>
                <stringProp name="-1852283802">annualRevenueUpdate</stringProp>
                <stringProp name="-1365557874">numberOfEmployeesUpdate</stringProp>
                <stringProp name="398184728">ownershipUpdate</stringProp>
                <stringProp name="-602961749">tickerSymbolUpdate</stringProp>
                <stringProp name="-1748059163">descriptionUpdate</stringProp>
                <stringProp name="-605786938">ratingUpdate</stringProp>
                <stringProp name="-1261322806">customerPriority__cUpdate</stringProp>
                <stringProp name="1304099588">sLA__cUpdate</stringProp>
                <stringProp name="1089138406">active__cUpdate</stringProp>
                <stringProp name="1836447886">numberofLocations__cUpdate</stringProp>
                <stringProp name="1027854790">upsellOpportunity__cUpdate</stringProp>
                <stringProp name="197304615">sLASerialNumber__cUpdate</stringProp>
                <stringProp name="-2076965241">sLAExpirationDate__cUpdate</stringProp>
                <stringProp name="-1771725936">BillingLatitudeUpdate</stringProp>
                <stringProp name="562137981">BillingLongitudeUpdate</stringProp>
                <stringProp name="1533451715">ShippingLatitudeUpdate</stringProp>
                <stringProp name="-56569942">ShippingLongitudeUpdate</stringProp>
                <stringProp name="-1171378134">JigsawUpdate</stringProp>
                <stringProp name="1420876836">CleanStatusUpdate</stringProp>
                <stringProp name="-894724239">AccountSourceUpdate</stringProp>
                <stringProp name="2047805128">DunsNumberUpdate</stringProp>
                <stringProp name="-1032468970">TradestyleUpdate</stringProp>
                <stringProp name="-383420004">NaicsCodeUpdate</stringProp>
                <stringProp name="-1087914176">NaicsDescUpdate</stringProp>
                <stringProp name="453325645">YearStartedUpdate</stringProp>
                <stringProp name="702553927">SicDescUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-129478489">
                  <stringProp name="-1309311911">Anja${__RandomString(4,9874563)}</stringProp>
                  <stringProp name="-925411924">Prospect</stringProp>
                  <stringProp name="148298068">0016g00000EHEuuAAH</stringProp>
                  <stringProp name="574763157">7801 Mission Street</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="1458823896">California</stringProp>
                  <stringProp name="54238457">94103</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="1835351996">1647 Van Ness Ave</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="2142">CA</stringProp>
                  <stringProp name="54238463">94109</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="-1713874469">${__RandomString(9,987456321,)}</stringProp>
                  <stringProp name="46792879">12385</stringProp>
                  <stringProp name="-1813860750">${__Random(2,9874563,)}</stringProp>
                  <stringProp name="-2013264328">London</stringProp>
                  <stringProp name="615031776">www.testaccount${__Random(3,9874563,)}.com</stringProp>
                  <stringProp name="50635789">57340</stringProp>
                  <stringProp name="2080120488">Energy</stringProp>
                  <stringProp name="47810550">25878</stringProp>
                  <stringProp name="1569">12</stringProp>
                  <stringProp name="-1893556599">Public</stringProp>
                  <stringProp name="-72522509">TickerSymbol 1</stringProp>
                  <stringProp name="81699150">Test for create Account</stringProp>
                  <stringProp name="72749">Hot</stringProp>
                  <stringProp name="2249154">High</stringProp>
                  <stringProp name="2225280">Gold</stringProp>
                  <stringProp name="2529">No</stringProp>
                  <stringProp name="-1964372765">${__RandomString(1,987456321,)}</stringProp>
                  <stringProp name="74120264">Maybe</stringProp>
                  <stringProp name="1696">55</stringProp>
                  <stringProp name="131730106">2020-05-03</stringProp>
                  <stringProp name="49498869">40.25</stringProp>
                  <stringProp name="52269432">70.25</stringProp>
                  <stringProp name="49528691">41.35</stringProp>
                  <stringProp name="52329105">72.53</stringProp>
                  <stringProp name="-1456607904">ID${__RandomString(9,987456321,)}</stringProp>
                  <stringProp name="-988319719">Different</stringProp>
                  <stringProp name="670892517">Advertisement</stringProp>
                  <stringProp name="-1713874469">${__RandomString(9,987456321,)}</stringProp>
                  <stringProp name="787684331">update Similar to Doing busin...</stringProp>
                  <stringProp name="-258278231">NC${__RandomString(6,987456321,)}</stringProp>
                  <stringProp name="1691206750">A brief description of an organizations line of...</stringProp>
                  <stringProp name="1537276">2020</stringProp>
                  <stringProp name="-651752264">A brief description of an or...</stringProp>
                </collectionProp>
                <collectionProp name="-52933087">
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Account" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceAccountAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="name" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">name</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;Name&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1117739757">&quot;Name&quot;:&quot;${nameUpdate}&quot;</stringProp>
                <stringProp name="-1361621043">&quot;Type&quot;:&quot;${typeUpdate}&quot;</stringProp>
                <stringProp name="-1255246297">&quot;BillingStreet&quot;:&quot;${billingStreetUpdate}&quot;</stringProp>
                <stringProp name="-1223065417">&quot;BillingCity&quot;:&quot;${billingCityUpdate}&quot;</stringProp>
                <stringProp name="2103584845">&quot;BillingState&quot;:&quot;${billingStateUpdate}&quot;</stringProp>
                <stringProp name="219410833">&quot;BillingPostalCode&quot;:&quot;${billingPostalCodeUpdate}&quot;</stringProp>
                <stringProp name="-800818579">&quot;BillingCountry&quot;:&quot;${billingCountryUpdate}&quot;</stringProp>
                <stringProp name="1233347245">&quot;ShippingStreet&quot;:&quot;${shippingStreetUpdate}&quot;</stringProp>
                <stringProp name="-943072595">&quot;ShippingCity&quot;:&quot;${shippingCityUpdate}&quot;</stringProp>
                <stringProp name="2091427633">&quot;ShippingState&quot;:&quot;${shippingStateUpdate}&quot;</stringProp>
                <stringProp name="-1351901939">&quot;ShippingPostalCode&quot;:&quot;${shippingPostalCodeUpdate}&quot;</stringProp>
                <stringProp name="-1505784261">&quot;ShippingCountry&quot;:&quot;${shippingCountryUpdate}&quot;</stringProp>
                <stringProp name="-1045825209">&quot;Phone&quot;:&quot;${phoneUpdate}&quot;</stringProp>
                <stringProp name="-1912316443">&quot;Fax&quot;:&quot;${faxUpdate}&quot;</stringProp>
                <stringProp name="1747378967">&quot;AccountNumber&quot;:&quot;${accountNumberUpdate}&quot;</stringProp>
                <stringProp name="-638357907">&quot;Site&quot;:&quot;${siteUpdate}&quot;</stringProp>
                <stringProp name="-986606623">&quot;Website&quot;:&quot;${websiteUpdate}&quot;</stringProp>
                <stringProp name="-1902726843">&quot;Sic&quot;:&quot;${sicUpdate}&quot;</stringProp>
                <stringProp name="499200205">&quot;Industry&quot;:&quot;${industryUpdate}&quot;</stringProp>
                <stringProp name="2089893699">&quot;AnnualRevenue&quot;:${annualRevenueUpdate}.0</stringProp>
                <stringProp name="-746174271">&quot;NumberOfEmployees&quot;:${numberOfEmployeesUpdate}</stringProp>
                <stringProp name="1879056649">&quot;Ownership&quot;:&quot;${ownershipUpdate}&quot;</stringProp>
                <stringProp name="-1114190387">&quot;TickerSymbol&quot;:&quot;${tickerSymbolUpdate}&quot;</stringProp>
                <stringProp name="184433571">&quot;Description&quot;:&quot;${descriptionUpdate}&quot;</stringProp>
                <stringProp name="1673520941">&quot;Rating&quot;:&quot;${ratingUpdate}&quot;</stringProp>
                <stringProp name="1259859693">&quot;CustomerPriority__c&quot;:&quot;${customerPriority__cUpdate}&quot;</stringProp>
                <stringProp name="765650029">&quot;SLA__c&quot;:&quot;${sLA__cUpdate}&quot;</stringProp>
                <stringProp name="467977509">&quot;Active__c&quot;:&quot;${active__cUpdate}&quot;</stringProp>
                <stringProp name="-991745639">&quot;NumberofLocations__c&quot;:${numberofLocations__cUpdate}</stringProp>
                <stringProp name="182144813">&quot;UpsellOpportunity__c&quot;:&quot;${upsellOpportunity__cUpdate}&quot;</stringProp>
                <stringProp name="337240589">&quot;SLASerialNumber__c&quot;:&quot;${sLASerialNumber__cUpdate}&quot;</stringProp>
                <stringProp name="1018638925">&quot;SLAExpirationDate__c&quot;:&quot;${sLAExpirationDate__cUpdate}&quot;</stringProp>
                <stringProp name="-1316243423">&quot;BillingLatitude&quot;:${BillingLatitudeUpdate}</stringProp>
                <stringProp name="-760174309">&quot;BillingLongitude&quot;:${BillingLongitudeUpdate}</stringProp>
                <stringProp name="1549341967">&quot;ShippingLatitude&quot;:${ShippingLatitudeUpdate}</stringProp>
                <stringProp name="-849076383">&quot;ShippingLongitude&quot;:${ShippingLongitudeUpdate}</stringProp>
                <stringProp name="-398597939">&quot;Jigsaw&quot;:&quot;${JigsawUpdate}&quot;</stringProp>
                <stringProp name="-461803839">&quot;CleanStatus&quot;:&quot;${CleanStatusUpdate}&quot;</stringProp>
                <stringProp name="-1103685605">&quot;AccountSource&quot;:&quot;${AccountSourceUpdate}&quot;</stringProp>
                <stringProp name="-860151027">&quot;DunsNumber&quot;:&quot;${DunsNumberUpdate}&quot;</stringProp>
                <stringProp name="586239309">&quot;Tradestyle&quot;:&quot;${TradestyleUpdate}&quot;</stringProp>
                <stringProp name="459989297">&quot;NaicsCode&quot;:&quot;${NaicsCodeUpdate}&quot;</stringProp>
                <stringProp name="-2120430727">&quot;NaicsDesc&quot;:&quot;${NaicsDescUpdate}&quot;</stringProp>
                <stringProp name="-1746215277">&quot;YearStarted&quot;:&quot;${YearStartedUpdate}&quot;</stringProp>
                <stringProp name="1473800711">&quot;SicDesc&quot;:&quot;${SicDescUpdate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Account" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceAccountAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Account List" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceAccountAPI}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-585480101">&quot;recentItems&quot;:</stringProp>
                <stringProp name="1892651281">&quot;attributes&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Contact" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contact" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;AccountId&quot;:&quot;${accountId}&quot;,&#xd;
&quot;LastName&quot;:&quot;${lastName}&quot;,&#xd;
&quot;FirstName&quot;:&quot;${firstName}&quot;,&#xd;
&quot;Salutation&quot;:&quot;${salutation}&quot;,&#xd;
&quot;OtherStreet&quot;:&quot;${otherStreet}&quot;,&#xd;
&quot;OtherCity&quot;:&quot;${otherCity}&quot;,&#xd;
&quot;OtherState&quot;:&quot;${otherState}&quot;,&#xd;
&quot;OtherPostalCode&quot;:&quot;${otherPostalCode}&quot;,&#xd;
&quot;OtherCountry&quot;:&quot;${otherCountry}&quot;,&#xd;
&quot;MailingStreet&quot;:&quot;${mailingStreet}&quot;,&#xd;
&quot;MailingCity&quot;:&quot;${mailingCity}&quot;,&#xd;
&quot;MailingState&quot;:&quot;${mailingState}&quot;,&#xd;
&quot;MailingPostalCode&quot;:&quot;${mailingPostalCode}&quot;,&#xd;
&quot;MailingCountry&quot;:&quot;${mailingCountry}&quot;,&#xd;
&quot;Phone&quot;:&quot;${phone}&quot;,&#xd;
&quot;Fax&quot;:&quot;${fax}&quot;,&#xd;
&quot;MobilePhone&quot;:&quot;${mobilePhone}&quot;,&#xd;
&quot;HomePhone&quot;:&quot;${homePhone}&quot;,&#xd;
&quot;OtherPhone&quot;:&quot;${otherPhone}&quot;,&#xd;
&quot;AssistantPhone&quot;:&quot;${assistantPhone}&quot;,&#xd;
&quot;ReportsToId&quot;:&quot;${reportsToId}&quot;,&#xd;
&quot;Email&quot;:&quot;${email}&quot;,&#xd;
&quot;Title&quot;:&quot;${title}&quot;,&#xd;
&quot;Department&quot;:&quot;${department}&quot;,&#xd;
&quot;AssistantName&quot;:&quot;${assistantName}&quot;,&#xd;
&quot;LeadSource&quot;:&quot;${leadSource}&quot;,&#xd;
&quot;Birthdate&quot;:&quot;${birthdate}&quot;,&#xd;
&quot;Description&quot;:&quot;${description}&quot;,&#xd;
&quot;Level__c&quot;:&quot;${level__c}&quot;,&#xd;
&quot;Languages__c&quot;:&quot;${languages__c}&quot;,&#xd;
&quot;OtherLongitude&quot;:&quot;${OtherLongitude}&quot;,&#xd;
&quot;OtherLatitude&quot;:&quot;${OtherLatitude}&quot;,&#xd;
&quot;MailingLatitude&quot;:&quot;${MailingLatitude}&quot;,&#xd;
&quot;MailingLongitude&quot;:&quot;${MailingLongitude}&quot;,&#xd;
&quot;EmailBouncedReason&quot;:&quot;${EmailBouncedReason}&quot;,&#xd;
&quot;Jigsaw&quot;:&quot;${Jigsaw}&quot;,&#xd;
&quot;CleanStatus&quot;:&quot;${CleanStatus}&quot;,&#xd;
&quot;OtherGeocodeAccuracy&quot;:&quot;${OtherGeocodeAccuracy}&quot;,&#xd;
&quot;MailingGeocodeAccuracy&quot;:&quot;${MailingGeocodeAccuracy}&quot;,&#xd;
&quot;IndividualId&quot;:&quot;${IndividualId}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceContactAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1827029976">accountId</stringProp>
                <stringProp name="-1459599807">lastName</stringProp>
                <stringProp name="132835675">firstName</stringProp>
                <stringProp name="-1230813672">salutation</stringProp>
                <stringProp name="-1697304781">otherStreet</stringProp>
                <stringProp name="-1946385253">otherCity</stringProp>
                <stringProp name="-193314975">otherState</stringProp>
                <stringProp name="2038204552">otherPostalCode</stringProp>
                <stringProp name="1762877030">otherCountry</stringProp>
                <stringProp name="-393127250">mailingStreet</stringProp>
                <stringProp name="204690134">mailingCity</stringProp>
                <stringProp name="2065512582">mailingState</stringProp>
                <stringProp name="-303006077">mailingPostalCode</stringProp>
                <stringProp name="-757292469">mailingCountry</stringProp>
                <stringProp name="106642798">phone</stringProp>
                <stringProp name="101149">fax</stringProp>
                <stringProp name="-1327967764">mobilePhone</stringProp>
                <stringProp name="2104003535">homePhone</stringProp>
                <stringProp name="-196429762">otherPhone</stringProp>
                <stringProp name="239727920">assistantPhone</stringProp>
                <stringProp name="-229035179">reportsToId</stringProp>
                <stringProp name="96619420">email</stringProp>
                <stringProp name="110371416">title</stringProp>
                <stringProp name="848184146">department</stringProp>
                <stringProp name="1670234761">assistantName</stringProp>
                <stringProp name="674365079">leadSource</stringProp>
                <stringProp name="-1209078547">birthdate</stringProp>
                <stringProp name="-1724546052">description</stringProp>
                <stringProp name="-2131626369">level__c</stringProp>
                <stringProp name="-2090934648">languages__c</stringProp>
                <stringProp name="-1454395524">OtherLatitude</stringProp>
                <stringProp name="-309565281">OtherLongitude</stringProp>
                <stringProp name="971314887">OtherGeocodeAccuracy</stringProp>
                <stringProp name="228749367">MailingLatitude</stringProp>
                <stringProp name="328318788">MailingLongitude</stringProp>
                <stringProp name="2021006764">MailingGeocodeAccuracy</stringProp>
                <stringProp name="1447305764">EmailBouncedReason</stringProp>
                <stringProp name="-1840253042">EmailBouncedDate</stringProp>
                <stringProp name="-2076258303">Jigsaw</stringProp>
                <stringProp name="826834811">CleanStatus</stringProp>
                <stringProp name="-1372930636">IndividualId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1678431546">
                  <stringProp name="201981450">0016g00000EHGqyAAH</stringProp>
                  <stringProp name="-1240888394">Kostevska ${__RandomString(5,1234567890)}</stringProp>
                  <stringProp name="-2099297335">Anja ${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="68928">Dr.</stringProp>
                  <stringProp name="-446785372">${__RandomString(2,123456789)} Brooklyn Ave</stringProp>
                  <stringProp name="441211526">Brooklyn</stringProp>
                  <stringProp name="2507">NY</stringProp>
                  <stringProp name="46761911">11216</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="-1480425477">${__RandomString(4,123456789)} W 43rd St</stringProp>
                  <stringProp name="-1529782994">Houston</stringProp>
                  <stringProp name="2692">TX</stringProp>
                  <stringProp name="1390858932">77018-4299</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="1600595541">${__RandomString(5,123456789)}</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="201406126">0036g00000ERbJDAA1</stringProp>
                  <stringProp name="2034846980">test${__RandomString(3,1234567890)}@gmail.com</stringProp>
                  <stringProp name="66605">CEO</stringProp>
                  <stringProp name="471763149">The contact department.</stringProp>
                  <stringProp name="-689521394">Anja Test</stringProp>
                  <stringProp name="86836">Web</stringProp>
                  <stringProp name="1618074698">1988-06-08</stringProp>
                  <stringProp name="-1341403012">Create new Contact</stringProp>
                  <stringProp name="1349887458">Primary</stringProp>
                  <stringProp name="60895824">English</stringProp>
                  <stringProp name="2024060659">40.650002</stringProp>
                  <stringProp name="1915369259">73.949997</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="2052958214">40.759098</stringProp>
                  <stringProp name="1919777271">73.992865</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="919001493">please write one reason</stringProp>
                  <stringProp name="131670529">2020-03-08</stringProp>
                  <stringProp name="-1883825388">Jigsaw..${__RandomString(3,123456789)}</stringProp>
                  <stringProp name="-988319719">Different</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
              <stringProp name="TestPlan.comments">0036g00000ERbJ3AA</stringProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Contact" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceContactAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="342681554">&quot;AccountId&quot;:&quot;${accountId}&quot;</stringProp>
                <stringProp name="1667610180">&quot;LastName&quot;:&quot;${lastName}&quot;</stringProp>
                <stringProp name="978713464">&quot;FirstName&quot;:&quot;${firstName}&quot;</stringProp>
                <stringProp name="-559016348">&quot;Salutation&quot;:&quot;${salutation}&quot;</stringProp>
                <stringProp name="1465384360">&quot;OtherStreet&quot;:&quot;${otherStreet}&quot;</stringProp>
                <stringProp name="1180754424">&quot;OtherCity&quot;:&quot;${otherCity}&quot;</stringProp>
                <stringProp name="1579123524">&quot;OtherState&quot;:&quot;${otherState}&quot;</stringProp>
                <stringProp name="380709458">&quot;OtherPostalCode&quot;:&quot;${otherPostalCode}&quot;</stringProp>
                <stringProp name="-143581468">&quot;OtherCountry&quot;:&quot;${otherCountry}&quot;</stringProp>
                <stringProp name="-374426914">&quot;MailingStreet&quot;:&quot;${mailingStreet}&quot;</stringProp>
                <stringProp name="1047749998">&quot;MailingCity&quot;:&quot;${mailingCity}&quot;</stringProp>
                <stringProp name="-1433689372">&quot;MailingState&quot;:&quot;${mailingState}&quot;</stringProp>
                <stringProp name="1497206216">&quot;MailingPostalCode&quot;:&quot;${mailingPostalCode}&quot;</stringProp>
                <stringProp name="-650987260">&quot;MailingCountry&quot;:&quot;${mailingCountry}&quot;</stringProp>
                <stringProp name="-481025698">&quot;Phone&quot;:&quot;${phone}&quot;</stringProp>
                <stringProp name="168154236">&quot;Fax&quot;:&quot;${fax}&quot;</stringProp>
                <stringProp name="675126426">&quot;MobilePhone&quot;:&quot;${mobilePhone}&quot;</stringProp>
                <stringProp name="770116448">&quot;HomePhone&quot;:&quot;${homePhone}&quot;</stringProp>
                <stringProp name="1507063204">&quot;OtherPhone&quot;:&quot;${otherPhone}&quot;</stringProp>
                <stringProp name="883999972">&quot;AssistantPhone&quot;:&quot;${assistantPhone}&quot;</stringProp>
                <stringProp name="-694714132">&quot;ReportsToId&quot;:&quot;${reportsToId}&quot;</stringProp>
                <stringProp name="-939682502">&quot;Email&quot;:&quot;${email}&quot;</stringProp>
                <stringProp name="-626112078">&quot;Title&quot;:&quot;${title}&quot;</stringProp>
                <stringProp name="1454017316">&quot;Department&quot;:&quot;${department}&quot;</stringProp>
                <stringProp name="231570516">&quot;AssistantName&quot;:&quot;${assistantName}&quot;</stringProp>
                <stringProp name="-1568137084">&quot;LeadSource&quot;:&quot;${leadSource}&quot;</stringProp>
                <stringProp name="535167516">&quot;Birthdate&quot;:&quot;${birthdate}&quot;</stringProp>
                <stringProp name="-936355654">&quot;Description&quot;:&quot;${description}&quot;</stringProp>
                <stringProp name="393763588">&quot;Level__c&quot;:&quot;${level__c}&quot;</stringProp>
                <stringProp name="-815786204">&quot;Languages__c&quot;:&quot;${languages__c}&quot;</stringProp>
                <stringProp name="1080982990">&quot;OtherLongitude&quot;:${OtherLongitude}</stringProp>
                <stringProp name="-2000447094">&quot;OtherLatitude&quot;:${OtherLatitude}</stringProp>
                <stringProp name="1647466410">&quot;MailingLatitude&quot;:${MailingLatitude}</stringProp>
                <stringProp name="-747062588">&quot;MailingLongitude&quot;:${MailingLongitude}</stringProp>
                <stringProp name="-794350588">&quot;EmailBouncedReason&quot;:&quot;${EmailBouncedReason}&quot;</stringProp>
                <stringProp name="-491412124">&quot;Jigsaw&quot;:&quot;${Jigsaw}&quot;</stringProp>
                <stringProp name="1583331928">&quot;CleanStatus&quot;:&quot;${CleanStatus}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Contact" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;AccountId&quot;:&quot;${accountIdUpdate}&quot;,&#xd;
&quot;LastName&quot;:&quot;${lastNameUpdate}&quot;,&#xd;
&quot;FirstName&quot;:&quot;${firstNameUpdate}&quot;,&#xd;
&quot;Salutation&quot;:&quot;${salutationUpdate}&quot;,&#xd;
&quot;OtherStreet&quot;:&quot;${otherStreetUpdate}&quot;,&#xd;
&quot;OtherCity&quot;:&quot;${otherCityUpdate}&quot;,&#xd;
&quot;OtherState&quot;:&quot;${otherStateUpdate}&quot;,&#xd;
&quot;OtherPostalCode&quot;:&quot;${otherPostalCodeUpdate}&quot;,&#xd;
&quot;OtherCountry&quot;:&quot;${otherCountryUpdate}&quot;,&#xd;
&quot;MailingStreet&quot;:&quot;${mailingStreetUpdate}&quot;,&#xd;
&quot;MailingCity&quot;:&quot;${mailingCityUpdate}&quot;,&#xd;
&quot;MailingState&quot;:&quot;${mailingStateUpdate}&quot;,&#xd;
&quot;MailingPostalCode&quot;:&quot;${mailingPostalCodeUpdate}&quot;,&#xd;
&quot;MailingCountry&quot;:&quot;${mailingCountryUpdate}&quot;,&#xd;
&quot;Phone&quot;:&quot;${phoneUpdate}&quot;,&#xd;
&quot;Fax&quot;:&quot;${faxUpdate}&quot;,&#xd;
&quot;MobilePhone&quot;:&quot;${mobilePhoneUpdate}&quot;,&#xd;
&quot;HomePhone&quot;:&quot;${homePhoneUpdate}&quot;,&#xd;
&quot;OtherPhone&quot;:&quot;${otherPhoneUpdate}&quot;,&#xd;
&quot;AssistantPhone&quot;:&quot;${assistantPhoneUpdate}&quot;,&#xd;
&quot;ReportsToId&quot;:&quot;${reportsToIdUpdate}&quot;,&#xd;
&quot;Email&quot;:&quot;${emailUpdate}&quot;,&#xd;
&quot;Title&quot;:&quot;${titleUpdate}&quot;,&#xd;
&quot;Department&quot;:&quot;${departmentUpdate}&quot;,&#xd;
&quot;AssistantName&quot;:&quot;${assistantNameUpdate}&quot;,&#xd;
&quot;LeadSource&quot;:&quot;${leadSourceUpdate}&quot;,&#xd;
&quot;Birthdate&quot;:&quot;${birthdateUpdate}&quot;,&#xd;
&quot;Description&quot;:&quot;${descriptionUpdate}&quot;,&#xd;
&quot;Level__c&quot;:&quot;${level__cUpdate}&quot;,&#xd;
&quot;Languages__c&quot;:&quot;${languages__cUpdate}&quot;,&#xd;
&quot;OtherLongitude&quot;:&quot;${OtherLongitudeUpdate}&quot;,&#xd;
&quot;OtherLatitude&quot;:&quot;${OtherLatitudeUpdate}&quot;,&#xd;
&quot;MailingLatitude&quot;:&quot;${MailingLatitudeUpdate}&quot;,&#xd;
&quot;MailingLongitude&quot;:&quot;${MailingLongitudeUpdate}&quot;,&#xd;
&quot;EmailBouncedReason&quot;:&quot;${EmailBouncedReasonUpdate}&quot;,&#xd;
&quot;Jigsaw&quot;:&quot;${JigsawUpdate}&quot;,&#xd;
&quot;CleanStatus&quot;:&quot;${CleanStatusUpdate}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceContactAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="188424977">accountIdUpdate</stringProp>
                <stringProp name="-485624214">lastNameUpdate</stringProp>
                <stringProp name="-510370300">firstNameUpdate</stringProp>
                <stringProp name="1905359105">salutationUpdate</stringProp>
                <stringProp name="-851910180">otherStreetUpdate</stringProp>
                <stringProp name="-195786428">otherCityUpdate</stringProp>
                <stringProp name="2083559306">otherStateUpdate</stringProp>
                <stringProp name="1839933297">otherPostalCodeUpdate</stringProp>
                <stringProp name="1135976143">otherCountryUpdate</stringProp>
                <stringProp name="-192461545">mailingStreetUpdate</stringProp>
                <stringProp name="1757970239">mailingCityUpdate</stringProp>
                <stringProp name="-1774493457">mailingStateUpdate</stringProp>
                <stringProp name="-1269861076">mailingPostalCodeUpdate</stringProp>
                <stringProp name="104047348">mailingCountryUpdate</stringProp>
                <stringProp name="-997451817">phoneUpdate</stringProp>
                <stringProp name="-756603322">faxUpdate</stringProp>
                <stringProp name="14407125">mobilePhoneUpdate</stringProp>
                <stringProp name="790845816">homePhoneUpdate</stringProp>
                <stringProp name="-158845273">otherPhoneUpdate</stringProp>
                <stringProp name="1288599065">assistantPhoneUpdate</stringProp>
                <stringProp name="289260670">reportsToIdUpdate</stringProp>
                <stringProp name="1934576517">emailUpdate</stringProp>
                <stringProp name="570172737">titleUpdate</stringProp>
                <stringProp name="1521754811">departmentUpdate</stringProp>
                <stringProp name="625941682">assistantNameUpdate</stringProp>
                <stringProp name="-1184000448">leadSourceUpdate</stringProp>
                <stringProp name="1553460246">birthdateUpdate</stringProp>
                <stringProp name="-1748059163">descriptionUpdate</stringProp>
                <stringProp name="1522401320">level__cUpdate</stringProp>
                <stringProp name="1576336753">languages__cUpdate</stringProp>
                <stringProp name="-1895671224">OtherLongitudeUpdate</stringProp>
                <stringProp name="-881178779">OtherLatitudeUpdate</stringProp>
                <stringProp name="2062176224">MailingLatitudeUpdate</stringProp>
                <stringProp name="-845979347">MailingLongitudeUpdate</stringProp>
                <stringProp name="786963469">EmailBouncedReasonUpdate</stringProp>
                <stringProp name="-1171378134">JigsawUpdate</stringProp>
                <stringProp name="1420876836">CleanStatusUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-883455328">
                  <stringProp name="201981450">0016g00000EHGqyAAH</stringProp>
                  <stringProp name="-204748517">Testovski ${__RandomString(5,1234567890)}</stringProp>
                  <stringProp name="51547703">Test ${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="68928">Dr.</stringProp>
                  <stringProp name="-446785372">${__RandomString(2,123456789)} Brooklyn Ave</stringProp>
                  <stringProp name="441211526">Brooklyn</stringProp>
                  <stringProp name="2507">NY</stringProp>
                  <stringProp name="46761911">11216</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="-1480425477">${__RandomString(4,123456789)} W 43rd St</stringProp>
                  <stringProp name="-1529782994">Houston</stringProp>
                  <stringProp name="2692">TX</stringProp>
                  <stringProp name="1390858932">77018-4299</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="1600595541">${__RandomString(5,123456789)}</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="200899706">0036g00000ERbJ3AAL</stringProp>
                  <stringProp name="2034846980">test${__RandomString(3,1234567890)}@gmail.com</stringProp>
                  <stringProp name="66605">CEO</stringProp>
                  <stringProp name="471763149">The contact department.</stringProp>
                  <stringProp name="-689521394">Anja Test</stringProp>
                  <stringProp name="86836">Web</stringProp>
                  <stringProp name="1618074698">1988-06-08</stringProp>
                  <stringProp name="-1341403012">Create new Contact</stringProp>
                  <stringProp name="1349887458">Primary</stringProp>
                  <stringProp name="60895824">English</stringProp>
                  <stringProp name="52359021">73.94</stringProp>
                  <stringProp name="49498993">40.65</stringProp>
                  <stringProp name="49498993">40.65</stringProp>
                  <stringProp name="52359021">73.94</stringProp>
                  <stringProp name="-666292901">Update reason</stringProp>
                  <stringProp name="-1883825388">Jigsaw..${__RandomString(3,123456789)}</stringProp>
                  <stringProp name="982065527">Pending</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Contact" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceContactAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-890693445">&quot;AccountId&quot;:&quot;${accountIdUpdate}&quot;</stringProp>
                <stringProp name="-770324051">&quot;LastName&quot;:&quot;${lastNameUpdate}&quot;</stringProp>
                <stringProp name="-2117969951">&quot;FirstName&quot;:&quot;${firstNameUpdate}&quot;</stringProp>
                <stringProp name="-1436708403">&quot;Salutation&quot;:&quot;${salutationUpdate}&quot;</stringProp>
                <stringProp name="216397329">&quot;OtherStreet&quot;:&quot;${otherStreetUpdate}&quot;</stringProp>
                <stringProp name="715546209">&quot;OtherCity&quot;:&quot;${otherCityUpdate}&quot;</stringProp>
                <stringProp name="2072106669">&quot;OtherState&quot;:&quot;${otherStateUpdate}&quot;</stringProp>
                <stringProp name="-661554373">&quot;OtherPostalCode&quot;:&quot;${otherPostalCodeUpdate}&quot;</stringProp>
                <stringProp name="-1982318003">&quot;OtherCountry&quot;:&quot;${otherCountryUpdate}&quot;</stringProp>
                <stringProp name="-147756345">&quot;MailingStreet&quot;:&quot;${mailingStreetUpdate}&quot;</stringProp>
                <stringProp name="2141843799">&quot;MailingCity&quot;:&quot;${mailingCityUpdate}&quot;</stringProp>
                <stringProp name="-1207976371">&quot;MailingState&quot;:&quot;${mailingStateUpdate}&quot;</stringProp>
                <stringProp name="1831267889">&quot;MailingPostalCode&quot;:&quot;${mailingPostalCodeUpdate}&quot;</stringProp>
                <stringProp name="1933950061">&quot;MailingCountry&quot;:&quot;${mailingCountryUpdate}&quot;</stringProp>
                <stringProp name="-1045825209">&quot;Phone&quot;:&quot;${phoneUpdate}&quot;</stringProp>
                <stringProp name="-1912316443">&quot;Fax&quot;:&quot;${faxUpdate}&quot;</stringProp>
                <stringProp name="-129951869">&quot;MobilePhone&quot;:&quot;${mobilePhoneUpdate}&quot;</stringProp>
                <stringProp name="850516425">&quot;HomePhone&quot;:&quot;${homePhoneUpdate}&quot;</stringProp>
                <stringProp name="1022296333">&quot;OtherPhone&quot;:&quot;${otherPhoneUpdate}&quot;</stringProp>
                <stringProp name="-431792051">&quot;AssistantPhone&quot;:&quot;${assistantPhoneUpdate}&quot;</stringProp>
                <stringProp name="-1101072811">&quot;ReportsToId&quot;:&quot;${reportsToIdUpdate}&quot;</stringProp>
                <stringProp name="-1509156829">&quot;Email&quot;:&quot;${emailUpdate}&quot;</stringProp>
                <stringProp name="-1571712357">&quot;Title&quot;:&quot;${titleUpdate}&quot;</stringProp>
                <stringProp name="887060109">&quot;Department&quot;:&quot;${departmentUpdate}&quot;</stringProp>
                <stringProp name="863290301">&quot;AssistantName&quot;:&quot;${assistantNameUpdate}&quot;</stringProp>
                <stringProp name="1037009901">&quot;LeadSource&quot;:&quot;${leadSourceUpdate}&quot;</stringProp>
                <stringProp name="1144247173">&quot;Birthdate&quot;:&quot;${birthdateUpdate}&quot;</stringProp>
                <stringProp name="184433571">&quot;Description&quot;:&quot;${descriptionUpdate}&quot;</stringProp>
                <stringProp name="-615915923">&quot;Level__c&quot;:&quot;${level__cUpdate}&quot;</stringProp>
                <stringProp name="2050753165">&quot;Languages__c&quot;:&quot;${languages__cUpdate}&quot;</stringProp>
                <stringProp name="854914373">&quot;OtherLongitude&quot;:${OtherLongitudeUpdate}</stringProp>
                <stringProp name="1222464513">&quot;OtherLatitude&quot;:${OtherLatitudeUpdate}</stringProp>
                <stringProp name="1418525217">&quot;MailingLatitude&quot;:${MailingLatitudeUpdate}</stringProp>
                <stringProp name="-1583406661">&quot;MailingLongitude&quot;:${MailingLongitudeUpdate}</stringProp>
                <stringProp name="1884811117">&quot;EmailBouncedReason&quot;:&quot;${EmailBouncedReasonUpdate}&quot;</stringProp>
                <stringProp name="-398597939">&quot;Jigsaw&quot;:&quot;${JigsawUpdate}&quot;</stringProp>
                <stringProp name="-461803839">&quot;CleanStatus&quot;:&quot;${CleanStatusUpdate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Contact" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceContactAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Contact List" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceContactAPI}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-585480101">&quot;recentItems&quot;:</stringProp>
                <stringProp name="1892651281">&quot;attributes&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Opportunity" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Opportunity" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;AccountId&quot;:&quot;${accountId}&quot;,&#xd;
&quot;IsPrivate&quot;:&quot;${isPrivate}&quot;,&#xd;
&quot;Name&quot;:&quot;${name}&quot;,&#xd;
&quot;Description&quot;:&quot;${description}&quot;,&#xd;
&quot;StageName&quot;:&quot;${stageName}&quot;,&#xd;
&quot;Amount&quot;:&quot;${amount}&quot;,&#xd;
&quot;Probability&quot;:&quot;${probability}&quot;,&#xd;
&quot;TotalOpportunityQuantity&quot;:&quot;${totalOpportunityQuantity}&quot;,&#xd;
&quot;CloseDate&quot;:&quot;${closeDate}&quot;,&#xd;
&quot;Type&quot;:&quot;${type}&quot;,&#xd;
&quot;NextStep&quot;:&quot;${nextStep}&quot;,&#xd;
&quot;LeadSource&quot;:&quot;${leadSource}&quot;,&#xd;
&quot;ForecastCategoryName&quot;:&quot;${forecastCategoryName}&quot;,&#xd;
&quot;CampaignId&quot;:&quot;${campaignId}&quot;,&#xd;
&quot;ContactId&quot;:&quot;${contactId}&quot;,&#xd;
&quot;DeliveryInstallationStatus__c&quot;:&quot;${deliveryInstallationStatus__c}&quot;,&#xd;
&quot;TrackingNumber__c&quot;:&quot;${trackingNumber__c}&quot;,&#xd;
&quot;OrderNumber__c&quot;:&quot;${orderNumber__c} &quot;,&#xd;
&quot;CurrentGenerators__c&quot;:&quot;${currentGenerators__c}&quot;,&#xd;
&quot;MainCompetitors__c&quot;:&quot;${mainCompetitors__c}&quot;,&#xd;
&quot;Pricebook2Id&quot;:&quot;${Pricebook2Id}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOpportunityAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1827029976">accountId</stringProp>
                <stringProp name="-894276359">isPrivate</stringProp>
                <stringProp name="3373707">name</stringProp>
                <stringProp name="-1724546052">description</stringProp>
                <stringProp name="1836712617">stageName</stringProp>
                <stringProp name="-1413853096">amount</stringProp>
                <stringProp name="-1290561483">probability</stringProp>
                <stringProp name="-1709364582">totalOpportunityQuantity</stringProp>
                <stringProp name="-482966074">closeDate</stringProp>
                <stringProp name="3575610">type</stringProp>
                <stringProp name="1424381023">nextStep</stringProp>
                <stringProp name="674365079">leadSource</stringProp>
                <stringProp name="-938214844">forecastCategoryName</stringProp>
                <stringProp name="-1318255029">campaignId</stringProp>
                <stringProp name="-411130533">contactId</stringProp>
                <stringProp name="-1702995293">deliveryInstallationStatus__c</stringProp>
                <stringProp name="1527874467">trackingNumber__c</stringProp>
                <stringProp name="-2019502868">orderNumber__c</stringProp>
                <stringProp name="-1542221942">currentGenerators__c</stringProp>
                <stringProp name="1035177109">mainCompetitors__c</stringProp>
                <stringProp name="1034060827">Pricebook2Id</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="391086835">
                  <stringProp name="201981450">0016g00000EHGqyAAH</stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="-454010922">Test ${__RandomString(4,1234567890)}</stringProp>
                  <stringProp name="-584448721">Create new Opportunity</stringProp>
                  <stringProp name="448549558">Prospecting</stringProp>
                  <stringProp name="1893998548">${__RandomString(4,123456789)}</stringProp>
                  <stringProp name="-1814162734">${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="-2107565741">${__RandomString(3,123456789)}</stringProp>
                  <stringProp name="131819543">2020-08-25</stringProp>
                  <stringProp name="-199023620">Existing Customer - Upgrade</stringProp>
                  <stringProp name="645556076">Description:Description of next task in closing opportunity.</stringProp>
                  <stringProp name="86836">Web</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="577503499">7016g000000E1svAAC</stringProp>
                  <stringProp name="201048661">0036g00000ERbJ8AAL</stringProp>
                  <stringProp name="601036331">Completed</stringProp>
                  <stringProp name="-910024283">${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="-1704574374">COU${__RandomString(5,1234567890)}</stringProp>
                  <stringProp name="2350">IW</stringProp>
                  <stringProp name="2350">IW</stringProp>
                  <stringProp name="1635849996">01s6g000009rOxXAAU</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Opportunity" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOpportunityAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="342681554">&quot;AccountId&quot;:&quot;${accountId}&quot;</stringProp>
                <stringProp name="-2012336694">&quot;IsPrivate&quot;:${isPrivate}</stringProp>
                <stringProp name="432355204">&quot;Name&quot;:&quot;${name}&quot;</stringProp>
                <stringProp name="-936355654">&quot;Description&quot;:&quot;${description}&quot;</stringProp>
                <stringProp name="176338580">&quot;StageName&quot;:&quot;${stageName}&quot;</stringProp>
                <stringProp name="-1784832898">&quot;Amount&quot;:${amount}.0</stringProp>
                <stringProp name="-1866494066">&quot;CloseDate&quot;:&quot;${closeDate}&quot;</stringProp>
                <stringProp name="953046116">&quot;Type&quot;:&quot;${type}&quot;</stringProp>
                <stringProp name="1653925636">&quot;NextStep&quot;:&quot;${nextStep}&quot;</stringProp>
                <stringProp name="-1568137084">&quot;LeadSource&quot;:&quot;${leadSource}&quot;</stringProp>
                <stringProp name="-1668910216">&quot;ContactId&quot;:&quot;${contactId}&quot;</stringProp>
                <stringProp name="-1952022264">&quot;DeliveryInstallationStatus__c&quot;:&quot;${deliveryInstallationStatus__c}&quot;</stringProp>
                <stringProp name="-740462584">&quot;TrackingNumber__c&quot;:&quot;${trackingNumber__c}&quot;</stringProp>
                <stringProp name="-738315420">&quot;OrderNumber__c&quot;:&quot;${orderNumber__c}&quot;</stringProp>
                <stringProp name="-1822185372">&quot;CurrentGenerators__c&quot;:&quot;${currentGenerators__c}&quot;</stringProp>
                <stringProp name="-1031705404">&quot;MainCompetitors__c&quot;:&quot;${mainCompetitors__c}&quot;</stringProp>
                <stringProp name="-364321718">&quot;Probability&quot;:${probability}</stringProp>
                <stringProp name="1797840074">&quot;ExpectedRevenue&quot;:${ExpectedRevenue}</stringProp>
                <stringProp name="375390116">&quot;Pricebook2Id&quot;:&quot;${Pricebook2Id}&quot;</stringProp>
                <stringProp name="-364321718">&quot;Probability&quot;:${probability}</stringProp>
                <stringProp name="1269591416">&quot;TotalOpportunityQuantity&quot;:${totalOpportunityQuantity}</stringProp>
                <stringProp name="-1324948988">&quot;CampaignId&quot;:&quot;${campaignId}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ExpectedRevenue" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ExpectedRevenue</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;ExpectedRevenue&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Opportunity" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;AccountId&quot;:&quot;${accountIdUpdate}&quot;,&#xd;
&quot;IsPrivate&quot;:&quot;${isPrivateUpdate}&quot;,&#xd;
&quot;Name&quot;:&quot;${nameUpdate}&quot;,&#xd;
&quot;Description&quot;:&quot;${descriptionUpdate}&quot;,&#xd;
&quot;StageName&quot;:&quot;${stageNameUpdate}&quot;,&#xd;
&quot;Amount&quot;:&quot;${amountUpdate}&quot;,&#xd;
&quot;Probability&quot;:&quot;${probabilityUpdate}&quot;,&#xd;
&quot;TotalOpportunityQuantity&quot;:&quot;${totalOpportunityQuantityUpdate}&quot;,&#xd;
&quot;CloseDate&quot;:&quot;${closeDateUpdate}&quot;,&#xd;
&quot;Type&quot;:&quot;${typeUpdate}&quot;,&#xd;
&quot;NextStep&quot;:&quot;${nextStepUpdate}&quot;,&#xd;
&quot;LeadSource&quot;:&quot;${leadSourceUpdate}&quot;,&#xd;
&quot;ForecastCategoryName&quot;:&quot;${forecastCategoryNameUpdate}&quot;,&#xd;
&quot;CampaignId&quot;:&quot;${campaignIdUpdate}&quot;,&#xd;
&quot;DeliveryInstallationStatus__c&quot;:&quot;${deliveryInstallationStatus__cUpdate}&quot;,&#xd;
&quot;TrackingNumber__c&quot;:&quot;${trackingNumber__cUpdate}&quot;,&#xd;
&quot;OrderNumber__c&quot;:&quot;${orderNumber__cUpdate} &quot;,&#xd;
&quot;CurrentGenerators__c&quot;:&quot;${currentGenerators__cUpdate}&quot;,&#xd;
&quot;MainCompetitors__c&quot;:&quot;${mainCompetitors__cUpdate}&quot;,&#xd;
&quot;Pricebook2Id&quot;:&quot;${Pricebook2IdUpdate}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOpportunityAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="188424977">accountIdUpdate</stringProp>
                <stringProp name="-1450822878">isPrivateUpdate</stringProp>
                <stringProp name="-694727884">nameUpdate</stringProp>
                <stringProp name="-1748059163">descriptionUpdate</stringProp>
                <stringProp name="970114258">stageNameUpdate</stringProp>
                <stringProp name="826790721">amountUpdate</stringProp>
                <stringProp name="386990430">probabilityUpdate</stringProp>
                <stringProp name="-363517">totalOpportunityQuantityUpdate</stringProp>
                <stringProp name="1089846831">closeDateUpdate</stringProp>
                <stringProp name="-1369579357">typeUpdate</stringProp>
                <stringProp name="1420588552">nextStepUpdate</stringProp>
                <stringProp name="-1184000448">leadSourceUpdate</stringProp>
                <stringProp name="-1472373715">forecastCategoryNameUpdate</stringProp>
                <stringProp name="-1477900556">campaignIdUpdate</stringProp>
                <stringProp name="2060433740">deliveryInstallationStatus__cUpdate</stringProp>
                <stringProp name="547365452">trackingNumber__cUpdate</stringProp>
                <stringProp name="1414895829">orderNumber__cUpdate</stringProp>
                <stringProp name="-1066572557">currentGenerators__cUpdate</stringProp>
                <stringProp name="893398462">mainCompetitors__cUpdate</stringProp>
                <stringProp name="-564336444">Pricebook2IdUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-634883685">
                  <stringProp name="129648883">0016g00000EHFCPAA5</stringProp>
                  <stringProp name="3569038">true</stringProp>
                  <stringProp name="1690111336">Anja ${__RandomString(4,1234567890)}</stringProp>
                  <stringProp name="-584448721">Create new Opportunity</stringProp>
                  <stringProp name="448549558">Prospecting</stringProp>
                  <stringProp name="1893998548">${__RandomString(4,123456789)}</stringProp>
                  <stringProp name="-1814162734">${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="-2107565741">${__RandomString(3,123456789)}</stringProp>
                  <stringProp name="132504736">2020-10-25</stringProp>
                  <stringProp name="-199023620">Existing Customer - Upgrade</stringProp>
                  <stringProp name="645556076">Description:Description of next task in closing opportunity.</stringProp>
                  <stringProp name="86836">Web</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="576282084">7016g000000E1sMAAS</stringProp>
                  <stringProp name="601036331">Completed</stringProp>
                  <stringProp name="-910024283">${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="-1704574374">COU${__RandomString(5,1234567890)}</stringProp>
                  <stringProp name="2350">IW</stringProp>
                  <stringProp name="2350">IW</stringProp>
                  <stringProp name="1618779753">01s6g000009rOfIAAU</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Opportunity" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOpportunityAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-890693445">&quot;AccountId&quot;:&quot;${accountIdUpdate}&quot;</stringProp>
                <stringProp name="2088220737">&quot;IsPrivate&quot;:${isPrivateUpdate}</stringProp>
                <stringProp name="1117739757">&quot;Name&quot;:&quot;${nameUpdate}&quot;</stringProp>
                <stringProp name="184433571">&quot;Description&quot;:&quot;${descriptionUpdate}&quot;</stringProp>
                <stringProp name="2003127805">&quot;StageName&quot;:&quot;${stageNameUpdate}&quot;</stringProp>
                <stringProp name="-1987934283">&quot;Amount&quot;:${amountUpdate}.0</stringProp>
                <stringProp name="1266025335">&quot;CloseDate&quot;:&quot;${closeDateUpdate}&quot;</stringProp>
                <stringProp name="-1361621043">&quot;Type&quot;:&quot;${typeUpdate}&quot;</stringProp>
                <stringProp name="1238198893">&quot;NextStep&quot;:&quot;${nextStepUpdate}&quot;</stringProp>
                <stringProp name="1037009901">&quot;LeadSource&quot;:&quot;${leadSourceUpdate}&quot;</stringProp>
                <stringProp name="-178491023">&quot;DeliveryInstallationStatus__c&quot;:&quot;${deliveryInstallationStatus__cUpdate}&quot;</stringProp>
                <stringProp name="-1369169807">&quot;TrackingNumber__c&quot;:&quot;${trackingNumber__cUpdate}&quot;</stringProp>
                <stringProp name="2019815117">&quot;OrderNumber__c&quot;:&quot;${orderNumber__cUpdate}&quot;</stringProp>
                <stringProp name="-1860328499">&quot;CurrentGenerators__c&quot;:&quot;${currentGenerators__cUpdate}&quot;</stringProp>
                <stringProp name="1378787373">&quot;MainCompetitors__c&quot;:&quot;${mainCompetitors__cUpdate}&quot;</stringProp>
                <stringProp name="-328233279">&quot;Probability&quot;:${probabilityUpdate}</stringProp>
                <stringProp name="-2037176511">&quot;ExpectedRevenue&quot;:${ExpectedRevenueUpdate}</stringProp>
                <stringProp name="1590397709">&quot;Pricebook2Id&quot;:&quot;${Pricebook2IdUpdate}&quot;</stringProp>
                <stringProp name="-328233279">&quot;Probability&quot;:${probabilityUpdate}</stringProp>
                <stringProp name="782695791">&quot;TotalOpportunityQuantity&quot;:${totalOpportunityQuantityUpdate}</stringProp>
                <stringProp name="-73980563">&quot;CampaignId&quot;:&quot;${campaignIdUpdate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ExpectedRevenueUpdate" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ExpectedRevenueUpdate</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;ExpectedRevenue&quot;:(.+?),</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Opportunity" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOpportunityAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Opportunty List" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOpportunityAPI}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-585480101">&quot;recentItems&quot;:</stringProp>
                <stringProp name="1892651281">&quot;attributes&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Campaign" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Campaign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;Name&quot;:&quot;${name}&quot;,&#xd;
&quot;ParentId&quot;:&quot;${parentId}&quot;,&#xd;
&quot;Type&quot;:&quot;${type}&quot;,&#xd;
&quot;Status&quot;:&quot;${status}&quot;,&#xd;
&quot;StartDate&quot;:&quot;${startDate}&quot;,&#xd;
&quot;EndDate&quot;:&quot;${endDate}&quot;,&#xd;
&quot;ExpectedRevenue&quot;:&quot;${expectedRevenue}&quot;,&#xd;
&quot;BudgetedCost&quot;:&quot;${budgetedCost}&quot;,&#xd;
&quot;ActualCost&quot;:&quot;${actualCost}&quot;,&#xd;
&quot;ExpectedResponse&quot;:&quot;${expectedResponse}&quot;,&#xd;
&quot;NumberSent&quot;:&quot;${numberSent}&quot;,&#xd;
&quot;IsActive&quot;:&quot;${isActive}&quot;,&#xd;
&quot;Description&quot;:&quot;${description}&quot;,&#xd;
&quot;campaignMemberRecordTypeId&quot;:&quot;${campaignMemberRecordTypeId}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceCampaignAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="3373707">name</stringProp>
                <stringProp name="1175162725">parentId</stringProp>
                <stringProp name="3575610">type</stringProp>
                <stringProp name="-892481550">status</stringProp>
                <stringProp name="-2129778896">startDate</stringProp>
                <stringProp name="-1607727319">endDate</stringProp>
                <stringProp name="-1285220796">expectedRevenue</stringProp>
                <stringProp name="-1193004911">budgetedCost</stringProp>
                <stringProp name="-786147717">actualCost</stringProp>
                <stringProp name="-1262844135">expectedResponse</stringProp>
                <stringProp name="-392211839">numberSent</stringProp>
                <stringProp name="-748916528">isActive</stringProp>
                <stringProp name="-1724546052">description</stringProp>
                <stringProp name="1961372304">campaignMemberRecordTypeId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1609791803">
                  <stringProp name="51547703">Test ${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="575477711">7016g000000E1s2AAC</stringProp>
                  <stringProp name="-1406272182">Webinar</stringProp>
                  <stringProp name="1170766244">Planned</stringProp>
                  <stringProp name="131759895">2020-06-01</stringProp>
                  <stringProp name="132504670">2020-10-01</stringProp>
                  <stringProp name="1893998548">${__RandomString(4,123456789)}</stringProp>
                  <stringProp name="1307192534">${__RandomString(6,123456789)}</stringProp>
                  <stringProp name="1600595541">${__RandomString(5,123456789)}</stringProp>
                  <stringProp name="-1814162734">${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="-1814162734">${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="3569038">true</stringProp>
                  <stringProp name="-393801130">Description test</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Campaign" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceCampaignAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="432355204">&quot;Name&quot;:&quot;${name}&quot;</stringProp>
                <stringProp name="-2027941692">&quot;ParentId&quot;:&quot;${parentId}&quot;</stringProp>
                <stringProp name="953046116">&quot;Type&quot;:&quot;${type}&quot;</stringProp>
                <stringProp name="-368417628">&quot;Status&quot;:&quot;${status}&quot;</stringProp>
                <stringProp name="1644170210">&quot;StartDate&quot;:&quot;${startDate}&quot;</stringProp>
                <stringProp name="894535828">&quot;EndDate&quot;:&quot;${endDate}&quot;</stringProp>
                <stringProp name="-1654351702">&quot;ExpectedRevenue&quot;:${expectedRevenue}</stringProp>
                <stringProp name="-1489137206">&quot;BudgetedCost&quot;:${budgetedCost}</stringProp>
                <stringProp name="140480758">&quot;ActualCost&quot;:${actualCost}</stringProp>
                <stringProp name="-342074182">&quot;ExpectedResponse&quot;:${expectedResponse}</stringProp>
                <stringProp name="-2057515798">&quot;NumberSent&quot;:${numberSent}</stringProp>
                <stringProp name="-1401162356">&quot;IsActive&quot;:${isActive}</stringProp>
                <stringProp name="-936355654">&quot;Description&quot;:&quot;${description}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Campaign" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;Name&quot;:&quot;${nameUpdate}&quot;,&#xd;
&quot;ParentId&quot;:&quot;${parentIdUpdate}&quot;,&#xd;
&quot;Type&quot;:&quot;${typeUpdate}&quot;,&#xd;
&quot;Status&quot;:&quot;${statusUpdate}&quot;,&#xd;
&quot;StartDate&quot;:&quot;${startDateUpdate}&quot;,&#xd;
&quot;EndDate&quot;:&quot;${endDateUpdate}&quot;,&#xd;
&quot;ExpectedRevenue&quot;:&quot;${expectedRevenueUpdate}&quot;,&#xd;
&quot;BudgetedCost&quot;:&quot;${budgetedCostUpdate}&quot;,&#xd;
&quot;ActualCost&quot;:&quot;${actualCostUpdate}&quot;,&#xd;
&quot;ExpectedResponse&quot;:&quot;${expectedResponseUpdate}&quot;,&#xd;
&quot;NumberSent&quot;:&quot;${numberSentUpdate}&quot;,&#xd;
&quot;IsActive&quot;:&quot;${isActiveUpdate}&quot;,&#xd;
&quot;Description&quot;:&quot;${descriptionUpdate}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceCampaignAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-694727884">nameUpdate</stringProp>
                <stringProp name="1662964878">parentIdUpdate</stringProp>
                <stringProp name="-1369579357">typeUpdate</stringProp>
                <stringProp name="2147465051">statusUpdate</stringProp>
                <stringProp name="-1809504231">startDateUpdate</stringProp>
                <stringProp name="722430290">endDateUpdate</stringProp>
                <stringProp name="1095333933">expectedRevenueUpdate</stringProp>
                <stringProp name="919397562">budgetedCostUpdate</stringProp>
                <stringProp name="-1072729308">actualCostUpdate</stringProp>
                <stringProp name="-329632446">expectedResponseUpdate</stringProp>
                <stringProp name="-1279077718">numberSentUpdate</stringProp>
                <stringProp name="717076921">isActiveUpdate</stringProp>
                <stringProp name="-1748059163">descriptionUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-190476908">
                  <stringProp name="51547703">Test ${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="575477711">7016g000000E1s2AAC</stringProp>
                  <stringProp name="-1406272182">Webinar</stringProp>
                  <stringProp name="1170766244">Planned</stringProp>
                  <stringProp name="131759895">2020-06-01</stringProp>
                  <stringProp name="132504670">2020-10-01</stringProp>
                  <stringProp name="1893998548">${__RandomString(4,123456789)}</stringProp>
                  <stringProp name="1307192534">${__RandomString(6,123456789)}</stringProp>
                  <stringProp name="1600595541">${__RandomString(5,123456789)}</stringProp>
                  <stringProp name="-1814162734">${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="-1814162734">${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="3569038">true</stringProp>
                  <stringProp name="-393801130">Description test</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Campaign" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceCampaignAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1117739757">&quot;Name&quot;:&quot;${nameUpdate}&quot;</stringProp>
                <stringProp name="641877037">&quot;ParentId&quot;:&quot;${parentIdUpdate}&quot;</stringProp>
                <stringProp name="-1361621043">&quot;Type&quot;:&quot;${typeUpdate}&quot;</stringProp>
                <stringProp name="542519309">&quot;Status&quot;:&quot;${statusUpdate}&quot;</stringProp>
                <stringProp name="217379019">&quot;StartDate&quot;:&quot;${startDateUpdate}&quot;</stringProp>
                <stringProp name="-1404133379">&quot;EndDate&quot;:&quot;${endDateUpdate}&quot;</stringProp>
                <stringProp name="1464498977">&quot;ExpectedRevenue&quot;:${expectedRevenueUpdate}</stringProp>
                <stringProp name="730602561">&quot;BudgetedCost&quot;:${budgetedCostUpdate}</stringProp>
                <stringProp name="-595260819">&quot;ActualCost&quot;:${actualCostUpdate}</stringProp>
                <stringProp name="1946350385">&quot;ExpectedResponse&quot;:${expectedResponseUpdate}</stringProp>
                <stringProp name="1658486625">&quot;NumberSent&quot;:${numberSentUpdate}</stringProp>
                <stringProp name="-374528381">&quot;IsActive&quot;:${isActiveUpdate}</stringProp>
                <stringProp name="184433571">&quot;Description&quot;:&quot;${descriptionUpdate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Campaign" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceCampaignAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Campaign List" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceCampaignAPI}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-585480101">&quot;recentItems&quot;:</stringProp>
                <stringProp name="1892651281">&quot;attributes&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Case" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Case" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ContactId&quot;: &quot;${contactId}&quot;,&#xd;
	&quot;AccountId&quot;: &quot;${accountId}&quot;,&#xd;
	&quot;SuppliedName&quot;: &quot;${suppliedName}&quot;,&#xd;
	&quot;SuppliedEmail&quot;: &quot;${suppliedEmail}&quot;,&#xd;
	&quot;SuppliedPhone&quot;: &quot;${suppliedPhone}&quot;,&#xd;
	&quot;SuppliedCompany&quot;: &quot;${suppliedCompany}&quot;,&#xd;
	&quot;Type&quot;: &quot;${type}&quot;,&#xd;
	&quot;Status&quot;: &quot;${status}&quot;,&#xd;
	&quot;Reason&quot;: &quot;${reason}&quot;,&#xd;
	&quot;Origin&quot;: &quot;${origin}&quot;,&#xd;
	&quot;Subject&quot;: &quot;${subject}&quot;,&#xd;
	&quot;Priority&quot;: &quot;${priority}&quot;,&#xd;
	&quot;Description&quot;: &quot;${description}&quot;,&#xd;
	&quot;Comments&quot;: &quot;${comments}&quot;,&#xd;
	&quot;EngineeringReqNumber__c&quot;: &quot;${engineeringReqNumber__c}&quot;,&#xd;
	&quot;SLAViolation__c&quot;: &quot;${sLAViolation__c}&quot;,&#xd;
	&quot;Product__c&quot;: &quot;${product__c}&quot;,&#xd;
	&quot;PotentialLiability__c&quot;: &quot;${potentialLiability__c}&quot;,&#xd;
	&quot;AssetId&quot;:&quot;${assetId}&quot;,&#xd;
	&quot;SourceId&quot;:&quot;${sourceId}&quot;,&#xd;
	&quot;ParentId&quot;:&quot;${parentId}&quot;,&#xd;
	&quot;IsEscalated&quot;:&quot;${isEscalated}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceCaseAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-411130533">contactId</stringProp>
                <stringProp name="-1827029976">accountId</stringProp>
                <stringProp name="1993464169">suppliedName</stringProp>
                <stringProp name="1659881598">suppliedEmail</stringProp>
                <stringProp name="1669904976">suppliedPhone</stringProp>
                <stringProp name="6883551">suppliedCompany</stringProp>
                <stringProp name="3575610">type</stringProp>
                <stringProp name="-892481550">status</stringProp>
                <stringProp name="-934964668">reason</stringProp>
                <stringProp name="-1008619738">origin</stringProp>
                <stringProp name="-1867885268">subject</stringProp>
                <stringProp name="-1165461084">priority</stringProp>
                <stringProp name="-1724546052">description</stringProp>
                <stringProp name="-602415628">comments</stringProp>
                <stringProp name="453655631">engineeringReqNumber__c</stringProp>
                <stringProp name="687886982">sLAViolation__c</stringProp>
                <stringProp name="1753008436">product__c</stringProp>
                <stringProp name="-233594988">potentialLiability__c</stringProp>
                <stringProp name="-704776149">assetId</stringProp>
                <stringProp name="1746327190">sourceId</stringProp>
                <stringProp name="1175162725">parentId</stringProp>
                <stringProp name="-1877805464">isEscalated</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-995030496">
                  <stringProp name="205070446">0036g00000ERbMbAAL</stringProp>
                  <stringProp name="201981450">0016g00000EHGqyAAH</stringProp>
                  <stringProp name="-466627917">Test${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="2034846980">test${__RandomString(3,1234567890)}@gmail.com</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="2350">IW</stringProp>
                  <stringProp name="1316529871">Mechanical</stringProp>
                  <stringProp name="-1105149167">Working</stringProp>
                  <stringProp name="187480080">Performance</stringProp>
                  <stringProp name="86836">Web</stringProp>
                  <stringProp name="1382325744">New Case</stringProp>
                  <stringProp name="-1994163307">Medium</stringProp>
                  <stringProp name="-1410220053">Description for case</stringProp>
                  <stringProp name="-334725758">Comments for the case</stringProp>
                  <stringProp name="-2107565741">${__RandomString(3,123456789)}</stringProp>
                  <stringProp name="2529">No</stringProp>
                  <stringProp name="2096053175">GC1040</stringProp>
                  <stringProp name="88775">Yes</stringProp>
                  <stringProp name="-2103513167">02i6g0000009XebAAE</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="1003358033">5006g000009xbneAAA</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Case" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceCaseAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1668910216">&quot;ContactId&quot;:&quot;${contactId}&quot;</stringProp>
                <stringProp name="342681554">&quot;AccountId&quot;:&quot;${accountId}&quot;</stringProp>
                <stringProp name="-169603772">&quot;SuppliedName&quot;:&quot;${suppliedName}&quot;</stringProp>
                <stringProp name="1112953470">&quot;SuppliedEmail&quot;:&quot;${suppliedEmail}&quot;</stringProp>
                <stringProp name="-1716917086">&quot;SuppliedPhone&quot;:&quot;${suppliedPhone}&quot;</stringProp>
                <stringProp name="-437877248">&quot;SuppliedCompany&quot;:&quot;${suppliedCompany}&quot;</stringProp>
                <stringProp name="953046116">&quot;Type&quot;:&quot;${type}&quot;</stringProp>
                <stringProp name="-368417628">&quot;Status&quot;:&quot;${status}&quot;</stringProp>
                <stringProp name="-1336349340">&quot;Reason&quot;:&quot;${reason}&quot;</stringProp>
                <stringProp name="-1625375708">&quot;Origin&quot;:&quot;${origin}&quot;</stringProp>
                <stringProp name="593784474">&quot;Subject&quot;:&quot;${subject}&quot;</stringProp>
                <stringProp name="734189348">&quot;Priority&quot;:&quot;${priority}&quot;</stringProp>
                <stringProp name="-936355654">&quot;Description&quot;:&quot;${description}&quot;</stringProp>
                <stringProp name="1672016608">&quot;EngineeringReqNumber__c&quot;:&quot;${engineeringReqNumber__c}&quot;</stringProp>
                <stringProp name="1580696654">&quot;SLAViolation__c&quot;:&quot;${sLAViolation__c}&quot;</stringProp>
                <stringProp name="-1037772060">&quot;Product__c&quot;:&quot;${product__c}&quot;</stringProp>
                <stringProp name="775318826">&quot;PotentialLiability__c&quot;:&quot;${potentialLiability__c}&quot;</stringProp>
                <stringProp name="1306253604">&quot;Comments&quot;:&quot;${comments}&quot;</stringProp>
                <stringProp name="-1254472040">&quot;AssetId&quot;:&quot;${assetId}&quot;</stringProp>
                <stringProp name="-2027941692">&quot;ParentId&quot;:&quot;${parentId}&quot;</stringProp>
                <stringProp name="-92205166">&quot;IsEscalated&quot;:&quot;${isEscalated}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Case" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ContactId&quot;: &quot;${contactIdUpdate}&quot;,&#xd;
	&quot;AccountId&quot;: &quot;${accountIdUpdate}&quot;,&#xd;
	&quot;SuppliedName&quot;: &quot;${suppliedNameUpdate}&quot;,&#xd;
	&quot;SuppliedEmail&quot;: &quot;${suppliedEmailUpdate}&quot;,&#xd;
	&quot;SuppliedPhone&quot;: &quot;${suppliedPhoneUpdate}&quot;,&#xd;
	&quot;SuppliedCompany&quot;: &quot;${suppliedCompanyUpdate}&quot;,&#xd;
	&quot;Type&quot;: &quot;${typeUpdate}&quot;,&#xd;
	&quot;Status&quot;: &quot;${statusUpdate}&quot;,&#xd;
	&quot;Reason&quot;: &quot;${reasonUpdate}&quot;,&#xd;
	&quot;Origin&quot;: &quot;${originUpdate}&quot;,&#xd;
	&quot;Subject&quot;: &quot;${subjectUpdate}&quot;,&#xd;
	&quot;Priority&quot;: &quot;${priorityUpdate}&quot;,&#xd;
	&quot;Description&quot;: &quot;${descriptionUpdate}&quot;,&#xd;
	&quot;Comments&quot;: &quot;${commentsUpdate}&quot;,&#xd;
	&quot;EngineeringReqNumber__c&quot;: &quot;${engineeringReqNumber__cUpdate}&quot;,&#xd;
	&quot;SLAViolation__c&quot;: &quot;${sLAViolation__cUpdate}&quot;,&#xd;
	&quot;Product__c&quot;: &quot;${product__cUpdate}&quot;,&#xd;
	&quot;PotentialLiability__c&quot;: &quot;${potentialLiability__cUpdate}&quot;,&#xd;
	&quot;AssetId&quot;:&quot;${assetIdUpdate}&quot;,&#xd;
	&quot;ParentId&quot;:&quot;${parentIdUpdate}&quot;,&#xd;
	&quot;IsEscalated&quot;:&quot;${isEscalatedUpdate}&quot;&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceCaseAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1704257020">contactIdUpdate</stringProp>
                <stringProp name="188424977">accountIdUpdate</stringProp>
                <stringProp name="-937522286">suppliedNameUpdate</stringProp>
                <stringProp name="-1297082649">suppliedEmailUpdate</stringProp>
                <stringProp name="65856313">suppliedPhoneUpdate</stringProp>
                <stringProp name="729139848">suppliedCompanyUpdate</stringProp>
                <stringProp name="-1369579357">typeUpdate</stringProp>
                <stringProp name="2147465051">statusUpdate</stringProp>
                <stringProp name="-1294142419">reasonUpdate</stringProp>
                <stringProp name="1798594447">originUpdate</stringProp>
                <stringProp name="164489493">subjectUpdate</stringProp>
                <stringProp name="23909261">priorityUpdate</stringProp>
                <stringProp name="-1748059163">descriptionUpdate</stringProp>
                <stringProp name="-221004835">commentsUpdate</stringProp>
                <stringProp name="199141880">engineeringReqNumber__cUpdate</stringProp>
                <stringProp name="1877146351">sLAViolation__cUpdate</stringProp>
                <stringProp name="908801821">product__cUpdate</stringProp>
                <stringProp name="52413821">potentialLiability__cUpdate</stringProp>
                <stringProp name="666177748">assetIdUpdate</stringProp>
                <stringProp name="1662964878">parentIdUpdate</stringProp>
                <stringProp name="208645457">isEscalatedUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="107715010">
                  <stringProp name="200899706">0036g00000ERbJ3AAL</stringProp>
                  <stringProp name="129648883">0016g00000EHFCPAA5</stringProp>
                  <stringProp name="-536010015">Anja${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="2034846980">test${__RandomString(3,1234567890)}@gmail.com</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="2350">IW</stringProp>
                  <stringProp name="1316529871">Mechanical</stringProp>
                  <stringProp name="-1052257198">Escalated</stringProp>
                  <stringProp name="187480080">Performance</stringProp>
                  <stringProp name="67066748">Email</stringProp>
                  <stringProp name="1382325744">New Case</stringProp>
                  <stringProp name="2249154">High</stringProp>
                  <stringProp name="-1410220053">Description for case</stringProp>
                  <stringProp name="-334725758">Comments for the case</stringProp>
                  <stringProp name="-2107565741">${__RandomString(3,123456789)}</stringProp>
                  <stringProp name="88775">Yes</stringProp>
                  <stringProp name="2096053175">GC1040</stringProp>
                  <stringProp name="88775">Yes</stringProp>
                  <stringProp name="-2104436672">02i6g0000009XeCAAU</stringProp>
                  <stringProp name="1005532776">5006g000009xbr2AAA</stringProp>
                  <stringProp name="97196323">false</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Case" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceCaseAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1807273953">&quot;ContactId&quot;:&quot;${contactIdUpdate}&quot;</stringProp>
                <stringProp name="-890693445">&quot;AccountId&quot;:&quot;${accountIdUpdate}&quot;</stringProp>
                <stringProp name="1278664877">&quot;SuppliedName&quot;:&quot;${suppliedNameUpdate}&quot;</stringProp>
                <stringProp name="88789607">&quot;SuppliedEmail&quot;:&quot;${suppliedEmailUpdate}&quot;</stringProp>
                <stringProp name="1113801099">&quot;SuppliedPhone&quot;:&quot;${suppliedPhoneUpdate}&quot;</stringProp>
                <stringProp name="2006113385">&quot;SuppliedCompany&quot;:&quot;${suppliedCompanyUpdate}&quot;</stringProp>
                <stringProp name="-1361621043">&quot;Type&quot;:&quot;${typeUpdate}&quot;</stringProp>
                <stringProp name="542519309">&quot;Status&quot;:&quot;${statusUpdate}&quot;</stringProp>
                <stringProp name="1883973837">&quot;Reason&quot;:&quot;${reasonUpdate}&quot;</stringProp>
                <stringProp name="1739253645">&quot;Origin&quot;:&quot;${originUpdate}&quot;</stringProp>
                <stringProp name="1535273347">&quot;Subject&quot;:&quot;${subjectUpdate}&quot;</stringProp>
                <stringProp name="831439501">&quot;Priority&quot;:&quot;${priorityUpdate}&quot;</stringProp>
                <stringProp name="184433571">&quot;Description&quot;:&quot;${descriptionUpdate}&quot;</stringProp>
                <stringProp name="-2042093239">&quot;EngineeringReqNumber__c&quot;:&quot;${engineeringReqNumber__cUpdate}&quot;</stringProp>
                <stringProp name="13854775">&quot;SLAViolation__c&quot;:&quot;${sLAViolation__cUpdate}&quot;</stringProp>
                <stringProp name="1439626829">&quot;Product__c&quot;:&quot;${product__cUpdate}&quot;</stringProp>
                <stringProp name="1977564179">&quot;PotentialLiability__c&quot;:&quot;${potentialLiability__cUpdate}&quot;</stringProp>
                <stringProp name="1767785613">&quot;Comments&quot;:&quot;${commentsUpdate}&quot;</stringProp>
                <stringProp name="1372179201">&quot;AssetId&quot;:&quot;${assetIdUpdate}&quot;</stringProp>
                <stringProp name="641877037">&quot;ParentId&quot;:&quot;${parentIdUpdate}&quot;</stringProp>
                <stringProp name="-1850707845">&quot;IsEscalated&quot;:&quot;${isEscalatedUpdate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Case" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceCaseAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Case List" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceCaseAPI}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-585480101">&quot;recentItems&quot;:</stringProp>
                <stringProp name="1892651281">&quot;attributes&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Task" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Task" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;WhoId&quot;:&quot;${whoId_contactId}&quot;, &#xd;
&quot;WhatId&quot;:&quot;${whatId_accountId}&quot;,   &#xd;
&quot;Subject&quot;:&quot;${subject}&quot;,      &#xd;
&quot;ActivityDate&quot;:&quot;${activityDate}&quot;,&#xd;
&quot;Status&quot;:&quot;${status}&quot;,&#xd;
&quot;Priority&quot;:&quot;${priority}&quot;,&#xd;
&quot;Description&quot;:&quot;${description}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceTaskAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-609895915">whoId_contactId</stringProp>
                <stringProp name="-1716365592">whatId_accountId</stringProp>
                <stringProp name="-1867885268">subject</stringProp>
                <stringProp name="1628321629">activityDate</stringProp>
                <stringProp name="-892481550">status</stringProp>
                <stringProp name="-1165461084">priority</stringProp>
                <stringProp name="-1724546052">description</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1911346436">
                  <stringProp name="200899706">0036g00000ERbJ3AAL</stringProp>
                  <stringProp name="129648883">0016g00000EHFCPAA5</stringProp>
                  <stringProp name="2092670">Call</stringProp>
                  <stringProp name="132504700">2020-10-10</stringProp>
                  <stringProp name="-1115514168">In Progress</stringProp>
                  <stringProp name="-1955878649">Normal</stringProp>
                  <stringProp name="-1285503730">Description for create task</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Task" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceTaskAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1032696752">&quot;WhoId&quot;:&quot;${whoId_contactId}&quot;</stringProp>
                <stringProp name="31318061">&quot;WhatId&quot;:&quot;${whatId_accountId}&quot;</stringProp>
                <stringProp name="593784474">&quot;Subject&quot;:&quot;${subject}&quot;</stringProp>
                <stringProp name="-404384828">&quot;ActivityDate&quot;:&quot;${activityDate}&quot;</stringProp>
                <stringProp name="-368417628">&quot;Status&quot;:&quot;${status}&quot;</stringProp>
                <stringProp name="734189348">&quot;Priority&quot;:&quot;${priority}&quot;</stringProp>
                <stringProp name="-1969867672">&quot;Description&quot;:&quot;${description}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Task" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;WhoId&quot;:&quot;${whoId_contactIdUpdate}&quot;, &#xd;
&quot;WhatId&quot;:&quot;${whatId_accountIdUpdate}&quot;,   &#xd;
&quot;Subject&quot;:&quot;${subjectUpdate}&quot;,      &#xd;
&quot;ActivityDate&quot;:&quot;${activityDateUpdate}&quot;,&#xd;
&quot;Status&quot;:&quot;${statusUpdate}&quot;,&#xd;
&quot;Priority&quot;:&quot;${priorityUpdate}&quot;,&#xd;
&quot;Description&quot;:&quot;${descriptionUpdate}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceTaskAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="20593470">whoId_contactIdUpdate</stringProp>
                <stringProp name="-333140527">whatId_accountIdUpdate</stringProp>
                <stringProp name="164489493">subjectUpdate</stringProp>
                <stringProp name="609329798">activityDateUpdate</stringProp>
                <stringProp name="2147465051">statusUpdate</stringProp>
                <stringProp name="23909261">priorityUpdate</stringProp>
                <stringProp name="-1748059163">descriptionUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="828001465">
                  <stringProp name="201048661">0036g00000ERbJ8AAL</stringProp>
                  <stringProp name="115736505">0016g00000EHF3mAAH</stringProp>
                  <stringProp name="67066748">Email</stringProp>
                  <stringProp name="1019263583">2021-06-08</stringProp>
                  <stringProp name="-1784277931">Waiting on someone else</stringProp>
                  <stringProp name="2249154">High</stringProp>
                  <stringProp name="1581497759">Description for create task 1</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Task" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceTaskAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="430220985">&quot;WhoId&quot;:&quot;${whoId_contactIdUpdate}&quot;</stringProp>
                <stringProp name="-1147723562">&quot;WhatId&quot;:&quot;${whatId_accountIdUpdate}&quot;</stringProp>
                <stringProp name="1535273347">&quot;Subject&quot;:&quot;${subjectUpdate}&quot;</stringProp>
                <stringProp name="-275151059">&quot;ActivityDate&quot;:&quot;${activityDateUpdate}&quot;</stringProp>
                <stringProp name="542519309">&quot;Status&quot;:&quot;${statusUpdate}&quot;</stringProp>
                <stringProp name="831439501">&quot;Priority&quot;:&quot;${priorityUpdate}&quot;</stringProp>
                <stringProp name="-2072260513">&quot;Description&quot;:&quot;${descriptionUpdate}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Task" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceTaskAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Asset" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Asset" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;ContactId&quot;:&quot;${contactId}&quot;,&#xd;
&quot;AccountId&quot;:&quot;${accountId}&quot;,&#xd;
&quot;Product2Id&quot;:&quot;${product2Id}&quot;,&#xd;
&quot;IsCompetitorProduct&quot;:&quot;${isCompetitorProduct}&quot;,&#xd;
&quot;Name&quot;:&quot;${name}&quot;,&#xd;
&quot;SerialNumber&quot;:&quot;${serialNumber}&quot;,&#xd;
&quot;InstallDate&quot;:&quot;${installDate}&quot;,&#xd;
&quot;PurchaseDate&quot;:&quot;${purchaseDate}&quot;,&#xd;
&quot;UsageEndDate&quot;:&quot;${usageEndDate}&quot;,&#xd;
&quot;Status&quot;:&quot;${status}&quot;,&#xd;
&quot;Price&quot;:&quot;${price}&quot;,&#xd;
&quot;Quantity&quot;:&quot;${quantity}&quot;,&#xd;
&quot;Description&quot;:&quot;${description}&quot;,&#xd;
&quot;ParentId&quot;:&quot;${ParentId}&quot;,&#xd;
&quot;AssetProvidedById&quot;:&quot;${AssetProvidedById}&quot;,&#xd;
&quot;AssetServicedById&quot;:&quot;${AssetServicedById}&quot;,&#xd;
&quot;IsInternal&quot;:&quot;${IsInternal}&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceAssetAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-411130533">contactId</stringProp>
                <stringProp name="-1827029976">accountId</stringProp>
                <stringProp name="1752964510">product2Id</stringProp>
                <stringProp name="-594476551">isCompetitorProduct</stringProp>
                <stringProp name="3373707">name</stringProp>
                <stringProp name="83787357">serialNumber</stringProp>
                <stringProp name="2143044585">installDate</stringProp>
                <stringProp name="-1844641713">purchaseDate</stringProp>
                <stringProp name="-1652245944">usageEndDate</stringProp>
                <stringProp name="-892481550">status</stringProp>
                <stringProp name="106934601">price</stringProp>
                <stringProp name="-1285004149">quantity</stringProp>
                <stringProp name="-1724546052">description</stringProp>
                <stringProp name="1239806853">ParentId</stringProp>
                <stringProp name="1293665093">AssetProvidedById</stringProp>
                <stringProp name="2089400241">AssetServicedById</stringProp>
                <stringProp name="1770605095">IsInternal</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1897305293">
                  <stringProp name="201048661">0036g00000ERbJ8AAL</stringProp>
                  <stringProp name="201981450">0016g00000EHGqyAAH</stringProp>
                  <stringProp name="-326783664">01t6g000002aRbPAAU</stringProp>
                  <stringProp name="3569038">true</stringProp>
                  <stringProp name="1551161429">Asset ${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="1868267138">${__RandomString(6,1234567890)}</stringProp>
                  <stringProp name="131670530">2020-03-09</stringProp>
                  <stringProp name="131670552">2020-03-10</stringProp>
                  <stringProp name="131670588">2020-03-25</stringProp>
                  <stringProp name="-568756941">Shipped</stringProp>
                  <stringProp name="1893998548">${__RandomString(4,123456789)}</stringProp>
                  <stringProp name="-2107565741">${__RandomString(3,123456789)}</stringProp>
                  <stringProp name="1116109078">Create test</stringProp>
                  <stringProp name="-2105866656">02i6g0000009Xd2AAE</stringProp>
                  <stringProp name="695975816">0016g00000EGxZvAAL</stringProp>
                  <stringProp name="695975816">0016g00000EGxZvAAL</stringProp>
                  <stringProp name="3569038">true</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Asset" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceAssetAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1668910216">&quot;ContactId&quot;:&quot;${contactId}&quot;</stringProp>
                <stringProp name="342681554">&quot;AccountId&quot;:&quot;${accountId}&quot;</stringProp>
                <stringProp name="538675620">&quot;Product2Id&quot;:&quot;${product2Id}&quot;</stringProp>
                <stringProp name="1834889418">&quot;IsCompetitorProduct&quot;:${isCompetitorProduct}</stringProp>
                <stringProp name="432355204">&quot;Name&quot;:&quot;${name}&quot;</stringProp>
                <stringProp name="-1453034556">&quot;SerialNumber&quot;:&quot;${serialNumber}&quot;</stringProp>
                <stringProp name="1052266516">&quot;InstallDate&quot;:&quot;${installDate}&quot;</stringProp>
                <stringProp name="-1123105276">&quot;PurchaseDate&quot;:&quot;${purchaseDate}&quot;</stringProp>
                <stringProp name="-990048476">&quot;UsageEndDate&quot;:&quot;${usageEndDate}&quot;</stringProp>
                <stringProp name="-368417628">&quot;Status&quot;:&quot;${status}&quot;</stringProp>
                <stringProp name="592888076">&quot;Price&quot;:${price}.0</stringProp>
                <stringProp name="-269372008">&quot;Quantity&quot;:${quantity}.0</stringProp>
                <stringProp name="-936355654">&quot;Description&quot;:&quot;${description}&quot;</stringProp>
                <stringProp name="-34476828">&quot;ParentId&quot;:&quot;${ParentId}&quot;</stringProp>
                <stringProp name="2112465132">&quot;AssetProvidedById&quot;:&quot;${AssetProvidedById}&quot;</stringProp>
                <stringProp name="1339990724">&quot;AssetServicedById&quot;:&quot;${AssetServicedById}&quot;</stringProp>
                <stringProp name="425357758">&quot;IsInternal&quot;:${IsInternal}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Asset" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;ContactId&quot;:&quot;${contactIdUpdate}&quot;,&#xd;
&quot;AccountId&quot;:&quot;${accountIdUpdate}&quot;,&#xd;
&quot;Product2Id&quot;:&quot;${product2IdUpdate}&quot;,&#xd;
&quot;IsCompetitorProduct&quot;:&quot;${isCompetitorProductUpdate}&quot;,&#xd;
&quot;Name&quot;:&quot;${nameUpdate}&quot;,&#xd;
&quot;SerialNumber&quot;:&quot;${serialNumberUpdate}&quot;,&#xd;
&quot;InstallDate&quot;:&quot;${installDateUpdate}&quot;,&#xd;
&quot;PurchaseDate&quot;:&quot;${purchaseDateUpdate}&quot;,&#xd;
&quot;UsageEndDate&quot;:&quot;${usageEndDateUpdate}&quot;,&#xd;
&quot;Status&quot;:&quot;${statusUpdate}&quot;,&#xd;
&quot;Price&quot;:&quot;${priceUpdate}&quot;,&#xd;
&quot;Quantity&quot;:&quot;${quantityUpdate}&quot;,&#xd;
&quot;Description&quot;:&quot;${descriptionUpdate}&quot;,&#xd;
&quot;ParentId&quot;:&quot;${ParentIdUpdate}&quot;,&#xd;
&quot;AssetProvidedById&quot;:&quot;${AssetProvidedByIdUpdate}&quot;,&#xd;
&quot;AssetServicedById&quot;:&quot;${AssetServicedByIdUpdate}&quot;,&#xd;
&quot;IsInternal&quot;:&quot;${IsInternalUpdate}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceAssetAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1704257020">contactIdUpdate</stringProp>
                <stringProp name="188424977">accountIdUpdate</stringProp>
                <stringProp name="1840256007">product2IdUpdate</stringProp>
                <stringProp name="1566640162">isCompetitorProductUpdate</stringProp>
                <stringProp name="-694727884">nameUpdate</stringProp>
                <stringProp name="-290412154">serialNumberUpdate</stringProp>
                <stringProp name="-1053878766">installDateUpdate</stringProp>
                <stringProp name="-21074440">purchaseDateUpdate</stringProp>
                <stringProp name="699861297">usageEndDateUpdate</stringProp>
                <stringProp name="2147465051">statusUpdate</stringProp>
                <stringProp name="1596128114">priceUpdate</stringProp>
                <stringProp name="-990595788">quantityUpdate</stringProp>
                <stringProp name="-1748059163">descriptionUpdate</stringProp>
                <stringProp name="660971694">ParentIdUpdate</stringProp>
                <stringProp name="91267182">AssetProvidedByIdUpdate</stringProp>
                <stringProp name="-256338982">AssetServicedByIdUpdate</stringProp>
                <stringProp name="-1839073840">IsInternalUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-953677325">
                  <stringProp name="200899706">0036g00000ERbJ3AAL</stringProp>
                  <stringProp name="163819179">0016g00000EHFi1AAH</stringProp>
                  <stringProp name="-326783664">01t6g000002aRbPAAU</stringProp>
                  <stringProp name="3569038">true</stringProp>
                  <stringProp name="-1780641433">Asset test ${__RandomString(3,1234567890)}</stringProp>
                  <stringProp name="1868267138">${__RandomString(6,1234567890)}</stringProp>
                  <stringProp name="131670530">2020-03-09</stringProp>
                  <stringProp name="131670552">2020-03-10</stringProp>
                  <stringProp name="131670588">2020-03-25</stringProp>
                  <stringProp name="-568756941">Shipped</stringProp>
                  <stringProp name="1893998548">${__RandomString(4,123456789)}</stringProp>
                  <stringProp name="-2107565741">${__RandomString(3,123456789)}</stringProp>
                  <stringProp name="793920752">Updaed description for Create asset</stringProp>
                  <stringProp name="-2104436672">02i6g0000009XeCAAU</stringProp>
                  <stringProp name="147791637">0016g00000EHEvEAAX</stringProp>
                  <stringProp name="147791637">0016g00000EHEvEAAX</stringProp>
                  <stringProp name="97196323">false</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Asset" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceAssetAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1807273953">&quot;ContactId&quot;:&quot;${contactIdUpdate}&quot;</stringProp>
                <stringProp name="-890693445">&quot;AccountId&quot;:&quot;${accountIdUpdate}&quot;</stringProp>
                <stringProp name="204969229">&quot;Product2Id&quot;:&quot;${product2IdUpdate}&quot;</stringProp>
                <stringProp name="-663127231">&quot;IsCompetitorProduct&quot;:${isCompetitorProductUpdate}</stringProp>
                <stringProp name="1117739757">&quot;Name&quot;:&quot;${nameUpdate}&quot;</stringProp>
                <stringProp name="-1905236179">&quot;SerialNumber&quot;:&quot;${serialNumberUpdate}&quot;</stringProp>
                <stringProp name="-60700803">&quot;InstallDate&quot;:&quot;${installDateUpdate}&quot;</stringProp>
                <stringProp name="-1289483923">&quot;PurchaseDate&quot;:&quot;${purchaseDateUpdate}&quot;</stringProp>
                <stringProp name="-734070131">&quot;UsageEndDate&quot;:&quot;${usageEndDateUpdate}&quot;</stringProp>
                <stringProp name="542519309">&quot;Status&quot;:&quot;${statusUpdate}&quot;</stringProp>
                <stringProp name="-528119357">&quot;Price&quot;:${priceUpdate}.0</stringProp>
                <stringProp name="-1342053041">&quot;Quantity&quot;:${quantityUpdate}.0</stringProp>
                <stringProp name="184433571">&quot;Description&quot;:&quot;${descriptionUpdate}&quot;</stringProp>
                <stringProp name="-200898483">&quot;ParentId&quot;:&quot;${ParentIdUpdate}&quot;</stringProp>
                <stringProp name="426974805">&quot;AssetProvidedById&quot;:&quot;${AssetProvidedByIdUpdate}&quot;</stringProp>
                <stringProp name="910906925">&quot;AssetServicedById&quot;:&quot;${AssetServicedByIdUpdate}&quot;</stringProp>
                <stringProp name="-1850329803">&quot;IsInternal&quot;:${IsInternalUpdate}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Asset" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceAssetAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Asset List" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceAssetAPI}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-585480101">&quot;recentItems&quot;:</stringProp>
                <stringProp name="1892651281">&quot;attributes&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Product" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Product" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;Name&quot;:&quot;${name}&quot;,&#xd;
&quot;ProductCode&quot;:&quot;${productCode}&quot;,&#xd;
&quot;Description&quot;:&quot;${description}&quot;,&#xd;
&quot;IsActive&quot;:&quot;${isActive}&quot;,&#xd;
&quot;Family&quot;:&quot;${family}&quot;,&#xd;
&quot;ExternalDataSourceId&quot;:&quot;${externalDataSourceId}&quot;,&#xd;
&quot;ExternalId&quot;:&quot;${externalId}&quot;,&#xd;
&quot;DisplayUrl&quot;:&quot;${displayUrl}&quot;,&#xd;
&quot;QuantityUnitOfMeasure&quot;:&quot;${quantityUnitOfMeasure}&quot;,&#xd;
&quot;StockKeepingUnit&quot;:&quot;${stockKeepingUnit}&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceProduct2API}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="3373707">name</stringProp>
                <stringProp name="-1492131972">productCode</stringProp>
                <stringProp name="-1724546052">description</stringProp>
                <stringProp name="-748916528">isActive</stringProp>
                <stringProp name="-1281860764">family</stringProp>
                <stringProp name="-1268695093">externalDataSourceId</stringProp>
                <stringProp name="-1699764666">externalId</stringProp>
                <stringProp name="-914528947">displayUrl</stringProp>
                <stringProp name="1588445080">quantityUnitOfMeasure</stringProp>
                <stringProp name="-729976725">stockKeepingUnit</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-951097647">
                  <stringProp name="-640481953">Item ${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="1868267138">${__RandomString(6,1234567890)}</stringProp>
                  <stringProp name="-1410976786">Description for Item</stringProp>
                  <stringProp name="3569038">true</stringProp>
                  <stringProp name="2433880">None</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="234109439">#${__RandomString(6,1234567890)}</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="-1470006725">kilograms</stringProp>
                  <stringProp name="-1320681208">SKU${__RandomString(3,1234567890)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Product" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceProduct2API}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="432355204">&quot;Name&quot;:&quot;${name}&quot;</stringProp>
                <stringProp name="975982522">&quot;ProductCode&quot;:&quot;${productCode}&quot;</stringProp>
                <stringProp name="-936355654">&quot;Description&quot;:&quot;${description}&quot;</stringProp>
                <stringProp name="-1401162356">&quot;IsActive&quot;:${isActive}</stringProp>
                <stringProp name="-82642588">&quot;Family&quot;:&quot;${family}&quot;</stringProp>
                <stringProp name="-207894396">&quot;StockKeepingUnit&quot;:&quot;${stockKeepingUnit}&quot;</stringProp>
                <stringProp name="1613909554">&quot;QuantityUnitOfMeasure&quot;:&quot;${quantityUnitOfMeasure}&quot;</stringProp>
                <stringProp name="765027492">&quot;ExternalId&quot;:&quot;${externalId}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Product" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;Name&quot;:&quot;${nameUpdate}&quot;,&#xd;
&quot;ProductCode&quot;:&quot;${productCodeUpdate}&quot;,&#xd;
&quot;Description&quot;:&quot;${descriptionUpdate}&quot;,&#xd;
&quot;IsActive&quot;:&quot;${isActiveUpdate}&quot;,&#xd;
&quot;Family&quot;:&quot;${familyUpdate}&quot;,&#xd;
&quot;ExternalId&quot;:&quot;${externalIdUpdate}&quot;,&#xd;
&quot;DisplayUrl&quot;:&quot;${displayUrlUpdate}&quot;,&#xd;
&quot;QuantityUnitOfMeasure&quot;:&quot;${quantityUnitOfMeasureUpdate}&quot;,&#xd;
&quot;StockKeepingUnit&quot;:&quot;${stockKeepingUnitUpdate}&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceProduct2API}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-694727884">nameUpdate</stringProp>
                <stringProp name="-1537837211">productCodeUpdate</stringProp>
                <stringProp name="-1748059163">descriptionUpdate</stringProp>
                <stringProp name="717076921">isActiveUpdate</stringProp>
                <stringProp name="-1174641331">familyUpdate</stringProp>
                <stringProp name="160804871">externalDataSourceId	Update</stringProp>
                <stringProp name="-197886289">externalIdUpdate</stringProp>
                <stringProp name="1304599670">displayUrlUpdate</stringProp>
                <stringProp name="-1355099519">quantityUnitOfMeasureUpdate</stringProp>
                <stringProp name="810113300">stockKeepingUnitUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-951097647">
                  <stringProp name="-640481953">Item ${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="1868267138">${__RandomString(6,1234567890)}</stringProp>
                  <stringProp name="-1410976786">Description for Item</stringProp>
                  <stringProp name="3569038">true</stringProp>
                  <stringProp name="2433880">None</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="234109439">#${__RandomString(6,1234567890)}</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="-1470006725">kilograms</stringProp>
                  <stringProp name="-1320681208">SKU${__RandomString(3,1234567890)}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Product" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceProduct2API}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1117739757">&quot;Name&quot;:&quot;${nameUpdate}&quot;</stringProp>
                <stringProp name="-135990621">&quot;ProductCode&quot;:&quot;${productCodeUpdate}&quot;</stringProp>
                <stringProp name="184433571">&quot;Description&quot;:&quot;${descriptionUpdate}&quot;</stringProp>
                <stringProp name="-374528381">&quot;IsActive&quot;:${isActiveUpdate}</stringProp>
                <stringProp name="306984141">&quot;Family&quot;:&quot;${familyUpdate}&quot;</stringProp>
                <stringProp name="1267018733">&quot;StockKeepingUnit&quot;:&quot;${stockKeepingUnitUpdate}&quot;</stringProp>
                <stringProp name="14694171">&quot;QuantityUnitOfMeasure&quot;:&quot;${quantityUnitOfMeasureUpdate}&quot;</stringProp>
                <stringProp name="1017458701">&quot;ExternalId&quot;:&quot;${externalIdUpdate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Product" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceProduct2API}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Product List" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceProduct2API}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-585480101">&quot;recentItems&quot;:</stringProp>
                <stringProp name="1892651281">&quot;attributes&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Contract" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Contract" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;AccountId&quot;:&quot;${accountId}&quot;,&#xd;
&quot;Pricebook2Id&quot;:&quot;${pricebook2Id}&quot;,&#xd;
&quot;OwnerExpirationNotice&quot;:&quot;${ownerExpirationNotice}&quot;,&#xd;
&quot;StartDate&quot;:&quot;${startDate}&quot;,&#xd;
&quot;BillingStreet&quot;:&quot;${billingStreet}&quot;,&#xd;
&quot;BillingCity&quot;:&quot;${billingCity}&quot;,&#xd;
&quot;BillingState&quot;:&quot;${billingState}&quot;,&#xd;
&quot;BillingPostalCode&quot;:&quot;${billingPostalCode}&quot;,&#xd;
&quot;BillingCountry&quot;:&quot;${billingCountry}&quot;,&#xd;
&quot;ContractTerm&quot;:&quot;${contractTerm}&quot;,&#xd;
&quot;Status&quot;:&quot;${status}&quot;,&#xd;
&quot;CompanySignedId&quot;:&quot;${companySignedId}&quot;,&#xd;
&quot;CompanySignedDate&quot;:&quot;${companySignedDate}&quot;,&#xd;
&quot;CustomerSignedId&quot;:&quot;${customerSignedId}&quot;,&#xd;
&quot;CustomerSignedTitle&quot;:&quot;${customerSignedTitle}&quot;,&#xd;
&quot;CustomerSignedDate&quot;:&quot;${customerSignedDate}&quot;,&#xd;
&quot;SpecialTerms&quot;:&quot;${specialTerms}&quot;,&#xd;
&quot;Description&quot;:&quot;${description}&quot;,&#xd;
&quot;BillingLatitude&quot;:&quot;${billingLatitude}&quot;,&#xd;
&quot;BillingLongitude&quot;:&quot;${billingLongitude}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceContractAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1827029976">accountId</stringProp>
                <stringProp name="869740539">pricebook2Id</stringProp>
                <stringProp name="889143098">ownerExpirationNotice</stringProp>
                <stringProp name="-2129778896">startDate</stringProp>
                <stringProp name="-1523886498">billingStreet</stringProp>
                <stringProp name="91781766">billingCity</stringProp>
                <stringProp name="-1434646826">billingState</stringProp>
                <stringProp name="-1866128845">billingPostalCode</stringProp>
                <stringProp name="-1451090789">billingCountry</stringProp>
                <stringProp name="-1402343266">contractTerm</stringProp>
                <stringProp name="-892481550">status</stringProp>
                <stringProp name="663090420">companySignedId</stringProp>
                <stringProp name="1574585671">companySignedDate</stringProp>
                <stringProp name="268126037">customerSignedId</stringProp>
                <stringProp name="-885979682">customerSignedTitle</stringProp>
                <stringProp name="-29064344">customerSignedDate</stringProp>
                <stringProp name="-1275157426">specialTerms</stringProp>
                <stringProp name="-1724546052">description</stringProp>
                <stringProp name="1192855559">billingLatitude</stringProp>
                <stringProp name="150839668">billingLongitude</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1936863357">
                  <stringProp name="129648883">0016g00000EHFCPAA5</stringProp>
                  <stringProp name="1635849996">01s6g000009rOxXAAU</stringProp>
                  <stringProp name="1572">15</stringProp>
                  <stringProp name="131670615">2020-03-31</stringProp>
                  <stringProp name="846002438">780 Mission St</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="-69067475">CA - California</stringProp>
                  <stringProp name="-1457609388">94103-3113</stringProp>
                  <stringProp name="-2032517217">United States</stringProp>
                  <stringProp name="-1520759727">${__RandomString(1,123456789)}</stringProp>
                  <stringProp name="66292097">Draft</stringProp>
                  <stringProp name="1918561727">0056g0000048SqBAAU</stringProp>
                  <stringProp name="131670590">2020-03-27</stringProp>
                  <stringProp name="201406126">0036g00000ERbJDAA1</stringProp>
                  <stringProp name="-538729546">Customer title</stringProp>
                  <stringProp name="131670588">2020-03-25</stringProp>
                  <stringProp name="2657">ST</stringProp>
                  <stringProp name="1617545142">Create Contract</stringProp>
                  <stringProp name="-449243374">34.1424</stringProp>
                  <stringProp name="1683684146">118.4572</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Contract" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceContractAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="342681554">&quot;AccountId&quot;:&quot;${accountId}&quot;</stringProp>
                <stringProp name="1377383300">&quot;Pricebook2Id&quot;:&quot;${pricebook2Id}&quot;</stringProp>
                <stringProp name="-773978634">&quot;OwnerExpirationNotice&quot;:&quot;${ownerExpirationNotice}&quot;</stringProp>
                <stringProp name="1644170210">&quot;StartDate&quot;:&quot;${startDate}&quot;</stringProp>
                <stringProp name="-5257666">&quot;BillingStreet&quot;:&quot;${billingStreet}&quot;</stringProp>
                <stringProp name="1729756366">&quot;BillingCity&quot;:&quot;${billingCity}&quot;</stringProp>
                <stringProp name="478514404">&quot;BillingState&quot;:&quot;${billingState}&quot;</stringProp>
                <stringProp name="-1568106200">&quot;BillingPostalCode&quot;:&quot;${billingPostalCode}&quot;</stringProp>
                <stringProp name="-1818757372">&quot;BillingCountry&quot;:&quot;${billingCountry}&quot;</stringProp>
                <stringProp name="1888128752">&quot;ContractTerm&quot;:${contractTerm}</stringProp>
                <stringProp name="-368417628">&quot;Status&quot;:&quot;${status}&quot;</stringProp>
                <stringProp name="854474538">&quot;CompanySignedId&quot;:&quot;${companySignedId}&quot;</stringProp>
                <stringProp name="-1958515120">&quot;CompanySignedDate&quot;:&quot;${companySignedDate}&quot;</stringProp>
                <stringProp name="364744388">&quot;CustomerSignedId&quot;:&quot;${customerSignedId}&quot;</stringProp>
                <stringProp name="1436454526">&quot;CustomerSignedTitle&quot;:&quot;${customerSignedTitle}&quot;</stringProp>
                <stringProp name="2049892">&quot;CustomerSignedDate&quot;:&quot;${customerSignedDate}&quot;</stringProp>
                <stringProp name="-45519900">&quot;SpecialTerms&quot;:&quot;${specialTerms}&quot;</stringProp>
                <stringProp name="-936355654">&quot;Description&quot;:&quot;${description}&quot;</stringProp>
                <stringProp name="1322471818">&quot;BillingLatitude&quot;:${billingLatitude}</stringProp>
                <stringProp name="-1982395836">&quot;BillingLongitude&quot;:${billingLongitude}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Contract" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;AccountId&quot;:&quot;${accountIdUpdate}&quot;,&#xd;
&quot;Pricebook2Id&quot;:&quot;${pricebook2IdUpdate}&quot;,&#xd;
&quot;OwnerExpirationNotice&quot;:&quot;${ownerExpirationNoticeUpdate}&quot;,&#xd;
&quot;StartDate&quot;:&quot;${startDateUpdate}&quot;,&#xd;
&quot;BillingStreet&quot;:&quot;${billingStreetUpdate}&quot;,&#xd;
&quot;BillingCity&quot;:&quot;${billingCityUpdate}&quot;,&#xd;
&quot;BillingState&quot;:&quot;${billingStateUpdate}&quot;,&#xd;
&quot;BillingPostalCode&quot;:&quot;${billingPostalCodeUpdate}&quot;,&#xd;
&quot;BillingCountry&quot;:&quot;${billingCountryUpdate}&quot;,&#xd;
&quot;ContractTerm&quot;:&quot;${contractTermUpdate}&quot;,&#xd;
&quot;Status&quot;:&quot;${statusUpdate}&quot;,&#xd;
&quot;CompanySignedId&quot;:&quot;${companySignedIdUpdate}&quot;,&#xd;
&quot;CompanySignedDate&quot;:&quot;${companySignedDateUpdate}&quot;,&#xd;
&quot;CustomerSignedId&quot;:&quot;${customerSignedIdUpdate}&quot;,&#xd;
&quot;CustomerSignedTitle&quot;:&quot;${customerSignedTitleUpdate}&quot;,&#xd;
&quot;CustomerSignedDate&quot;:&quot;${customerSignedDateUpdate}&quot;,&#xd;
&quot;SpecialTerms&quot;:&quot;${specialTermsUpdate}&quot;,&#xd;
&quot;Description&quot;:&quot;${descriptionUpdate}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceContractAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="188424977">accountIdUpdate</stringProp>
                <stringProp name="1889086628">pricebook2IdUpdate</stringProp>
                <stringProp name="1977782435">ownerExpirationNoticeUpdate</stringProp>
                <stringProp name="-1809504231">startDateUpdate</stringProp>
                <stringProp name="885112007">billingStreetUpdate</stringProp>
                <stringProp name="194847471">billingCityUpdate</stringProp>
                <stringProp name="1308308287">billingStateUpdate</stringProp>
                <stringProp name="-567896868">billingPostalCodeUpdate</stringProp>
                <stringProp name="-850910908">billingCountryUpdate</stringProp>
                <stringProp name="246654727">contractTermUpdate</stringProp>
                <stringProp name="2147465051">statusUpdate</stringProp>
                <stringProp name="588550877">companySignedIdUpdate</stringProp>
                <stringProp name="1670519024">companySignedDateUpdate</stringProp>
                <stringProp name="-369043330">customerSignedIdUpdate</stringProp>
                <stringProp name="-660222905">customerSignedTitleUpdate</stringProp>
                <stringProp name="545487441">customerSignedDateUpdate</stringProp>
                <stringProp name="1895749303">specialTermsUpdate</stringProp>
                <stringProp name="-1748059163">descriptionUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="582646024">
                  <stringProp name="115110910">0016g00000EHF3XAAX</stringProp>
                  <stringProp name="1618779753">01s6g000009rOfIAAU</stringProp>
                  <stringProp name="1629">30</stringProp>
                  <stringProp name="131670615">2020-03-31</stringProp>
                  <stringProp name="846002438">780 Mission St</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="-69067475">CA - California</stringProp>
                  <stringProp name="-1457609388">94103-3113</stringProp>
                  <stringProp name="-2032517217">United States</stringProp>
                  <stringProp name="-1520759727">${__RandomString(1,123456789)}</stringProp>
                  <stringProp name="66292097">Draft</stringProp>
                  <stringProp name="1918561727">0056g0000048SqBAAU</stringProp>
                  <stringProp name="131700376">2020-04-22</stringProp>
                  <stringProp name="201406126">0036g00000ERbJDAA1</stringProp>
                  <stringProp name="-538729546">Customer title</stringProp>
                  <stringProp name="131700376">2020-04-22</stringProp>
                  <stringProp name="2657">ST</stringProp>
                  <stringProp name="1617545142">Create Contract</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Contract" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceContractAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-890693445">&quot;AccountId&quot;:&quot;${accountIdUpdate}&quot;</stringProp>
                <stringProp name="1392924397">&quot;Pricebook2Id&quot;:&quot;${pricebook2IdUpdate}&quot;</stringProp>
                <stringProp name="1525418975">&quot;OwnerExpirationNotice&quot;:&quot;${ownerExpirationNoticeUpdate}&quot;</stringProp>
                <stringProp name="217379019">&quot;StartDate&quot;:&quot;${startDateUpdate}&quot;</stringProp>
                <stringProp name="-1255246297">&quot;BillingStreet&quot;:&quot;${billingStreetUpdate}&quot;</stringProp>
                <stringProp name="-1223065417">&quot;BillingCity&quot;:&quot;${billingCityUpdate}&quot;</stringProp>
                <stringProp name="2103584845">&quot;BillingState&quot;:&quot;${billingStateUpdate}&quot;</stringProp>
                <stringProp name="219410833">&quot;BillingPostalCode&quot;:&quot;${billingPostalCodeUpdate}&quot;</stringProp>
                <stringProp name="-800818579">&quot;BillingCountry&quot;:&quot;${billingCountryUpdate}&quot;</stringProp>
                <stringProp name="781460711">&quot;ContractTerm&quot;:${contractTermUpdate}</stringProp>
                <stringProp name="542519309">&quot;Status&quot;:&quot;${statusUpdate}&quot;</stringProp>
                <stringProp name="-1309569517">&quot;CompanySignedId&quot;:&quot;${companySignedIdUpdate}&quot;</stringProp>
                <stringProp name="-711702343">&quot;CompanySignedDate&quot;:&quot;${companySignedDateUpdate}&quot;</stringProp>
                <stringProp name="-599178707">&quot;CustomerSignedId&quot;:&quot;${customerSignedIdUpdate}&quot;</stringProp>
                <stringProp name="2021002855">&quot;CustomerSignedTitle&quot;:&quot;${customerSignedTitleUpdate}&quot;</stringProp>
                <stringProp name="1147536077">&quot;CustomerSignedDate&quot;:&quot;${customerSignedDateUpdate}&quot;</stringProp>
                <stringProp name="226674509">&quot;SpecialTerms&quot;:&quot;${specialTermsUpdate}&quot;</stringProp>
                <stringProp name="184433571">&quot;Description&quot;:&quot;${descriptionUpdate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Contract" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceContractAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Contract List" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceContractAPI}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-585480101">&quot;recentItems&quot;:</stringProp>
                <stringProp name="1892651281">&quot;attributes&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Order" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Order" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ContractId&quot;:&quot;${contractId}&quot;,&#xd;
	&quot;AccountId&quot;: &quot;${accountId}&quot;,&#xd;
	&quot;EffectiveDate&quot;: &quot;${effectiveDate}&quot;,&#xd;
	&quot;EndDate&quot;: &quot;${endDate}&quot;,&#xd;
	&quot;CustomerAuthorizedDate&quot;: &quot;${customerAuthorizedDate}&quot;,&#xd;
	&quot;CompanyAuthorizedDate&quot;: &quot;${companyAuthorizedDate}&quot;,&#xd;
	&quot;Status&quot;: &quot;${status}&quot;,&#xd;
	&quot;Description&quot;: &quot;${description}&quot;,&#xd;
	&quot;CustomerAuthorizedById&quot;: &quot;${customerAuthorizedById}&quot;,&#xd;
	&quot;CompanyAuthorizedById&quot;: &quot;${companyAuthorizedById}&quot;,&#xd;
	&quot;BillingStreet&quot;: &quot;${billingStreet}&quot;,&#xd;
	&quot;BillingCity&quot;: &quot;${billingCity}&quot;,&#xd;
	&quot;BillingState&quot;: &quot;${billingState}&quot;,&#xd;
	&quot;BillingPostalCode&quot;: &quot;${billingPostalCode}&quot;,&#xd;
	&quot;BillingCountry&quot;: &quot;${billingCountry}&quot;,&#xd;
	&quot;BillingLatitude&quot;: &quot;${billingLatitude}&quot;,&#xd;
	&quot;BillingLongitude&quot;: &quot;${billingLongitude}&quot;,&#xd;
	&quot;ShippingStreet&quot;: &quot;${shippingStreet}&quot;,&#xd;
	&quot;ShippingCity&quot;: &quot;${shippingCity}&quot;,&#xd;
	&quot;ShippingState&quot;: &quot;${shippingState}&quot;,&#xd;
	&quot;ShippingPostalCode&quot;: &quot;${shippingPostalCode}&quot;,&#xd;
	&quot;ShippingCountry&quot;: &quot;${shippingCountry}&quot;,&#xd;
	&quot;ShippingLatitude&quot;: &quot;${shippingLatitude}&quot;,&#xd;
	&quot;ShippingLongitude&quot;: &quot;${shippingLongitude}&quot;,&#xd;
	&quot;IsReductionOrder&quot;: &quot;${isReductionOrder}&quot;,&#xd;
	&quot;Type&quot;: &quot;${type}&quot;,&#xd;
	&quot;Pricebook2Id&quot;: &quot;${pricebook2Id}&quot;,&#xd;
	&quot;Name&quot;: &quot;${name}&quot;,&#xd;
	&quot;PoDate&quot;: &quot;${poDate}&quot;,&#xd;
	&quot;PoNumber&quot;: &quot;${poNumber}&quot;,&#xd;
	&quot;OrderReferenceNumber&quot;: &quot;${orderReferenceNumber}&quot;,&#xd;
	&quot;BillToContactId&quot;: &quot;${billToContactId}&quot;,&#xd;
	&quot;ShipToContactId&quot;: &quot;${shipToContactId}&quot;,&#xd;
	&quot;ShippingGeocodeAccuracy&quot;:&quot;&quot;,&#xd;
	&quot;BillingGeocodeAccuracy&quot;:&quot;&quot;&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOrderAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="624238029">contractId</stringProp>
                <stringProp name="-1827029976">accountId</stringProp>
                <stringProp name="869740539">pricebook2Id</stringProp>
                <stringProp name="-930389515">effectiveDate</stringProp>
                <stringProp name="-892481550">status</stringProp>
                <stringProp name="-1724546052">description</stringProp>
                <stringProp name="1716957067">customerAuthorizedById</stringProp>
                <stringProp name="-1620416022">companyAuthorizedById</stringProp>
                <stringProp name="-1523886498">billingStreet</stringProp>
                <stringProp name="91781766">billingCity</stringProp>
                <stringProp name="-1434646826">billingState</stringProp>
                <stringProp name="-1866128845">billingPostalCode</stringProp>
                <stringProp name="-1451090789">billingCountry</stringProp>
                <stringProp name="-677929135">shippingStreet</stringProp>
                <stringProp name="-398957511">shippingCity</stringProp>
                <stringProp name="532304771">shippingState</stringProp>
                <stringProp name="-1322403418">shippingPostalCode</stringProp>
                <stringProp name="-996216312">shippingCountry</stringProp>
                <stringProp name="-1607727319">endDate</stringProp>
                <stringProp name="1716994919">customerAuthorizedDate</stringProp>
                <stringProp name="-1620378170">companyAuthorizedDate</stringProp>
                <stringProp name="1192855559">billingLatitude</stringProp>
                <stringProp name="150839668">billingLongitude</stringProp>
                <stringProp name="-1885904838">shippingLatitude</stringProp>
                <stringProp name="-801452127">shippingLongitude</stringProp>
                <stringProp name="1441201253">isReductionOrder</stringProp>
                <stringProp name="3575610">type</stringProp>
                <stringProp name="3373707">name</stringProp>
                <stringProp name="-983868851">poDate</stringProp>
                <stringProp name="-300606936">poNumber</stringProp>
                <stringProp name="83168582">orderReferenceNumber</stringProp>
                <stringProp name="235035289">billToContactId</stringProp>
                <stringProp name="1995710788">shipToContactId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-473363313">
                  <stringProp name="253981687">8006g000000DWKgAAO</stringProp>
                  <stringProp name="115110910">0016g00000EHF3XAAX</stringProp>
                  <stringProp name="1635849996">01s6g000009rOxXAAU</stringProp>
                  <stringProp name="131730141">2020-05-17</stringProp>
                  <stringProp name="66292097">Draft</stringProp>
                  <stringProp name="-1200035611">Description for create order</stringProp>
                  <stringProp name="201406126">0036g00000ERbJDAA1</stringProp>
                  <stringProp name="1918561727">0056g0000048SqBAAU</stringProp>
                  <stringProp name="790633117">200 Convention Boulevard</stringProp>
                  <stringProp name="-69067475">CA - California</stringProp>
                  <stringProp name="-69067475">CA - California</stringProp>
                  <stringProp name="-1457609388">94103-3113</stringProp>
                  <stringProp name="-2032517217">United States</stringProp>
                  <stringProp name="846002438">780 Mission St</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="1458823896">California</stringProp>
                  <stringProp name="54151967">91403</stringProp>
                  <stringProp name="-2032517217">United States</stringProp>
                  <stringProp name="131759895">2020-06-01</stringProp>
                  <stringProp name="131700313">2020-04-01</stringProp>
                  <stringProp name="131700314">2020-04-02</stringProp>
                  <stringProp name="-449243374">34.1424</stringProp>
                  <stringProp name="1683684146">118.4572</stringProp>
                  <stringProp name="-449243374">34.1424</stringProp>
                  <stringProp name="1683684146">118.4572</stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="-681971932">Initial</stringProp>
                  <stringProp name="764527961">Test Name</stringProp>
                  <stringProp name="131730104">2020-05-01</stringProp>
                  <stringProp name="1509857983">AB125475</stringProp>
                  <stringProp name="51504538">65845</stringProp>
                  <stringProp name="201048661">0036g00000ERbJ8AAL</stringProp>
                  <stringProp name="205070446">0036g00000ERbMbAAL</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Order" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOrderAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-708526652">&quot;ContractId&quot;:&quot;${contractId}&quot;</stringProp>
                <stringProp name="342681554">&quot;AccountId&quot;:&quot;${accountId}&quot;</stringProp>
                <stringProp name="2137039404">&quot;EffectiveDate&quot;:&quot;${effectiveDate}&quot;</stringProp>
                <stringProp name="894535828">&quot;EndDate&quot;:&quot;${endDate}&quot;</stringProp>
                <stringProp name="1692562820">&quot;CustomerAuthorizedDate&quot;:&quot;${customerAuthorizedDate}&quot;</stringProp>
                <stringProp name="529008142">&quot;CompanyAuthorizedDate&quot;:&quot;${companyAuthorizedDate}&quot;</stringProp>
                <stringProp name="-368417628">&quot;Status&quot;:&quot;${status}&quot;</stringProp>
                <stringProp name="-936355654">&quot;Description&quot;:&quot;${description}&quot;</stringProp>
                <stringProp name="-1480089852">&quot;CustomerAuthorizedById&quot;:&quot;${customerAuthorizedById}&quot;</stringProp>
                <stringProp name="-1132558506">&quot;CompanyAuthorizedById&quot;:&quot;${companyAuthorizedById}&quot;</stringProp>
                <stringProp name="-5257666">&quot;BillingStreet&quot;:&quot;${billingStreet}&quot;</stringProp>
                <stringProp name="1729756366">&quot;BillingCity&quot;:&quot;${billingCity}&quot;</stringProp>
                <stringProp name="478514404">&quot;BillingState&quot;:&quot;${billingState}&quot;</stringProp>
                <stringProp name="-1568106200">&quot;BillingPostalCode&quot;:&quot;${billingPostalCode}&quot;</stringProp>
                <stringProp name="-1818757372">&quot;BillingCountry&quot;:&quot;${billingCountry}&quot;</stringProp>
                <stringProp name="1322471818">&quot;BillingLatitude&quot;:${billingLatitude}</stringProp>
                <stringProp name="-1982395836">&quot;BillingLongitude&quot;:${billingLongitude}</stringProp>
                <stringProp name="-12972220">&quot;ShippingStreet&quot;:&quot;${shippingStreet}&quot;</stringProp>
                <stringProp name="1908049732">&quot;ShippingCity&quot;:&quot;${shippingCity}&quot;</stringProp>
                <stringProp name="-1229060408">&quot;ShippingState&quot;:&quot;${shippingState}&quot;</stringProp>
                <stringProp name="485855652">&quot;ShippingPostalCode&quot;:&quot;${shippingPostalCode}&quot;</stringProp>
                <stringProp name="-114721454">&quot;ShippingCountry&quot;:&quot;${shippingCountry}&quot;</stringProp>
                <stringProp name="-445874888">&quot;ShippingLatitude&quot;:${shippingLatitude}</stringProp>
                <stringProp name="299544778">&quot;ShippingLongitude&quot;:${shippingLongitude}</stringProp>
                <stringProp name="-1873763550">&quot;IsReductionOrder&quot;:${isReductionOrder}</stringProp>
                <stringProp name="953046116">&quot;Type&quot;:&quot;${type}&quot;</stringProp>
                <stringProp name="1377383300">&quot;Pricebook2Id&quot;:&quot;${pricebook2Id}&quot;</stringProp>
                <stringProp name="432355204">&quot;Name&quot;:&quot;${name}&quot;</stringProp>
                <stringProp name="-1569184316">&quot;PoDate&quot;:&quot;${poDate}&quot;</stringProp>
                <stringProp name="-343986780">&quot;PoNumber&quot;:&quot;${poNumber}&quot;</stringProp>
                <stringProp name="1182168036">&quot;OrderReferenceNumber&quot;:&quot;${orderReferenceNumber}&quot;</stringProp>
                <stringProp name="1892825972">&quot;BillToContactId&quot;:&quot;${billToContactId}&quot;</stringProp>
                <stringProp name="2077279064">&quot;ShipToContactId&quot;:&quot;${shipToContactId}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Order" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ContractId&quot;:&quot;${contractIdUpdate}&quot;,&#xd;
	&quot;AccountId&quot;: &quot;${accountIdUpdate}&quot;,&#xd;
	&quot;EffectiveDate&quot;: &quot;${effectiveDateUpdate}&quot;,&#xd;
	&quot;EndDate&quot;: &quot;${endDateUpdate}&quot;,&#xd;
	&quot;CustomerAuthorizedDate&quot;: &quot;${customerAuthorizedDateUpdate}&quot;,&#xd;
	&quot;CompanyAuthorizedDate&quot;: &quot;${companyAuthorizedDateUpdate}&quot;,&#xd;
	&quot;Status&quot;: &quot;${statusUpdate}&quot;,&#xd;
	&quot;Description&quot;: &quot;${descriptionUpdate}&quot;,&#xd;
	&quot;CustomerAuthorizedById&quot;: &quot;${customerAuthorizedByIdUpdate}&quot;,&#xd;
	&quot;CompanyAuthorizedById&quot;: &quot;${companyAuthorizedByIdUpdate}&quot;,&#xd;
	&quot;BillingStreet&quot;: &quot;${billingStreetUpdate}&quot;,&#xd;
	&quot;BillingCity&quot;: &quot;${billingCityUpdate}&quot;,&#xd;
	&quot;BillingState&quot;: &quot;${billingStateUpdate}&quot;,&#xd;
	&quot;BillingPostalCode&quot;: &quot;${billingPostalCodeUpdate}&quot;,&#xd;
	&quot;BillingCountry&quot;: &quot;${billingCountryUpdate}&quot;,&#xd;
	&quot;BillingLatitude&quot;: &quot;${billingLatitudeUpdate}&quot;,&#xd;
	&quot;BillingLongitude&quot;: &quot;${billingLongitudeUpdate}&quot;,&#xd;
	&quot;ShippingStreet&quot;: &quot;${shippingStreetUpdate}&quot;,&#xd;
	&quot;ShippingCity&quot;: &quot;${shippingCityUpdate}&quot;,&#xd;
	&quot;ShippingState&quot;: &quot;${shippingStateUpdate}&quot;,&#xd;
	&quot;ShippingPostalCode&quot;: &quot;${shippingPostalCodeUpdate}&quot;,&#xd;
	&quot;ShippingCountry&quot;: &quot;${shippingCountryUpdate}&quot;,&#xd;
	&quot;ShippingLatitude&quot;: &quot;${shippingLatitudeUpdate}&quot;,&#xd;
	&quot;ShippingLongitude&quot;: &quot;${shippingLongitudeUpdate}&quot;,&#xd;
	&quot;Type&quot;: &quot;${typeUpdate}&quot;,&#xd;
	&quot;Pricebook2Id&quot;: &quot;${pricebook2IdUpdate}&quot;,&#xd;
	&quot;Name&quot;: &quot;${nameUpdate}&quot;,&#xd;
	&quot;PoDate&quot;: &quot;${poDateUpdate}&quot;,&#xd;
	&quot;PoNumber&quot;: &quot;${poNumberUpdate}&quot;,&#xd;
	&quot;OrderReferenceNumber&quot;: &quot;${orderReferenceNumberUpdate}&quot;,&#xd;
	&quot;BillToContactId&quot;: &quot;${billToContactIdUpdate}&quot;,&#xd;
	&quot;ShipToContactId&quot;: &quot;${shipToContactIdUpdate}&quot;,&#xd;
	&quot;ShippingGeocodeAccuracy&quot;:&quot;&quot;,&#xd;
	&quot;BillingGeocodeAccuracy&quot;:&quot;&quot;&#xd;
	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOrderAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1309805322">contractIdUpdate</stringProp>
                <stringProp name="188424977">accountIdUpdate</stringProp>
                <stringProp name="1889086628">pricebook2IdUpdate</stringProp>
                <stringProp name="1752857374">effectiveDateUpdate</stringProp>
                <stringProp name="2147465051">statusUpdate</stringProp>
                <stringProp name="-1748059163">descriptionUpdate</stringProp>
                <stringProp name="-2134982604">customerAuthorizedByIdUpdate</stringProp>
                <stringProp name="1208940371">companyAuthorizedByIdUpdate</stringProp>
                <stringProp name="885112007">billingStreetUpdate</stringProp>
                <stringProp name="194847471">billingCityUpdate</stringProp>
                <stringProp name="1308308287">billingStateUpdate</stringProp>
                <stringProp name="-567896868">billingPostalCodeUpdate</stringProp>
                <stringProp name="-850910908">billingCountryUpdate</stringProp>
                <stringProp name="-580762758">shippingStreetUpdate</stringProp>
                <stringProp name="738572898">shippingCityUpdate</stringProp>
                <stringProp name="983927340">shippingStateUpdate</stringProp>
                <stringProp name="-1594979825">shippingPostalCodeUpdate</stringProp>
                <stringProp name="951611633">shippingCountryUpdate</stringProp>
                <stringProp name="722430290">endDateUpdate</stringProp>
                <stringProp name="715128592">customerAuthorizedDateUpdate</stringProp>
                <stringProp name="-235915729">companyAuthorizedDateUpdate</stringProp>
                <stringProp name="696535984">billingLatitudeUpdate</stringProp>
                <stringProp name="-231153827">billingLongitudeUpdate</stringProp>
                <stringProp name="740159907">shippingLatitudeUpdate</stringProp>
                <stringProp name="1121187786">shippingLongitudeUpdate</stringProp>
                <stringProp name="1441201253">isReductionOrder</stringProp>
                <stringProp name="-1369579357">typeUpdate</stringProp>
                <stringProp name="-694727884">nameUpdate</stringProp>
                <stringProp name="-2037067402">poDateUpdate</stringProp>
                <stringProp name="-2017984239">poNumberUpdate</stringProp>
                <stringProp name="2022745519">orderReferenceNumberUpdate</stringProp>
                <stringProp name="710240450">billToContactIdUpdate</stringProp>
                <stringProp name="-1037810899">shipToContactIdUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="2102890790">
                  <stringProp name="249810947">8006g000000DWH8AAO</stringProp>
                  <stringProp name="129648883">0016g00000EHFCPAA5</stringProp>
                  <stringProp name="1618779753">01s6g000009rOfIAAU</stringProp>
                  <stringProp name="131700317">2020-04-05</stringProp>
                  <stringProp name="66292097">Draft</stringProp>
                  <stringProp name="-1200035611">Description for create order</stringProp>
                  <stringProp name="201406126">0036g00000ERbJDAA1</stringProp>
                  <stringProp name="1918561727">0056g0000048SqBAAU</stringProp>
                  <stringProp name="790633117">200 Convention Boulevard</stringProp>
                  <stringProp name="-69067475">CA - California</stringProp>
                  <stringProp name="-69067475">CA - California</stringProp>
                  <stringProp name="-1457609388">94103-3113</stringProp>
                  <stringProp name="-2032517217">United States</stringProp>
                  <stringProp name="846002438">780 Mission St</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="1458823896">California</stringProp>
                  <stringProp name="54151967">91403</stringProp>
                  <stringProp name="-2032517217">United States</stringProp>
                  <stringProp name="131730104">2020-05-01</stringProp>
                  <stringProp name="131700313">2020-04-01</stringProp>
                  <stringProp name="131700314">2020-04-02</stringProp>
                  <stringProp name="-449243374">34.1424</stringProp>
                  <stringProp name="1683684146">118.4572</stringProp>
                  <stringProp name="-449243374">34.1424</stringProp>
                  <stringProp name="1683684146">118.4572</stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="1433481724">Upgrade</stringProp>
                  <stringProp name="764527961">Test Name</stringProp>
                  <stringProp name="131730104">2020-05-01</stringProp>
                  <stringProp name="-505517968">AB11111</stringProp>
                  <stringProp name="46760945">11111</stringProp>
                  <stringProp name="200899706">0036g00000ERbJ3AAL</stringProp>
                  <stringProp name="200899706">0036g00000ERbJ3AAL</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Order" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOrderAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2146513197">&quot;ContractId&quot;:&quot;${contractIdUpdate}&quot;</stringProp>
                <stringProp name="-890693445">&quot;AccountId&quot;:&quot;${accountIdUpdate}&quot;</stringProp>
                <stringProp name="-744872043">&quot;EffectiveDate&quot;:&quot;${effectiveDateUpdate}&quot;</stringProp>
                <stringProp name="-1404133379">&quot;EndDate&quot;:&quot;${endDateUpdate}&quot;</stringProp>
                <stringProp name="-967436051">&quot;CustomerAuthorizedDate&quot;:&quot;${customerAuthorizedDateUpdate}&quot;</stringProp>
                <stringProp name="917215735">&quot;CompanyAuthorizedDate&quot;:&quot;${companyAuthorizedDateUpdate}&quot;</stringProp>
                <stringProp name="542519309">&quot;Status&quot;:&quot;${statusUpdate}&quot;</stringProp>
                <stringProp name="184433571">&quot;Description&quot;:&quot;${descriptionUpdate}&quot;</stringProp>
                <stringProp name="-602529171">&quot;CustomerAuthorizedById&quot;:&quot;${customerAuthorizedByIdUpdate}&quot;</stringProp>
                <stringProp name="-1480719041">&quot;CompanyAuthorizedById&quot;:&quot;${companyAuthorizedByIdUpdate}&quot;</stringProp>
                <stringProp name="-1255246297">&quot;BillingStreet&quot;:&quot;${billingStreetUpdate}&quot;</stringProp>
                <stringProp name="-1223065417">&quot;BillingCity&quot;:&quot;${billingCityUpdate}&quot;</stringProp>
                <stringProp name="2103584845">&quot;BillingState&quot;:&quot;${billingStateUpdate}&quot;</stringProp>
                <stringProp name="219410833">&quot;BillingPostalCode&quot;:&quot;${billingPostalCodeUpdate}&quot;</stringProp>
                <stringProp name="-800818579">&quot;BillingCountry&quot;:&quot;${billingCountryUpdate}&quot;</stringProp>
                <stringProp name="-2109535231">&quot;BillingLatitude&quot;:${billingLatitudeUpdate}</stringProp>
                <stringProp name="417583419">&quot;BillingLongitude&quot;:${billingLongitudeUpdate}</stringProp>
                <stringProp name="1233347245">&quot;ShippingStreet&quot;:&quot;${shippingStreetUpdate}&quot;</stringProp>
                <stringProp name="-943072595">&quot;ShippingCity&quot;:&quot;${shippingCityUpdate}&quot;</stringProp>
                <stringProp name="2091427633">&quot;ShippingState&quot;:&quot;${shippingStateUpdate}&quot;</stringProp>
                <stringProp name="-1351901939">&quot;ShippingPostalCode&quot;:&quot;${shippingPostalCodeUpdate}&quot;</stringProp>
                <stringProp name="-1505784261">&quot;ShippingCountry&quot;:&quot;${shippingCountryUpdate}&quot;</stringProp>
                <stringProp name="-1567867601">&quot;ShippingLatitude&quot;:${shippingLatitudeUpdate}</stringProp>
                <stringProp name="1301674817">&quot;ShippingLongitude&quot;:${shippingLongitudeUpdate}</stringProp>
                <stringProp name="-1361621043">&quot;Type&quot;:&quot;${typeUpdate}&quot;</stringProp>
                <stringProp name="1392924397">&quot;Pricebook2Id&quot;:&quot;${pricebook2IdUpdate}&quot;</stringProp>
                <stringProp name="1117739757">&quot;Name&quot;:&quot;${nameUpdate}&quot;</stringProp>
                <stringProp name="1115068717">&quot;PoDate&quot;:&quot;${poDateUpdate}&quot;</stringProp>
                <stringProp name="-11519731">&quot;PoNumber&quot;:&quot;${poNumberUpdate}&quot;</stringProp>
                <stringProp name="852086605">&quot;OrderReferenceNumber&quot;:&quot;${orderReferenceNumberUpdate}&quot;</stringProp>
                <stringProp name="-1502237987">&quot;BillToContactId&quot;:&quot;${billToContactIdUpdate}&quot;</stringProp>
                <stringProp name="1860922191">&quot;ShipToContactId&quot;:&quot;${shipToContactIdUpdate}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Order" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOrderAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Order List" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOrderAPI}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-585480101">&quot;recentItems&quot;:</stringProp>
                <stringProp name="1892651281">&quot;attributes&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Note" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Note" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;ParentId&quot;:&quot;${ParentId}&quot;,&#xd;
&quot;Title&quot;:&quot;${Title}&quot;,&#xd;
&quot;IsPrivate&quot;:&quot;${IsPrivate}&quot;,&#xd;
&quot;Body&quot;:&quot;${Body}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceNoteAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="1239806853">ParentId</stringProp>
                <stringProp name="80818744">Title</stringProp>
                <stringProp name="1109691609">IsPrivate</stringProp>
                <stringProp name="2076098">Body</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-229373009">
                  <stringProp name="-1437852409">0016g00000FX9q5AAD</stringProp>
                  <stringProp name="-1832946972">Note  ${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="-1658025420">This is  ${__RandomString(2,123456789)} note</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Note" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceNoteAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-34476828">&quot;ParentId&quot;:&quot;${ParentId}&quot;</stringProp>
                <stringProp name="1038541202">&quot;Title&quot;:&quot;${Title}&quot;</stringProp>
                <stringProp name="-18871830">&quot;IsPrivate&quot;:${IsPrivate}</stringProp>
                <stringProp name="714028420">&quot;Body&quot;:&quot;${Body}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Note" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;Title&quot;:&quot;${TitleUpdate}&quot;,&#xd;
&quot;IsPrivate&quot;:&quot;${IsPrivateUpdate}&quot;,&#xd;
&quot;Body&quot;:&quot;${BodyUpdate}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceNoteAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="660971694">ParentIdUpdate</stringProp>
                <stringProp name="-2056925919">TitleUpdate</stringProp>
                <stringProp name="1847126786">IsPrivateUpdate</stringProp>
                <stringProp name="1892153643">BodyUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-430123389">
                  <stringProp name="934216917">0036g00000FdhcBAAR</stringProp>
                  <stringProp name="-1832946972">Note  ${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="-1658025420">This is  ${__RandomString(2,123456789)} note</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Note" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceNoteAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-772750725">&quot;Title&quot;:&quot;${TitleUpdate}&quot;</stringProp>
                <stringProp name="1245445217">&quot;IsPrivate&quot;:${IsPrivateUpdate}</stringProp>
                <stringProp name="1198708973">&quot;Body&quot;:&quot;${BodyUpdate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Note" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceNoteAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="PriceBook" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create PriceBook" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;Name&quot;:&quot;${Name}&quot;,&#xd;
&quot;IsActive&quot;:&quot;${IsActive}&quot;,&#xd;
&quot;Description&quot;:&quot;${Description}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForcePriceBookAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="2420395">Name</stringProp>
                <stringProp name="-684272400">IsActive</stringProp>
                <stringProp name="-56677412">Description</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-677667560">
                  <stringProp name="-1328509925">Book${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="3569038">true</stringProp>
                  <stringProp name="-270952797">This is description for pricebook</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get PriceBook" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForcePriceBookAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-483777628">&quot;Name&quot;:&quot;${Name}&quot;</stringProp>
                <stringProp name="602805612">&quot;IsActive&quot;:${IsActive}</stringProp>
                <stringProp name="-137394022">&quot;Description&quot;:&quot;${Description}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update PriceBook" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;Name&quot;:&quot;${NameUpdate}&quot;,&#xd;
&quot;IsActive&quot;:&quot;${IsActiveUpdate}&quot;,&#xd;
&quot;Description&quot;:&quot;${DescriptionUpdate}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForcePriceBookAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="1298736980">NameUpdate</stringProp>
                <stringProp name="-284916263">IsActiveUpdate</stringProp>
                <stringProp name="-2104296507">DescriptionUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="501878805">
                  <stringProp name="-1303131447">Book ${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="-2044905481">description for pricebook</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get PriceBook" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForcePriceBookAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1282060045">&quot;Name&quot;:&quot;${NameUpdate}&quot;</stringProp>
                <stringProp name="-1371546013">&quot;IsActive&quot;:${IsActiveUpdate}</stringProp>
                <stringProp name="1437729667">&quot;Description&quot;:&quot;${DescriptionUpdate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete PriceBook" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForcePriceBookAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Quote" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Quote" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;Name&quot;:&quot;${Name}&quot;,&#xd;
&quot;Pricebook2Id&quot;:&quot;${Pricebook2Id}&quot;,&#xd;
&quot;OpportunityId&quot;:&quot;${OpportunityId}&quot;,&#xd;
&quot;ContactId&quot;:&quot;${ContactId}&quot;,&#xd;
&quot;ShippingHandling&quot;:&quot;${ShippingHandling}&quot;,&#xd;
&quot;Tax&quot;:&quot;${Tax}&quot;,&#xd;
&quot;Status&quot;:&quot;${Status}&quot;,&#xd;
&quot;ExpirationDate&quot;:&quot;${ExpirationDate}&quot;,&#xd;
&quot;Description&quot;:&quot;${Description}&quot;,&#xd;
&quot;BillingStreet&quot;:&quot;${BillingStreet}&quot;,&#xd;
&quot;BillingCity&quot;:&quot;${BillingCity}&quot;,&#xd;
&quot;BillingState&quot;:&quot;${BillingState}&quot;,&#xd;
&quot;BillingPostalCode&quot;:&quot;${BillingPostalCode}&quot;,&#xd;
&quot;BillingCountry&quot;:&quot;${BillingCountry}&quot;,&#xd;
&quot;BillingLatitude&quot;:&quot;${BillingLatitude}&quot;,&#xd;
&quot;BillingLongitude&quot;:&quot;${BillingLongitude}&quot;,&#xd;
&quot;BillingGeocodeAccuracy&quot;:&quot;&quot;,&#xd;
&quot;ShippingStreet&quot;:&quot;${ShippingStreet}&quot;,&#xd;
&quot;ShippingCity&quot;:&quot;${ShippingCity}&quot;,&#xd;
&quot;ShippingState&quot;:&quot;${ShippingState}&quot;,&#xd;
&quot;ShippingPostalCode&quot;:&quot;${ShippingPostalCode}&quot;,&#xd;
&quot;ShippingCountry&quot;:&quot;${ShippingCountry}&quot;,&#xd;
&quot;ShippingLatitude&quot;:&quot;${ShippingLatitude}&quot;,&#xd;
&quot;ShippingLongitude&quot;:&quot;${ShippingLongitude}&quot;,&#xd;
&quot;ShippingGeocodeAccuracy&quot;:&quot;&quot;,&#xd;
&quot;QuoteToStreet&quot;:&quot;${QuoteToStreet}&quot;,&#xd;
&quot;QuoteToCity&quot;:&quot;${QuoteToCity}&quot;,&#xd;
&quot;QuoteToState&quot;:&quot;${QuoteToState}&quot;,&#xd;
&quot;QuoteToPostalCode&quot;:&quot;${QuoteToPostalCode}&quot;,&#xd;
&quot;QuoteToCountry&quot;:&quot;${QuoteToCountry}&quot;,&#xd;
&quot;QuoteToLatitude&quot;:&quot;${QuoteToLatitude}&quot;,&#xd;
&quot;QuoteToLongitude&quot;:&quot;${QuoteToLongitude}&quot;,&#xd;
&quot;QuoteToGeocodeAccuracy&quot;:&quot;&quot;,&#xd;
&quot;AdditionalStreet&quot;:&quot;${AdditionalStreet}&quot;,&#xd;
&quot;AdditionalCity&quot;:&quot;${AdditionalCity}&quot;,&#xd;
&quot;AdditionalState&quot;:&quot;${AdditionalState}&quot;,&#xd;
&quot;AdditionalPostalCode&quot;:&quot;${AdditionalPostalCode}&quot;,&#xd;
&quot;AdditionalCountry&quot;:&quot;${AdditionalCountry}&quot;,&#xd;
&quot;AdditionalLatitude&quot;:&quot;${AdditionalLatitude}&quot;,&#xd;
&quot;AdditionalLongitude&quot;:&quot;${AdditionalLongitude}&quot;,&#xd;
&quot;AdditionalGeocodeAccuracy&quot;:&quot;&quot;,&#xd;
&quot;BillingName&quot;:&quot;${BillingName}&quot;,&#xd;
&quot;ShippingName&quot;:&quot;${ShippingName}&quot;,&#xd;
&quot;QuoteToName&quot;:&quot;${QuoteToName}&quot;,&#xd;
&quot;AdditionalName&quot;:&quot;${AdditionalName}&quot;,&#xd;
&quot;Email&quot;:&quot;${Email}&quot;,&#xd;
&quot;Phone&quot;:&quot;${Phone}&quot;,&#xd;
&quot;Fax&quot;:&quot;${Fax}&quot;,&#xd;
&quot;ContractId&quot;:&quot;${ContractId}&quot;,&#xd;
&quot;CanCreateQuoteLineItems&quot;:&quot;${CanCreateQuoteLineItems}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceQuoteAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="2420395">Name</stringProp>
                <stringProp name="1034060827">Pricebook2Id</stringProp>
                <stringProp name="259766062">OpportunityId</stringProp>
                <stringProp name="1592837435">ContactId</stringProp>
                <stringProp name="-1286629165">ShippingHandling</stringProp>
                <stringProp name="83851">Tax</stringProp>
                <stringProp name="-1808614382">Status</stringProp>
                <stringProp name="-1670804707">ExpirationDate</stringProp>
                <stringProp name="-56677412">Description</stringProp>
                <stringProp name="-724924866">BillingStreet</stringProp>
                <stringProp name="1759650406">BillingCity</stringProp>
                <stringProp name="-1270326538">BillingState</stringProp>
                <stringProp name="2072601107">BillingPostalCode</stringProp>
                <stringProp name="1841883323">BillingCountry</stringProp>
                <stringProp name="195837927">BillingLatitude</stringProp>
                <stringProp name="-691935852">BillingLongitude</stringProp>
                <stringProp name="-865843204">BillingGeocodeAccuracy</stringProp>
                <stringProp name="-1679922319">ShippingStreet</stringProp>
                <stringProp name="-234637223">ShippingCity</stringProp>
                <stringProp name="1331266403">ShippingState</stringProp>
                <stringProp name="519140806">ShippingPostalCode</stringProp>
                <stringProp name="-1993233944">ShippingCountry</stringProp>
                <stringProp name="1566286938">ShippingLatitude</stringProp>
                <stringProp name="-1157689471">ShippingLongitude</stringProp>
                <stringProp name="1426512090">QuoteToStreet</stringProp>
                <stringProp name="-1844810750">QuoteToCity</stringProp>
                <stringProp name="-1339472678">QuoteToState</stringProp>
                <stringProp name="165873327">QuoteToPostalCode</stringProp>
                <stringProp name="-183047777">QuoteToCountry</stringProp>
                <stringProp name="1847483267">QuoteToLatitude</stringProp>
                <stringProp name="-1030537864">QuoteToLongitude</stringProp>
                <stringProp name="-547848406">AdditionalStreet</stringProp>
                <stringProp name="-1976474030">AdditionalCity</stringProp>
                <stringProp name="-1126067062">AdditionalState</stringProp>
                <stringProp name="727254271">AdditionalPostalCode</stringProp>
                <stringProp name="-1258681009">AdditionalCountry</stringProp>
                <stringProp name="-1432375853">AdditionalLatitude</stringProp>
                <stringProp name="373044520">AdditionalLongitude</stringProp>
                <stringProp name="-1446930288">AdditionalGeocodeAccuracy</stringProp>
                <stringProp name="1759970182">BillingName</stringProp>
                <stringProp name="-234317447">ShippingName</stringProp>
                <stringProp name="-1844490974">QuoteToName</stringProp>
                <stringProp name="-1976154254">AdditionalName</stringProp>
                <stringProp name="67066748">Email</stringProp>
                <stringProp name="77090126">Phone</stringProp>
                <stringProp name="70397">Fax</stringProp>
                <stringProp name="-1677264403">ContractId</stringProp>
                <stringProp name="2098074876">CanCreateQuoteLineItems</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1206868938">
                  <stringProp name="-1808410578">Quote${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="1635849996">01s6g000009rOxXAAU</stringProp>
                  <stringProp name="-1821063308">0066g00001VB7OKAA1</stringProp>
                  <stringProp name="934723348">0036g00000FdhbrAAB</stringProp>
                  <stringProp name="-1814162734">${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="-1520759727">${__RandomString(1,123456789)}</stringProp>
                  <stringProp name="984767099">Needs Review</stringProp>
                  <stringProp name="132564282">2020-12-10</stringProp>
                  <stringProp name="-33561323">This is quote with needs review status</stringProp>
                  <stringProp name="-1285276153">781 Mission Street</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="1458823896">California</stringProp>
                  <stringProp name="54238457">94103</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="49498866">40.22</stringProp>
                  <stringProp name="52269560">70.69</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="-942939425">1644 Van Ness Ave</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="1458823896">California</stringProp>
                  <stringProp name="54238463">94109</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="49498993">40.65</stringProp>
                  <stringProp name="52269464">70.36</stringProp>
                  <stringProp name="1313323828">24 Brooklyn Ave</stringProp>
                  <stringProp name="441211526">Brooklyn</stringProp>
                  <stringProp name="2507">NY</stringProp>
                  <stringProp name="46761911">11216</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="49498997">40.69</stringProp>
                  <stringProp name="52269464">70.36</stringProp>
                  <stringProp name="-911956684">32393 CAMINO CAPISTRANO SUITE A</stringProp>
                  <stringProp name="-1878649424">San Juan Capistrano</stringProp>
                  <stringProp name="2142">CA</stringProp>
                  <stringProp name="54183899">92675</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="49498997">40.69</stringProp>
                  <stringProp name="52269464">70.36</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="372037787">BillIng Test ${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="-39748714">Shipping Test${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="811611208">Quote Test${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="-1309913475">Additional Test${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="-1732530987">test${__RandomString(2,123456789)}@gmail.com</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="1600595541">${__RandomString(5,123456789)}</stringProp>
                  <stringProp name="250228021">8006g000000DWGeAAO</stringProp>
                  <stringProp name="97196323">false</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Quote" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceQuoteAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-483777628">&quot;Name&quot;:&quot;${Name}&quot;</stringProp>
                <stringProp name="375390116">&quot;Pricebook2Id&quot;:&quot;${Pricebook2Id}&quot;</stringProp>
                <stringProp name="-1928688642">&quot;OpportunityId&quot;:&quot;${OpportunityId}&quot;</stringProp>
                <stringProp name="-1041576">&quot;ContactId&quot;:&quot;${ContactId}&quot;</stringProp>
                <stringProp name="868030694">&quot;ShippingHandling&quot;:${ShippingHandling}</stringProp>
                <stringProp name="-50900694">&quot;Tax&quot;:${Tax}</stringProp>
                <stringProp name="-303773500">&quot;Status&quot;:&quot;${Status}&quot;</stringProp>
                <stringProp name="-1090003996">&quot;ExpirationDate&quot;:&quot;${ExpirationDate}&quot;</stringProp>
                <stringProp name="-137394022">&quot;Description&quot;:&quot;${Description}&quot;</stringProp>
                <stringProp name="-1002275298">&quot;BillingStreet&quot;:&quot;${BillingStreet}&quot;</stringProp>
                <stringProp name="-1766249298">&quot;BillingCity&quot;:&quot;${BillingCity}&quot;</stringProp>
                <stringProp name="-523478780">&quot;BillingState&quot;:&quot;${BillingState}&quot;</stringProp>
                <stringProp name="-314810104">&quot;BillingPostalCode&quot;:&quot;${BillingPostalCode}&quot;</stringProp>
                <stringProp name="1633434404">&quot;BillingCountry&quot;:&quot;${BillingCountry}&quot;</stringProp>
                <stringProp name="479696298">&quot;BillingLatitude&quot;:${BillingLatitude}</stringProp>
                <stringProp name="1956334116">&quot;BillingLongitude&quot;:${BillingLongitude}</stringProp>
                <stringProp name="-855747740">&quot;ShippingStreet&quot;:&quot;${ShippingStreet}&quot;</stringProp>
                <stringProp name="906056548">&quot;ShippingCity&quot;:&quot;${ShippingCity}&quot;</stringProp>
                <stringProp name="2068889256">&quot;ShippingState&quot;:&quot;${ShippingState}&quot;</stringProp>
                <stringProp name="683328964">&quot;ShippingPostalCode&quot;:&quot;${ShippingPostalCode}&quot;</stringProp>
                <stringProp name="-470958798">&quot;ShippingCountry&quot;:&quot;${ShippingCountry}&quot;</stringProp>
                <stringProp name="-802112232">&quot;ShippingLatitude&quot;:${ShippingLatitude}</stringProp>
                <stringProp name="2141089002">&quot;ShippingLongitude&quot;:${ShippingLongitude}</stringProp>
                <stringProp name="-590772650">&quot;QuoteToStreet&quot;:&quot;${QuoteToStreet}&quot;</stringProp>
                <stringProp name="802232806">&quot;QuoteToCity&quot;:&quot;${QuoteToCity}&quot;</stringProp>
                <stringProp name="-1199981180">&quot;QuoteToState&quot;:&quot;${QuoteToState}&quot;</stringProp>
                <stringProp name="500948800">&quot;QuoteToPostalCode&quot;:&quot;${QuoteToPostalCode}&quot;</stringProp>
                <stringProp name="-776353628">&quot;QuoteToCountry&quot;:&quot;${QuoteToCountry}&quot;</stringProp>
                <stringProp name="-1930091734">&quot;QuoteToLatitude&quot;:${QuoteToLatitude}</stringProp>
                <stringProp name="-1790300836">&quot;QuoteToLongitude&quot;:${QuoteToLongitude}</stringProp>
                <stringProp name="-573843964">&quot;AdditionalStreet&quot;:&quot;${AdditionalStreet}&quot;</stringProp>
                <stringProp name="-550214204">&quot;AdditionalCity&quot;:&quot;${AdditionalCity}&quot;</stringProp>
                <stringProp name="-348853130">&quot;AdditionalState&quot;:&quot;${AdditionalState}&quot;</stringProp>
                <stringProp name="-1142413788">&quot;AdditionalPostalCode&quot;:&quot;${AdditionalPostalCode}&quot;</stringProp>
                <stringProp name="-1251941248">&quot;AdditionalCountry&quot;:&quot;${AdditionalCountry}&quot;</stringProp>
                <stringProp name="-1622886298">&quot;AdditionalLatitude&quot;:${AdditionalLatitude}</stringProp>
                <stringProp name="-1641573942">&quot;AdditionalLongitude&quot;:${AdditionalLongitude}</stringProp>
                <stringProp name="-1522196754">&quot;BillingName&quot;:&quot;${BillingName}&quot;</stringProp>
                <stringProp name="-747456668">&quot;ShippingName&quot;:&quot;${ShippingName}&quot;</stringProp>
                <stringProp name="1046285350">&quot;QuoteToName&quot;:&quot;${QuoteToName}&quot;</stringProp>
                <stringProp name="901681604">&quot;AdditionalName&quot;:&quot;${AdditionalName}&quot;</stringProp>
                <stringProp name="724970778">&quot;Email&quot;:&quot;${Email}&quot;</stringProp>
                <stringProp name="1183627582">&quot;Phone&quot;:&quot;${Phone}&quot;</stringProp>
                <stringProp name="138601564">&quot;Fax&quot;:&quot;${Fax}&quot;</stringProp>
                <stringProp name="-544206364">&quot;ContractId&quot;:&quot;${ContractId}&quot;</stringProp>
                <stringProp name="1575716042">&quot;CanCreateQuoteLineItems&quot;:${CanCreateQuoteLineItems}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Quote" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;Name&quot;:&quot;${NameUpdate}&quot;,&#xd;
&quot;Pricebook2Id&quot;:&quot;${Pricebook2IdUpdate}&quot;,&#xd;
&quot;ContactId&quot;:&quot;${ContactIdUpdate}&quot;,&#xd;
&quot;ShippingHandling&quot;:&quot;${ShippingHandlingUpdate}&quot;,&#xd;
&quot;Tax&quot;:&quot;${TaxUpdate}&quot;,&#xd;
&quot;Status&quot;:&quot;${StatusUpdate}&quot;,&#xd;
&quot;ExpirationDate&quot;:&quot;${ExpirationDateUpdate}&quot;,&#xd;
&quot;Description&quot;:&quot;${DescriptionUpdate}&quot;,&#xd;
&quot;BillingStreet&quot;:&quot;${BillingStreetUpdate}&quot;,&#xd;
&quot;BillingCity&quot;:&quot;${BillingCityUpdate}&quot;,&#xd;
&quot;BillingState&quot;:&quot;${BillingStateUpdate}&quot;,&#xd;
&quot;BillingPostalCode&quot;:&quot;${BillingPostalCodeUpdate}&quot;,&#xd;
&quot;BillingCountry&quot;:&quot;${BillingCountryUpdate}&quot;,&#xd;
&quot;BillingLatitude&quot;:&quot;${BillingLatitudeUpdate}&quot;,&#xd;
&quot;BillingLongitude&quot;:&quot;${BillingLongitudeUpdate}&quot;,&#xd;
&quot;ShippingStreet&quot;:&quot;${ShippingStreetUpdate}&quot;,&#xd;
&quot;ShippingCity&quot;:&quot;${ShippingCityUpdate}&quot;,&#xd;
&quot;ShippingState&quot;:&quot;${ShippingStateUpdate}&quot;,&#xd;
&quot;ShippingPostalCode&quot;:&quot;${ShippingPostalCodeUpdate}&quot;,&#xd;
&quot;ShippingCountry&quot;:&quot;${ShippingCountryUpdate}&quot;,&#xd;
&quot;ShippingLatitude&quot;:&quot;${ShippingLatitudeUpdate}&quot;,&#xd;
&quot;ShippingLongitude&quot;:&quot;${ShippingLongitudeUpdate}&quot;,&#xd;
&quot;QuoteToStreet&quot;:&quot;${QuoteToStreetUpdate}&quot;,&#xd;
&quot;QuoteToCity&quot;:&quot;${QuoteToCityUpdate}&quot;,&#xd;
&quot;QuoteToState&quot;:&quot;${QuoteToStateUpdate}&quot;,&#xd;
&quot;QuoteToPostalCode&quot;:&quot;${QuoteToPostalCodeUpdate}&quot;,&#xd;
&quot;QuoteToCountry&quot;:&quot;${QuoteToCountryUpdate}&quot;,&#xd;
&quot;QuoteToLatitude&quot;:&quot;${QuoteToLatitudeUpdate}&quot;,&#xd;
&quot;QuoteToLongitude&quot;:&quot;${QuoteToLongitudeUpdate}&quot;,&#xd;
&quot;AdditionalStreet&quot;:&quot;${AdditionalStreetUpdate}&quot;,&#xd;
&quot;AdditionalCity&quot;:&quot;${AdditionalCityUpdate}&quot;,&#xd;
&quot;AdditionalState&quot;:&quot;${AdditionalStateUpdate}&quot;,&#xd;
&quot;AdditionalPostalCode&quot;:&quot;${AdditionalPostalCodeUpdate}&quot;,&#xd;
&quot;AdditionalCountry&quot;:&quot;${AdditionalCountryUpdate}&quot;,&#xd;
&quot;AdditionalLatitude&quot;:&quot;${AdditionalLatitudeUpdate}&quot;,&#xd;
&quot;AdditionalLongitude&quot;:&quot;${AdditionalLongitudeUpdate}&quot;,&#xd;
&quot;BillingName&quot;:&quot;${BillingNameUpdate}&quot;,&#xd;
&quot;ShippingName&quot;:&quot;${ShippingNameUpdate}&quot;,&#xd;
&quot;QuoteToName&quot;:&quot;${QuoteToNameUpdate}&quot;,&#xd;
&quot;AdditionalName&quot;:&quot;${AdditionalNameUpdate}&quot;,&#xd;
&quot;Email&quot;:&quot;${EmailUpdate}&quot;,&#xd;
&quot;Phone&quot;:&quot;${PhoneUpdate}&quot;,&#xd;
&quot;Fax&quot;:&quot;${FaxUpdate}&quot;,&#xd;
&quot;ContractId&quot;:&quot;${ContractIdUpdate}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceQuoteAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="1298736980">NameUpdate</stringProp>
                <stringProp name="-564336444">Pricebook2IdUpdate</stringProp>
                <stringProp name="-195411561">OpportunityIdUpdate</stringProp>
                <stringProp name="1593692644">ContactIdUpdate</stringProp>
                <stringProp name="-1603955844">ShippingHandlingUpdate</stringProp>
                <stringProp name="1712805940">TaxUpdate</stringProp>
                <stringProp name="-1983181957">StatusUpdate</stringProp>
                <stringProp name="-2125519290">ExpirationDateUpdate</stringProp>
                <stringProp name="-2104296507">DescriptionUpdate</stringProp>
                <stringProp name="2138408103">BillingStreetUpdate</stringProp>
                <stringProp name="-161389873">BillingCityUpdate</stringProp>
                <stringProp name="-1145114785">BillingStateUpdate</stringProp>
                <stringProp name="-1745654596">BillingPostalCodeUpdate</stringProp>
                <stringProp name="-653437596">BillingCountryUpdate</stringProp>
                <stringProp name="-1771725936">BillingLatitudeUpdate</stringProp>
                <stringProp name="562137981">BillingLongitudeUpdate</stringProp>
                <stringProp name="-383289446">ShippingStreetUpdate</stringProp>
                <stringProp name="-1714850174">ShippingCityUpdate</stringProp>
                <stringProp name="-2057743860">ShippingStateUpdate</stringProp>
                <stringProp name="549236271">ShippingPostalCodeUpdate</stringProp>
                <stringProp name="-1516650287">ShippingCountryUpdate</stringProp>
                <stringProp name="1533451715">ShippingLatitudeUpdate</stringProp>
                <stringProp name="-56569942">ShippingLongitudeUpdate</stringProp>
                <stringProp name="-570920381">QuoteToStreetUpdate</stringProp>
                <stringProp name="-2068117653">QuoteToCityUpdate</stringProp>
                <stringProp name="-124133821">QuoteToStateUpdate</stringProp>
                <stringProp name="-103928744">QuoteToPostalCodeUpdate</stringProp>
                <stringProp name="1256725320">QuoteToCountryUpdate</stringProp>
                <stringProp name="1608749612">QuoteToLatitudeUpdate</stringProp>
                <stringProp name="-2017302431">QuoteToLongitudeUpdate</stringProp>
                <stringProp name="2045254803">AdditionalStreetUpdate</stringProp>
                <stringProp name="-1506736709">AdditionalCityUpdate</stringProp>
                <stringProp name="98806259">AdditionalStateUpdate</stringProp>
                <stringProp name="1715482280">AdditionalPostalCodeUpdate</stringProp>
                <stringProp name="753777400">AdditionalCountryUpdate</stringProp>
                <stringProp name="-1097734020">AdditionalLatitudeUpdate</stringProp>
                <stringProp name="-18949103">AdditionalLongitudeUpdate</stringProp>
                <stringProp name="-633279505">BillingNameUpdate</stringProp>
                <stringProp name="2108227490">ShippingNameUpdate</stringProp>
                <stringProp name="1754960011">QuoteToNameUpdate</stringProp>
                <stringProp name="-1978626341">AdditionalNameUpdate</stringProp>
                <stringProp name="-692522139">EmailUpdate</stringProp>
                <stringProp name="670416823">PhoneUpdate</stringProp>
                <stringProp name="1247364646">FaxUpdate</stringProp>
                <stringProp name="2142386454">ContractIdUpdate</stringProp>
                <stringProp name="-1590260507">CanCreateQuoteLineItemsUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="706458829">
                  <stringProp name="-1808410578">Quote${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="1618779753">01s6g000009rOfIAAU</stringProp>
                  <stringProp name="-1821212263">0066g00001VB7OFAA1</stringProp>
                  <stringProp name="205070446">0036g00000ERbMbAAL</stringProp>
                  <stringProp name="-1814162734">${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="-1520759727">${__RandomString(1,123456789)}</stringProp>
                  <stringProp name="66292097">Draft</stringProp>
                  <stringProp name="132504700">2020-10-10</stringProp>
                  <stringProp name="1415465484">This is drft quote</stringProp>
                  <stringProp name="-774741976">780 Mission Street</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="1458823896">California</stringProp>
                  <stringProp name="54238457">94103</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="1446987108">40.22556</stringProp>
                  <stringProp name="-1910611007">70.69845</stringProp>
                  <stringProp name="-1448498050">1645 Van Ness Ave</stringProp>
                  <stringProp name="1540367136">San Francisco</stringProp>
                  <stringProp name="1458823896">California</stringProp>
                  <stringProp name="54238463">94109</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="323893810">40.6589</stringProp>
                  <stringProp name="811976660">70.369874</stringProp>
                  <stringProp name="1818882453">23 Brooklyn Ave</stringProp>
                  <stringProp name="441211526">Brooklyn</stringProp>
                  <stringProp name="2507">NY</stringProp>
                  <stringProp name="46761911">11216</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="1450892580">40.69845</stringProp>
                  <stringProp name="811976598">70.369854</stringProp>
                  <stringProp name="1459782578">32391 CAMINO CAPISTRANO SUITE A</stringProp>
                  <stringProp name="-1878649424">San Juan Capistrano</stringProp>
                  <stringProp name="2142">CA</stringProp>
                  <stringProp name="54183899">92675</stringProp>
                  <stringProp name="84323">USA</stringProp>
                  <stringProp name="1450892581">40.69846</stringProp>
                  <stringProp name="-1913469859">70.36984</stringProp>
                  <stringProp name="372037787">BillIng Test ${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="-39748714">Shipping Test${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="811611208">Quote Test${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="-1309913475">Additional Test${__RandomString(2,123456789)}</stringProp>
                  <stringProp name="-1732530987">test${__RandomString(2,123456789)}@gmail.com</stringProp>
                  <stringProp name="426983513">${__RandomString(9,123456789)}</stringProp>
                  <stringProp name="1600595541">${__RandomString(5,123456789)}</stringProp>
                  <stringProp name="253981687">8006g000000DWKgAAO</stringProp>
                  <stringProp name="97196323">false</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Quote" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceQuoteAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1282060045">&quot;Name&quot;:&quot;${NameUpdate}&quot;</stringProp>
                <stringProp name="1590397709">&quot;Pricebook2Id&quot;:&quot;${Pricebook2IdUpdate}&quot;</stringProp>
                <stringProp name="1451036609">&quot;ContactId&quot;:&quot;${ContactIdUpdate}&quot;</stringProp>
                <stringProp name="1329127005">&quot;ShippingHandling&quot;:${ShippingHandlingUpdate}</stringProp>
                <stringProp name="789631905">&quot;Tax&quot;:${TaxUpdate}</stringProp>
                <stringProp name="-459473875">&quot;Status&quot;:&quot;${StatusUpdate}&quot;</stringProp>
                <stringProp name="-1028835507">&quot;ExpirationDate&quot;:&quot;${ExpirationDateUpdate}&quot;</stringProp>
                <stringProp name="1437729667">&quot;Description&quot;:&quot;${DescriptionUpdate}&quot;</stringProp>
                <stringProp name="571459079">&quot;BillingStreet&quot;:&quot;${BillingStreetUpdate}&quot;</stringProp>
                <stringProp name="30230679">&quot;BillingCity&quot;:&quot;${BillingCityUpdate}&quot;</stringProp>
                <stringProp name="-1993909139">&quot;BillingState&quot;:&quot;${BillingStateUpdate}&quot;</stringProp>
                <stringProp name="-2029366927">&quot;BillingPostalCode&quot;:&quot;${BillingPostalCodeUpdate}&quot;</stringProp>
                <stringProp name="-7526771">&quot;BillingCountry&quot;:&quot;${BillingCountryUpdate}&quot;</stringProp>
                <stringProp name="-1316243423">&quot;BillingLatitude&quot;:${BillingLatitudeUpdate}</stringProp>
                <stringProp name="-760174309">&quot;BillingLongitude&quot;:${BillingLongitudeUpdate}</stringProp>
                <stringProp name="2026639053">&quot;ShippingStreet&quot;:&quot;${ShippingStreetUpdate}&quot;</stringProp>
                <stringProp name="-745599283">&quot;ShippingCity&quot;:&quot;${ShippingCityUpdate}&quot;</stringProp>
                <stringProp name="-376834287">&quot;ShippingState&quot;:&quot;${ShippingStateUpdate}&quot;</stringProp>
                <stringProp name="1950431533">&quot;ShippingPostalCode&quot;:&quot;${ShippingPostalCodeUpdate}&quot;</stringProp>
                <stringProp name="1611425307">&quot;ShippingCountry&quot;:&quot;${ShippingCountryUpdate}&quot;</stringProp>
                <stringProp name="1549341967">&quot;ShippingLatitude&quot;:${ShippingLatitudeUpdate}</stringProp>
                <stringProp name="-849076383">&quot;ShippingLongitude&quot;:${ShippingLongitudeUpdate}</stringProp>
                <stringProp name="1032700991">&quot;QuoteToStreet&quot;:&quot;${QuoteToStreetUpdate}&quot;</stringProp>
                <stringProp name="-455316529">&quot;QuoteToCity&quot;:&quot;${QuoteToCityUpdate}&quot;</stringProp>
                <stringProp name="-1923653395">&quot;QuoteToState&quot;:&quot;${QuoteToStateUpdate}&quot;</stringProp>
                <stringProp name="1743799721">&quot;QuoteToPostalCode&quot;:&quot;${QuoteToPostalCodeUpdate}&quot;</stringProp>
                <stringProp name="938120205">&quot;QuoteToCountry&quot;:&quot;${QuoteToCountryUpdate}&quot;</stringProp>
                <stringProp name="-370596447">&quot;QuoteToLatitude&quot;:${QuoteToLatitudeUpdate}</stringProp>
                <stringProp name="-238665133">&quot;QuoteToLongitude&quot;:${QuoteToLongitudeUpdate}</stringProp>
                <stringProp name="-170583699">&quot;AdditionalStreet&quot;:&quot;${AdditionalStreetUpdate}&quot;</stringProp>
                <stringProp name="-1862084307">&quot;AdditionalCity&quot;:&quot;${AdditionalCityUpdate}&quot;</stringProp>
                <stringProp name="-400813473">&quot;AdditionalState&quot;:&quot;${AdditionalStateUpdate}&quot;</stringProp>
                <stringProp name="1581044109">&quot;AdditionalPostalCode&quot;:&quot;${AdditionalPostalCodeUpdate}&quot;</stringProp>
                <stringProp name="1080842985">&quot;AdditionalCountry&quot;:&quot;${AdditionalCountryUpdate}&quot;</stringProp>
                <stringProp name="728423901">&quot;AdditionalLatitude&quot;:${AdditionalLatitudeUpdate}</stringProp>
                <stringProp name="-889840575">&quot;AdditionalLongitude&quot;:${AdditionalLongitudeUpdate}</stringProp>
                <stringProp name="-1716876585">&quot;BillingName&quot;:&quot;${BillingNameUpdate}&quot;</stringProp>
                <stringProp name="-949652787">&quot;ShippingName&quot;:&quot;${ShippingNameUpdate}&quot;</stringProp>
                <stringProp name="2092543503">&quot;QuoteToName&quot;:&quot;${QuoteToNameUpdate}&quot;</stringProp>
                <stringProp name="-365165267">&quot;AdditionalName&quot;:&quot;${AdditionalNameUpdate}&quot;</stringProp>
                <stringProp name="-710195197">&quot;Email&quot;:&quot;${EmailUpdate}&quot;</stringProp>
                <stringProp name="-246863577">&quot;Phone&quot;:&quot;${PhoneUpdate}&quot;</stringProp>
                <stringProp name="-244447803">&quot;Fax&quot;:&quot;${FaxUpdate}&quot;</stringProp>
                <stringProp name="-306909875">&quot;ContractId&quot;:&quot;${ContractIdUpdate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Quote" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceQuoteAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Quote List" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceQuoteAPI}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-585480101">&quot;recentItems&quot;:</stringProp>
                <stringProp name="1892651281">&quot;attributes&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EmailMessage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create EmailMessage" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;ParentId&quot;:&quot;${ParentId}&quot;,&#xd;
&quot;TextBody&quot;:&quot;${TextBody}&quot;,&#xd;
&quot;HtmlBody&quot;:&quot;${HtmlBody}&quot;,&#xd;
&quot;Headers&quot;: &quot;${Headers}&quot;,&#xd;
&quot;Subject&quot;:&quot;${Subject}&quot;,&#xd;
&quot;FromName&quot;:&quot;${FromName}&quot;,&#xd;
&quot;FromAddress&quot;:&quot;${FromAddress}&quot;,&#xd;
&quot;ToAddress&quot;:&quot;${ToAddress}&quot;,&#xd;
&quot;ValidatedFromAddress&quot;:&quot;&quot;,&#xd;
&quot;CcAddress&quot;:&quot;${CcAddress}&quot;,&#xd;
&quot;BccAddress&quot;:&quot;${BccAddress}&quot;,&#xd;
&quot;Incoming&quot;:&quot;${Incoming}&quot;,&#xd;
&quot;Status&quot;:&quot;${Status}&quot;,&#xd;
&quot;MessageDate&quot;:&quot;${MessageDate}&quot;,&#xd;
&quot;ReplyToEmailMessageId&quot;:&quot;${ReplyToEmailMessageId}&quot;,&#xd;
&quot;MessageIdentifier&quot;:&quot;${MessageIdentifier}&quot;,&#xd;
&quot;ThreadIdentifier&quot;:&quot;${ThreadIdentifier}&quot;,&#xd;
&quot;IsClientManaged&quot;:&quot;${IsClientManaged}&quot;,&#xd;
&quot;RelatedToId&quot;:&quot;${RelatedToId}&quot;,&#xd;
&quot;IsTracked&quot;:&quot;${IsTracked}&quot;,&#xd;
&quot;FirstOpenedDate&quot;:&quot;${FirstOpenedDate}&quot;,&#xd;
&quot;LastOpenedDate&quot;:&quot;${LastOpenedDate}&quot;,&#xd;
&quot;IsBounced&quot;:&quot;${IsBounced}&quot;,&#xd;
&quot;EmailTemplateId&quot;:&quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceEmailMessageAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="1239806853">ParentId</stringProp>
                <stringProp name="-939526001">TextBody</stringProp>
                <stringProp name="-273069043">HtmlBody</stringProp>
                <stringProp name="-1835006106">Headers</stringProp>
                <stringProp name="-203231988">Subject</stringProp>
                <stringProp name="-1180203659">FromName</stringProp>
                <stringProp name="580497610">FromAddress</stringProp>
                <stringProp name="-806939431">ToAddress</stringProp>
                <stringProp name="-2140035556">ValidatedFromAddress</stringProp>
                <stringProp name="416127828">CcAddress</stringProp>
                <stringProp name="-1672829582">BccAddress</stringProp>
                <stringProp name="157441094">Incoming</stringProp>
                <stringProp name="-1808614382">Status</stringProp>
                <stringProp name="794275893">MessageDate</stringProp>
                <stringProp name="159334795">ReplyToEmailMessageId</stringProp>
                <stringProp name="1653255152">MessageIdentifier</stringProp>
                <stringProp name="1567970931">ThreadIdentifier</stringProp>
                <stringProp name="-1868040150">IsClientManaged</stringProp>
                <stringProp name="-1514074207">RelatedToId</stringProp>
                <stringProp name="356793984">IsTracked</stringProp>
                <stringProp name="35101287">FirstOpenedDate</stringProp>
                <stringProp name="54871821">LastOpenedDate</stringProp>
                <stringProp name="1494499890">IsBounced</stringProp>
                <stringProp name="-2145670191">EmailTemplateId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-658449859">
                  <stringProp name="933628181">5006g00000CeLiJAAV</stringProp>
                  <stringProp name="-692089809">This is email message</stringProp>
                  <stringProp name="1666921263">&lt;html&gt;&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;link href=&apos;https://svc.webspellchecker.net/spellcheck31/lf/scayt3/ckscayt/css/wsc.css&apos; rel=&apos;stylesheet&apos; type=&apos;text/css&apos; /&gt;&lt;/head&gt;&lt;body aria-readonly=&apos;false&apos;&gt;This is email message&lt;/body&gt;&lt;/html&gt;</stringProp>
                  <stringProp name="-2137403731">Header</stringProp>
                  <stringProp name="67066748">Email</stringProp>
                  <stringProp name="2603186">Test</stringProp>
                  <stringProp name="-1371246320">test1@gmail.com</stringProp>
                  <stringProp name="583700645">test@yahoo.com</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="-2001951485">testABC@yahoo.com</stringProp>
                  <stringProp name="-686376205">test123@yahoo.com</stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="48">0</stringProp>
                  <stringProp name="131670553">2020-03-11</stringProp>
                  <stringProp name="-1390755840">02s6g0000098KRaAAM</stringProp>
                  <stringProp name="-397449942">Message1</stringProp>
                  <stringProp name="-454631677">The ID of the email thread the email message belongs to</stringProp>
                  <stringProp name="3569038">true</stringProp>
                  <stringProp name="-1199712386">0066g00001VAkeEAAT</stringProp>
                  <stringProp name="3569038">true</stringProp>
                  <stringProp name="131670553">2020-03-11</stringProp>
                  <stringProp name="131670553">2020-03-11</stringProp>
                  <stringProp name="97196323">false</stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get EmailMessage" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceEmailMessageAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-34476828">&quot;ParentId&quot;:&quot;${ParentId}&quot;</stringProp>
                <stringProp name="1363991844">&quot;TextBody&quot;:&quot;${TextBody}&quot;</stringProp>
                <stringProp name="266389988">&quot;HtmlBody&quot;:&quot;${HtmlBody}&quot;</stringProp>
                <stringProp name="-291410130">&quot;Headers&quot;:&quot;${Headers}&quot;</stringProp>
                <stringProp name="-1697214854">&quot;Subject&quot;:&quot;${Subject}&quot;</stringProp>
                <stringProp name="-1860103452">&quot;FromName&quot;:&quot;${FromName}&quot;</stringProp>
                <stringProp name="-209391754">&quot;FromAddress&quot;:&quot;${FromAddress}&quot;</stringProp>
                <stringProp name="98586388">&quot;ToAddress&quot;:&quot;${ToAddress}&quot;</stringProp>
                <stringProp name="402084682">&quot;CcAddress&quot;:&quot;${CcAddress}&quot;</stringProp>
                <stringProp name="-1651957948">&quot;BccAddress&quot;:&quot;${BccAddress}&quot;</stringProp>
                <stringProp name="-121828032">&quot;Incoming&quot;:${Incoming}</stringProp>
                <stringProp name="-303773500">&quot;Status&quot;:&quot;${Status}&quot;</stringProp>
                <stringProp name="1042958072">&quot;ReplyToEmailMessageId&quot;:&quot;${ReplyToEmailMessageId}&quot;</stringProp>
                <stringProp name="817588866">&quot;MessageIdentifier&quot;:&quot;${MessageIdentifier}&quot;</stringProp>
                <stringProp name="-706542172">&quot;ThreadIdentifier&quot;:&quot;${ThreadIdentifier}&quot;</stringProp>
                <stringProp name="-1391796598">&quot;IsClientManaged&quot;:${IsClientManaged}</stringProp>
                <stringProp name="1001647012">&quot;RelatedToId&quot;:&quot;${RelatedToId}&quot;</stringProp>
                <stringProp name="1395576458">&quot;IsTracked&quot;:${IsTracked}</stringProp>
                <stringProp name="1329472818">&quot;FirstOpenedDate&quot;:&quot;${FirstOpenedDate}</stringProp>
                <stringProp name="-46216706">&quot;LastOpenedDate&quot;:&quot;${LastOpenedDate}</stringProp>
                <stringProp name="-302127798">&quot;IsBounced&quot;:${IsBounced}</stringProp>
                <stringProp name="-598661098">&quot;MessageDate&quot;:&quot;${MessageDate}</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete EmailMessage" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceEmailMessageAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Opportunity item" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Opportunity item" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;OpportunityId&quot;:&quot;${OpportunityId}&quot;,&#xd;
&quot;SortOrder&quot;:&quot;${SortOrder}&quot;,&#xd;
&quot;PricebookEntryId&quot;:&quot;${PricebookEntryId}&quot;,&#xd;
&quot;Product2Id&quot;:&quot;${Product2Id}&quot;,&#xd;
&quot;Quantity&quot;:&quot;${Quantity}&quot;,&#xd;
&quot;TotalPrice&quot;:&quot;${TotalPrice}&quot;,&#xd;
&quot;ServiceDate&quot;:&quot;${ServiceDate}&quot;,&#xd;
&quot;Description&quot;:&quot;${Description}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOpportunityItemAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="259766062">OpportunityId</stringProp>
                <stringProp name="1977193520">SortOrder</stringProp>
                <stringProp name="260951355">PricebookEntryId</stringProp>
                <stringProp name="-548537922">Product2Id</stringProp>
                <stringProp name="-1220360021">Quantity</stringProp>
                <stringProp name="1274162309">TotalPrice</stringProp>
                <stringProp name="-261001245">ServiceDate</stringProp>
                <stringProp name="-56677412">Description</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="1483847946">
                  <stringProp name="-1195660810">0066g00001VAkiQAAT</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="-497451124">01u6g000000S34fAAC</stringProp>
                  <stringProp name="-1294223652">01t6g000002BnEbAAK</stringProp>
                  <stringProp name="49">1</stringProp>
                  <stringProp name="1448635039">100000</stringProp>
                  <stringProp name="131700316">2020-04-04</stringProp>
                  <stringProp name="-1272321218">This is Opportunity Line Item</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">true</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Opportunity item" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOpportunityItemAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1928688642">&quot;OpportunityId&quot;:&quot;${OpportunityId}&quot;</stringProp>
                <stringProp name="-566636406">&quot;SortOrder&quot;:${SortOrder}</stringProp>
                <stringProp name="1874023076">&quot;PricebookEntryId&quot;:&quot;${PricebookEntryId}&quot;</stringProp>
                <stringProp name="702995908">&quot;Product2Id&quot;:&quot;${Product2Id}&quot;</stringProp>
                <stringProp name="1398496632">&quot;Quantity&quot;:${Quantity}.0</stringProp>
                <stringProp name="-372507068">&quot;TotalPrice&quot;:${TotalPrice}.0</stringProp>
                <stringProp name="-137394022">&quot;Description&quot;:&quot;${Description}&quot;</stringProp>
                <stringProp name="-2062362840">&quot;ServiceDate&quot;:&quot;${ServiceDate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Opportunity item" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;Quantity&quot;:&quot;${QuantityUpdate}&quot;,&#xd;
&quot;TotalPrice&quot;:&quot;${TotalPriceUpdate}&quot;,&#xd;
&quot;ServiceDate&quot;:&quot;${ServiceDateUpdate}&quot;,&#xd;
&quot;Description&quot;:&quot;${DescriptionUpdate}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOpportunityItemAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1992588972">QuantityUpdate</stringProp>
                <stringProp name="-1281156690">TotalPriceUpdate</stringProp>
                <stringProp name="1793973900">ServiceDateUpdate</stringProp>
                <stringProp name="-2104296507">DescriptionUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-324676868">
                  <stringProp name="50">2</stringProp>
                  <stringProp name="47653682">20000</stringProp>
                  <stringProp name="131700379">2020-04-25</stringProp>
                  <stringProp name="-620858747">Update description for item</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Opportunity item" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOpportunityItemAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1698290385">&quot;Quantity&quot;:${QuantityUpdate}.0</stringProp>
                <stringProp name="-1447691013">&quot;TotalPrice&quot;:${TotalPriceUpdate}.0</stringProp>
                <stringProp name="1437729667">&quot;Description&quot;:&quot;${DescriptionUpdate}&quot;</stringProp>
                <stringProp name="578269073">&quot;ServiceDate&quot;:&quot;${ServiceDateUpdate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Opportunity item" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForceOpportunityItemAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Payment" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Payment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;PaymentGroupId&quot;:&quot;&quot;,&#xd;
&quot;AccountId&quot;:&quot;${AccountId}&quot;,&#xd;
&quot;PaymentAuthorizationId&quot;:&quot;${PaymentAuthorizationId}&quot;,&#xd;
&quot;Date&quot;:&quot;${Date}&quot;,&#xd;
&quot;CancellationDate&quot;:&quot;${CancellationDate}&quot;,&#xd;
&quot;Amount&quot;:&quot;${Amount}&quot;,&#xd;
&quot;Status&quot;:&quot;${Status}&quot;,&#xd;
&quot;Type&quot;:&quot;${Type}&quot;,&#xd;
&quot;ProcessingMode&quot;:&quot;${ProcessingMode}&quot;,&#xd;
&quot;GatewayRefNumber&quot;:&quot;${GatewayRefNumber}&quot;,&#xd;
&quot;GatewayResultCode&quot;:&quot;${GatewayResultCode}&quot;,&#xd;
&quot;SfResultCode&quot;:&quot;${SfResultCode}&quot;,&#xd;
&quot;GatewayDate&quot;:&quot;${GatewayDate}&quot;,&#xd;
&quot;CancellationGatewayRefNumber&quot;:&quot;${CancellationGatewayRefNumber}&quot;,&#xd;
&quot;CancellationGatewayResultCode&quot;:&quot;${CancellationGatewayResultCode}&quot;,&#xd;
&quot;CancellationSfResultCode&quot;:&quot;${CancellationSfResultCode}&quot;,&#xd;
&quot;CancellationGatewayDate&quot;:&quot;${CancellationGatewayDate}&quot;,&#xd;
&quot;Comments&quot;:&quot;${Comments}&quot;,&#xd;
&quot;EffectiveDate&quot;:&quot;${EffectiveDate}&quot;,&#xd;
&quot;CancellationEffectiveDate&quot;:&quot;${CancellationEffectiveDate}&quot;,&#xd;
&quot;GatewayResultCodeDescription&quot;:&quot;${GatewayResultCodeDescription}&quot;,&#xd;
&quot;GatewayRefDetails&quot;:&quot;${GatewayRefDetails}&quot;,&#xd;
&quot;IpAddress&quot;:&quot;&quot;,&#xd;
&quot;MacAddress&quot;:&quot;&quot;,&#xd;
&quot;Phone&quot;:&quot;${Phone}&quot;,&#xd;
&quot;Email&quot;:&quot;${Email}&quot;,&#xd;
&quot;PaymentGatewayId&quot;:&quot;&quot;,&#xd;
&quot;PaymentMethodId&quot;:&quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForcePaymentAPI}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="-1704240332">PaymentGroupId</stringProp>
                <stringProp name="176937992">AccountId</stringProp>
                <stringProp name="141808814">PaymentAuthorizationId</stringProp>
                <stringProp name="2122702">Date</stringProp>
                <stringProp name="-36505743">CancellationDate</stringProp>
                <stringProp name="1964981368">Amount</stringProp>
                <stringProp name="-1808614382">Status</stringProp>
                <stringProp name="2622298">Type</stringProp>
                <stringProp name="-806230154">ProcessingMode</stringProp>
                <stringProp name="-1678348296">GatewayRefNumber</stringProp>
                <stringProp name="693301486">GatewayResultCode</stringProp>
                <stringProp name="644630141">SfResultCode</stringProp>
                <stringProp name="1232048114">GatewayDate</stringProp>
                <stringProp name="-1194219749">CancellationGatewayRefNumber</stringProp>
                <stringProp name="-1478582741">CancellationGatewayResultCode</stringProp>
                <stringProp name="91129632">CancellationSfResultCode</stringProp>
                <stringProp name="1352740591">CancellationGatewayDate</stringProp>
                <stringProp name="-537771500">Comments</stringProp>
                <stringProp name="-131427883">EffectiveDate</stringProp>
                <stringProp name="-110074478">CancellationEffectiveDate</stringProp>
                <stringProp name="-566363602">GatewayResultCodeDescription</stringProp>
                <stringProp name="-1225919629">GatewayRefDetails</stringProp>
                <stringProp name="-656966483">IpAddress</stringProp>
                <stringProp name="-219569211">MacAddress</stringProp>
                <stringProp name="77090126">Phone</stringProp>
                <stringProp name="67066748">Email</stringProp>
                <stringProp name="-1263737031">PaymentGatewayId</stringProp>
                <stringProp name="2053574114">PaymentMethodId</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-2056742489">
                  <stringProp name="0"></stringProp>
                  <stringProp name="201981450">0016g00000EHGqyAAH</stringProp>
                  <stringProp name="105189735">0Xc6g0000004ChmCAE</stringProp>
                  <stringProp name="131670589">2020-03-26</stringProp>
                  <stringProp name="131759895">2020-06-01</stringProp>
                  <stringProp name="48625">100</stringProp>
                  <stringProp name="66292097">Draft</stringProp>
                  <stringProp name="-2077728986">Capture</stringProp>
                  <stringProp name="-1756117013">External</stringProp>
                  <stringProp name="1508416">1111</stringProp>
                  <stringProp name="48657">111</stringProp>
                  <stringProp name="-202516509">Success</stringProp>
                  <stringProp name="131670590">2020-03-27</stringProp>
                  <stringProp name="48690">123</stringProp>
                  <stringProp name="49650">222</stringProp>
                  <stringProp name="1507454">1010</stringProp>
                  <stringProp name="131759895">2020-06-01</stringProp>
                  <stringProp name="1615865899">this is comment</stringProp>
                  <stringProp name="131730104">2020-05-01</stringProp>
                  <stringProp name="131670591">2020-03-28</stringProp>
                  <stringProp name="-591599482">ResultCode Description</stringProp>
                  <stringProp name="-358773967">Gateway Reference Details</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="-1682718176">5985256662</stringProp>
                  <stringProp name="399893507">test@gmail.com</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="id" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">id</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1601759544">Created</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_message</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49587">201</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Payment" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForcePaymentAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2010550194">&quot;AccountId&quot;:&quot;${AccountId}&quot;</stringProp>
                <stringProp name="-1006620348">&quot;PaymentAuthorizationId&quot;:&quot;${PaymentAuthorizationId}&quot;</stringProp>
                <stringProp name="-1547224866">&quot;Date&quot;:&quot;${Date}</stringProp>
                <stringProp name="-675844226">&quot;CancellationDate&quot;:&quot;${CancellationDate}</stringProp>
                <stringProp name="219135070">&quot;Amount&quot;:${Amount}.0</stringProp>
                <stringProp name="-303773500">&quot;Status&quot;:&quot;${Status}&quot;</stringProp>
                <stringProp name="36913284">&quot;Type&quot;:&quot;${Type}&quot;</stringProp>
                <stringProp name="-688813244">&quot;ProcessingMode&quot;:&quot;${ProcessingMode}&quot;</stringProp>
                <stringProp name="-1935289660">&quot;GatewayRefNumber&quot;:&quot;${GatewayRefNumber}&quot;</stringProp>
                <stringProp name="1370428158">&quot;GatewayResultCode&quot;:&quot;${GatewayResultCode}&quot;</stringProp>
                <stringProp name="-1396588572">&quot;SfResultCode&quot;:&quot;${SfResultCode}&quot;</stringProp>
                <stringProp name="-1347735076">&quot;GatewayDate&quot;:&quot;${GatewayDate}</stringProp>
                <stringProp name="-852829276">&quot;CancellationGatewayRefNumber&quot;:&quot;${CancellationGatewayRefNumber}&quot;</stringProp>
                <stringProp name="-1261034952">&quot;CancellationGatewayResultCode&quot;:&quot;${CancellationGatewayResultCode}&quot;</stringProp>
                <stringProp name="-1549349180">&quot;CancellationSfResultCode&quot;:&quot;${CancellationSfResultCode}&quot;</stringProp>
                <stringProp name="987429922">&quot;CancellationGatewayDate&quot;:&quot;${CancellationGatewayDate}</stringProp>
                <stringProp name="-995248828">&quot;Comments&quot;:&quot;${Comments}&quot;</stringProp>
                <stringProp name="-794509098">&quot;EffectiveDate&quot;:&quot;${EffectiveDate}</stringProp>
                <stringProp name="-1853173412">&quot;CancellationEffectiveDate&quot;:&quot;${CancellationEffectiveDate}</stringProp>
                <stringProp name="-337989116">&quot;GatewayResultCodeDescription&quot;:&quot;${GatewayResultCodeDescription}&quot;</stringProp>
                <stringProp name="518032328">&quot;GatewayRefDetails&quot;:&quot;${GatewayRefDetails}&quot;</stringProp>
                <stringProp name="1183627582">&quot;Phone&quot;:&quot;${Phone}&quot;</stringProp>
                <stringProp name="724970778">&quot;Email&quot;:&quot;${Email}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Payment" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
&quot;PaymentGroupId&quot;:&quot;&quot;,&#xd;
&quot;AccountId&quot;:&quot;${AccountIdUpdate}&quot;,&#xd;
&quot;PaymentAuthorizationId&quot;:&quot;${PaymentAuthorizationIdUpdate}&quot;,&#xd;
&quot;Date&quot;:&quot;${DateUpdate}&quot;,&#xd;
&quot;CancellationDate&quot;:&quot;${CancellationDateUpdate}&quot;,&#xd;
&quot;Amount&quot;:&quot;${AmountUpdate}&quot;,&#xd;
&quot;Status&quot;:&quot;${StatusUpdate}&quot;,&#xd;
&quot;Type&quot;:&quot;${TypeUpdate}&quot;,&#xd;
&quot;GatewayRefNumber&quot;:&quot;${GatewayRefNumberUpdate}&quot;,&#xd;
&quot;GatewayResultCode&quot;:&quot;${GatewayResultCodeUpdate}&quot;,&#xd;
&quot;SfResultCode&quot;:&quot;${SfResultCodeUpdate}&quot;,&#xd;
&quot;GatewayDate&quot;:&quot;${GatewayDateUpdate}&quot;,&#xd;
&quot;CancellationGatewayRefNumber&quot;:&quot;${CancellationGatewayRefNumberUpdate}&quot;,&#xd;
&quot;CancellationGatewayResultCode&quot;:&quot;${CancellationGatewayResultCodeUpdate}&quot;,&#xd;
&quot;CancellationSfResultCode&quot;:&quot;${CancellationSfResultCodeUpdate}&quot;,&#xd;
&quot;CancellationGatewayDate&quot;:&quot;${CancellationGatewayDateUpdate}&quot;,&#xd;
&quot;Comments&quot;:&quot;${CommentsUpdate}&quot;,&#xd;
&quot;EffectiveDate&quot;:&quot;${EffectiveDateUpdate}&quot;,&#xd;
&quot;CancellationEffectiveDate&quot;:&quot;${CancellationEffectiveDateUpdate}&quot;,&#xd;
&quot;GatewayResultCodeDescription&quot;:&quot;${GatewayResultCodeDescriptionUpdate}&quot;,&#xd;
&quot;GatewayRefDetails&quot;:&quot;${GatewayRefDetailsUpdate}&quot;,&#xd;
&quot;IpAddress&quot;:&quot;&quot;,&#xd;
&quot;MacAddress&quot;:&quot;&quot;,&#xd;
&quot;Phone&quot;:&quot;${PhoneUpdate}&quot;,&#xd;
&quot;Email&quot;:&quot;${EmailUpdate}&quot;,&#xd;
&quot;PaymentGatewayId&quot;:&quot;&quot;,&#xd;
&quot;PaymentMethodId&quot;:&quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForcePaymentAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">PATCH</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="191121693">PaymentGroupIdUpdate</stringProp>
                <stringProp name="-808592655">AccountIdUpdate</stringProp>
                <stringProp name="-618250473">PaymentAuthorizationIdUpdate</stringProp>
                <stringProp name="-1716324809">DateUpdate</stringProp>
                <stringProp name="-326958182">CancellationDateUpdate</stringProp>
                <stringProp name="991111009">AmountUpdate</stringProp>
                <stringProp name="-1983181957">StatusUpdate</stringProp>
                <stringProp name="623885507">TypeUpdate</stringProp>
                <stringProp name="271391711">ProcessingModeUpdate</stringProp>
                <stringProp name="-174736671">GatewayRefNumberUpdate</stringProp>
                <stringProp name="13577047">GatewayResultCodeUpdate</stringProp>
                <stringProp name="91216294">SfResultCodeUpdate</stringProp>
                <stringProp name="1850832731">GatewayDateUpdate</stringProp>
                <stringProp name="1952828356">CancellationGatewayRefNumberUpdate</stringProp>
                <stringProp name="1543583444">CancellationGatewayResultCodeUpdate</stringProp>
                <stringProp name="1482281993">CancellationSfResultCodeUpdate</stringProp>
                <stringProp name="-321051496">CancellationGatewayDateUpdate</stringProp>
                <stringProp name="-1222998019">CommentsUpdate</stringProp>
                <stringProp name="-1288813826">EffectiveDateUpdate</stringProp>
                <stringProp name="-1115450117">CancellationEffectiveDateUpdate</stringProp>
                <stringProp name="1797145751">GatewayResultCodeDescriptionUpdate</stringProp>
                <stringProp name="-163744228">GatewayRefDetailsUpdate</stringProp>
                <stringProp name="2001054678">IpAddressUpdate</stringProp>
                <stringProp name="1148461294">MacAddressUpdate</stringProp>
                <stringProp name="670416823">PhoneUpdate</stringProp>
                <stringProp name="-692522139">EmailUpdate</stringProp>
                <stringProp name="-1580466846">PaymentGatewayIdUpdate</stringProp>
                <stringProp name="-858865333">PaymentMethodIdUpdate</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="-1663483893">
                  <stringProp name="0"></stringProp>
                  <stringProp name="129648883">0016g00000EHFCPAA5</stringProp>
                  <stringProp name="105189735">0Xc6g0000004ChmCAE</stringProp>
                  <stringProp name="131700380">2020-04-26</stringProp>
                  <stringProp name="131759925">2020-06-10</stringProp>
                  <stringProp name="52469">500</stringProp>
                  <stringProp name="66292097">Draft</stringProp>
                  <stringProp name="-2077728986">Capture</stringProp>
                  <stringProp name="-1756117013">External</stringProp>
                  <stringProp name="1539200">2222</stringProp>
                  <stringProp name="48626">101</stringProp>
                  <stringProp name="-202516509">Success</stringProp>
                  <stringProp name="131670592">2020-03-29</stringProp>
                  <stringProp name="1450574400">123321</stringProp>
                  <stringProp name="47715253">22225</stringProp>
                  <stringProp name="1448664861">101010</stringProp>
                  <stringProp name="131759926">2020-06-11</stringProp>
                  <stringProp name="1615865899">this is comment</stringProp>
                  <stringProp name="131730104">2020-05-01</stringProp>
                  <stringProp name="131670591">2020-03-28</stringProp>
                  <stringProp name="-591599482">ResultCode Description</stringProp>
                  <stringProp name="-358773967">Gateway Reference Details</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="-1867378635">123456789</stringProp>
                  <stringProp name="399893507">test@gmail.com</stringProp>
                  <stringProp name="0"></stringProp>
                  <stringProp name="0"></stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Payment" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForcePaymentAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1246930789">&quot;AccountId&quot;:&quot;${AccountIdUpdate}&quot;</stringProp>
                <stringProp name="1973945517">&quot;PaymentAuthorizationId&quot;:&quot;${PaymentAuthorizationIdUpdate}&quot;</stringProp>
                <stringProp name="804856917">&quot;Date&quot;:&quot;${DateUpdate}</stringProp>
                <stringProp name="1347281653">&quot;CancellationDate&quot;:&quot;${CancellationDateUpdate}</stringProp>
                <stringProp name="1310015381">&quot;Amount&quot;:${AmountUpdate}.0</stringProp>
                <stringProp name="-459473875">&quot;Status&quot;:&quot;${StatusUpdate}&quot;</stringProp>
                <stringProp name="-1197300755">&quot;Type&quot;:&quot;${TypeUpdate}&quot;</stringProp>
                <stringProp name="-1393654227">&quot;GatewayRefNumber&quot;:&quot;${GatewayRefNumberUpdate}&quot;</stringProp>
                <stringProp name="1378956007">&quot;GatewayResultCode&quot;:&quot;${GatewayResultCodeUpdate}&quot;</stringProp>
                <stringProp name="-831775923">&quot;SfResultCode&quot;:&quot;${SfResultCodeUpdate}&quot;</stringProp>
                <stringProp name="192014035">&quot;GatewayDate&quot;:&quot;${GatewayDateUpdate}</stringProp>
                <stringProp name="822175501">&quot;CancellationGatewayRefNumber&quot;:&quot;${CancellationGatewayRefNumberUpdate}&quot;</stringProp>
                <stringProp name="-172331359">&quot;CancellationGatewayResultCode&quot;:&quot;${CancellationGatewayResultCodeUpdate}&quot;</stringProp>
                <stringProp name="641892909">&quot;CancellationSfResultCode&quot;:&quot;${CancellationSfResultCodeUpdate}&quot;</stringProp>
                <stringProp name="1494639769">&quot;CancellationGatewayDate&quot;:&quot;${CancellationGatewayDateUpdate}</stringProp>
                <stringProp name="925010093">&quot;Comments&quot;:&quot;${CommentsUpdate}&quot;</stringProp>
                <stringProp name="727634509">&quot;EffectiveDate&quot;:&quot;${EffectiveDateUpdate}</stringProp>
                <stringProp name="1006364243">&quot;CancellationEffectiveDate&quot;:&quot;${CancellationEffectiveDateUpdate}</stringProp>
                <stringProp name="-1672546963">&quot;GatewayResultCodeDescription&quot;:&quot;${GatewayResultCodeDescriptionUpdate}&quot;</stringProp>
                <stringProp name="1611885617">&quot;GatewayRefDetails&quot;:&quot;${GatewayRefDetailsUpdate}&quot;</stringProp>
                <stringProp name="-246863577">&quot;Phone&quot;:&quot;${PhoneUpdate}&quot;</stringProp>
                <stringProp name="-710195197">&quot;Email&quot;:&quot;${EmailUpdate}&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Payment" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForcePaymentAPI}${id}</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49590">204</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Payment  List" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${salesForceUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${salesForcePaymentAPI}</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${SessionId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-585480101">&quot;recentItems&quot;:</stringProp>
                <stringProp name="1892651281">&quot;attributes&quot;:</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
